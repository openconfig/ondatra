/*
Package ospfv3 is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema.

This package was generated by ygnmi version: v0.11.1: (ygot: v0.29.20)
using the following YANG input files:
  - models-yang/models/bgp/open-traffic-generator-bgp.yang
  - models-yang/models/dhcp/v4client/open-traffic-generator-dhcpv4client.yang
  - models-yang/models/dhcp/v4server/open-traffic-generator-dhcpv4server.yang
  - models-yang/models/dhcp/v6client/open-traffic-generator-dhcpv6client.yang
  - models-yang/models/dhcp/v6server/open-traffic-generator-dhcpv6server.yang
  - models-yang/models/discovery/open-traffic-generator-discovery.yang
  - models-yang/models/discovery/open-traffic-generator-discovery-interfaces.yang
  - models-yang/models/flow/open-traffic-generator-flow.yang
  - models-yang/models/interface/open-traffic-generator-port.yang
  - models-yang/models/isis/open-traffic-generator-isis.yang
  - models-yang/models/lacp/open-traffic-generator-lacp.yang
  - models-yang/models/lag/open-traffic-generator-lag.yang
  - models-yang/models/lldp/open-traffic-generator-lldp.yang
  - models-yang/models/ospfv2/open-traffic-generator-ospfv2.yang
  - models-yang/models/ospfv3/open-traffic-generator-ospfv3.yang
  - models-yang/models/platform/open-traffic-generator-platform.yang
  - models-yang/models/rsvp/open-traffic-generator-rsvp.yang
  - models-yang/models/types/open-traffic-generator-types.yang

Imported modules were sourced from:
  - models-yang/models/...
*/
package ospfv3

import (
	"reflect"

	oc "github.com/openconfig/ondatra/gnmi/otg"
	"github.com/openconfig/ygnmi/ygnmi"
	"github.com/openconfig/ygot/ygot"
	"github.com/openconfig/ygot/ytypes"
)

// Ospfv3Router_NamePath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/name YANG schema element.
type Ospfv3Router_NamePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_NamePathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/name YANG schema element.
type Ospfv3Router_NamePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/name"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/name"
func (n *Ospfv3Router_NamePath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/name"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/name"
func (n *Ospfv3Router_NamePathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "name"
//	Path from root:       ""
func (n *Ospfv3Router_NamePath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"Ospfv3Router",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "name"
//	Path from root:       ""
func (n *Ospfv3Router_NamePathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3RouterPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router YANG schema element.
type Ospfv3RouterPath struct {
	*ygnmi.NodePath
}

// Ospfv3RouterPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router YANG schema element.
type Ospfv3RouterPathAny struct {
	*ygnmi.NodePath
}

// Ospfv3RouterPathMap represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router YANG schema element.
type Ospfv3RouterPathMap struct {
	*ygnmi.NodePath
}

// Ospfv3RouterPathMapAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router YANG schema element.
type Ospfv3RouterPathMapAny struct {
	*ygnmi.NodePath
}

// Counters (container): Counters of an individual OSPFv3 router.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/counters"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters"
func (n *Ospfv3RouterPath) Counters() *Ospfv3Router_CountersPath {
	ps := &Ospfv3Router_CountersPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Counters (container): Counters of an individual OSPFv3 router.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/counters"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters"
func (n *Ospfv3RouterPathAny) Counters() *Ospfv3Router_CountersPathAny {
	ps := &Ospfv3Router_CountersPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// LinkStateDatabase (container): This sub-module describes a YANG model for the OSPF Link State
// Database (LSDB).
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-database"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database"
func (n *Ospfv3RouterPath) LinkStateDatabase() *Ospfv3Router_LinkStateDatabasePath {
	ps := &Ospfv3Router_LinkStateDatabasePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "link-state-database"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// LinkStateDatabase (container): This sub-module describes a YANG model for the OSPF Link State
// Database (LSDB).
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-database"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database"
func (n *Ospfv3RouterPathAny) LinkStateDatabase() *Ospfv3Router_LinkStateDatabasePathAny {
	ps := &Ospfv3Router_LinkStateDatabasePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "link-state-database"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Name (leaf): An arbitrary name of the OSPFv3 router determined by
// the OTG configuration.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/name"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/name"
func (n *Ospfv3RouterPath) Name() *Ospfv3Router_NamePath {
	ps := &Ospfv3Router_NamePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "name"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Name (leaf): An arbitrary name of the OSPFv3 router determined by
// the OTG configuration.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/name"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/name"
func (n *Ospfv3RouterPathAny) Name() *Ospfv3Router_NamePathAny {
	ps := &Ospfv3Router_NamePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "name"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

func binarySliceToFloatSlice(in []oc.Binary) []float32 {
	converted := make([]float32, 0, len(in))
	for _, binary := range in {
		converted = append(converted, ygot.BinaryToFloat32(binary))
	}
	return converted
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3RouterPath) State() ygnmi.SingletonQuery[*oc.Ospfv3Router] {
	return ygnmi.NewSingletonQuery[*oc.Ospfv3Router](
		"Ospfv3Router",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3RouterPathAny) State() ygnmi.WildcardQuery[*oc.Ospfv3Router] {
	return ygnmi.NewWildcardQuery[*oc.Ospfv3Router](
		"Ospfv3Router",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_InDbdsPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-dbds YANG schema element.
type Ospfv3Router_Counters_InDbdsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_InDbdsPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-dbds YANG schema element.
type Ospfv3Router_Counters_InDbdsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-dbds"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-dbds"
func (n *Ospfv3Router_Counters_InDbdsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-dbds"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InDbds
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-dbds"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-dbds"
func (n *Ospfv3Router_Counters_InDbdsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-dbds"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InDbds
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_InExternalLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-external-lsas YANG schema element.
type Ospfv3Router_Counters_InExternalLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_InExternalLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-external-lsas YANG schema element.
type Ospfv3Router_Counters_InExternalLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-external-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-external-lsas"
func (n *Ospfv3Router_Counters_InExternalLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-external-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InExternalLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-external-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-external-lsas"
func (n *Ospfv3Router_Counters_InExternalLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-external-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InExternalLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_InHellosPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-hellos YANG schema element.
type Ospfv3Router_Counters_InHellosPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_InHellosPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-hellos YANG schema element.
type Ospfv3Router_Counters_InHellosPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-hellos"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-hellos"
func (n *Ospfv3Router_Counters_InHellosPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-hellos"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InHellos
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-hellos"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-hellos"
func (n *Ospfv3Router_Counters_InHellosPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-hellos"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InHellos
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_InInterAreaPrefixLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-inter-area-prefix-lsas YANG schema element.
type Ospfv3Router_Counters_InInterAreaPrefixLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_InInterAreaPrefixLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-inter-area-prefix-lsas YANG schema element.
type Ospfv3Router_Counters_InInterAreaPrefixLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-inter-area-prefix-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-inter-area-prefix-lsas"
func (n *Ospfv3Router_Counters_InInterAreaPrefixLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-inter-area-prefix-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InInterAreaPrefixLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-inter-area-prefix-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-inter-area-prefix-lsas"
func (n *Ospfv3Router_Counters_InInterAreaPrefixLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-inter-area-prefix-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InInterAreaPrefixLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_InInterAreaRouterLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-inter-area-router-lsas YANG schema element.
type Ospfv3Router_Counters_InInterAreaRouterLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_InInterAreaRouterLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-inter-area-router-lsas YANG schema element.
type Ospfv3Router_Counters_InInterAreaRouterLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-inter-area-router-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-inter-area-router-lsas"
func (n *Ospfv3Router_Counters_InInterAreaRouterLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-inter-area-router-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InInterAreaRouterLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-inter-area-router-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-inter-area-router-lsas"
func (n *Ospfv3Router_Counters_InInterAreaRouterLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-inter-area-router-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InInterAreaRouterLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_InIntraAreaPrefixLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-intra-area-prefix-lsas YANG schema element.
type Ospfv3Router_Counters_InIntraAreaPrefixLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_InIntraAreaPrefixLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-intra-area-prefix-lsas YANG schema element.
type Ospfv3Router_Counters_InIntraAreaPrefixLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-intra-area-prefix-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-intra-area-prefix-lsas"
func (n *Ospfv3Router_Counters_InIntraAreaPrefixLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-intra-area-prefix-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InIntraAreaPrefixLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-intra-area-prefix-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-intra-area-prefix-lsas"
func (n *Ospfv3Router_Counters_InIntraAreaPrefixLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-intra-area-prefix-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InIntraAreaPrefixLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_InLinkLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-link-lsas YANG schema element.
type Ospfv3Router_Counters_InLinkLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_InLinkLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-link-lsas YANG schema element.
type Ospfv3Router_Counters_InLinkLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-link-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-link-lsas"
func (n *Ospfv3Router_Counters_InLinkLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-link-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InLinkLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-link-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-link-lsas"
func (n *Ospfv3Router_Counters_InLinkLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-link-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InLinkLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_InLsAcksPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-ls-acks YANG schema element.
type Ospfv3Router_Counters_InLsAcksPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_InLsAcksPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-ls-acks YANG schema element.
type Ospfv3Router_Counters_InLsAcksPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-ls-acks"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-ls-acks"
func (n *Ospfv3Router_Counters_InLsAcksPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-ls-acks"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InLsAcks
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-ls-acks"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-ls-acks"
func (n *Ospfv3Router_Counters_InLsAcksPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-ls-acks"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InLsAcks
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_InLsRequestsPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-ls-requests YANG schema element.
type Ospfv3Router_Counters_InLsRequestsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_InLsRequestsPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-ls-requests YANG schema element.
type Ospfv3Router_Counters_InLsRequestsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-ls-requests"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-ls-requests"
func (n *Ospfv3Router_Counters_InLsRequestsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-ls-requests"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InLsRequests
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-ls-requests"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-ls-requests"
func (n *Ospfv3Router_Counters_InLsRequestsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-ls-requests"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InLsRequests
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_InLsUpdatesPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-ls-updates YANG schema element.
type Ospfv3Router_Counters_InLsUpdatesPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_InLsUpdatesPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-ls-updates YANG schema element.
type Ospfv3Router_Counters_InLsUpdatesPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-ls-updates"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-ls-updates"
func (n *Ospfv3Router_Counters_InLsUpdatesPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-ls-updates"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InLsUpdates
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-ls-updates"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-ls-updates"
func (n *Ospfv3Router_Counters_InLsUpdatesPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-ls-updates"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InLsUpdates
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_InLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-lsas YANG schema element.
type Ospfv3Router_Counters_InLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_InLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-lsas YANG schema element.
type Ospfv3Router_Counters_InLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-lsas"
func (n *Ospfv3Router_Counters_InLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-lsas"
func (n *Ospfv3Router_Counters_InLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_InNetworkLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-network-lsas YANG schema element.
type Ospfv3Router_Counters_InNetworkLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_InNetworkLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-network-lsas YANG schema element.
type Ospfv3Router_Counters_InNetworkLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-network-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-network-lsas"
func (n *Ospfv3Router_Counters_InNetworkLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-network-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InNetworkLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-network-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-network-lsas"
func (n *Ospfv3Router_Counters_InNetworkLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-network-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InNetworkLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_InNssaLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-nssa-lsas YANG schema element.
type Ospfv3Router_Counters_InNssaLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_InNssaLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-nssa-lsas YANG schema element.
type Ospfv3Router_Counters_InNssaLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-nssa-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-nssa-lsas"
func (n *Ospfv3Router_Counters_InNssaLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-nssa-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InNssaLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-nssa-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-nssa-lsas"
func (n *Ospfv3Router_Counters_InNssaLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-nssa-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InNssaLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_InRouterLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-router-lsas YANG schema element.
type Ospfv3Router_Counters_InRouterLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_InRouterLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/in-router-lsas YANG schema element.
type Ospfv3Router_Counters_InRouterLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-router-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-router-lsas"
func (n *Ospfv3Router_Counters_InRouterLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-router-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InRouterLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-router-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-router-lsas"
func (n *Ospfv3Router_Counters_InRouterLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"in-router-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).InRouterLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_OutDbdsPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-dbds YANG schema element.
type Ospfv3Router_Counters_OutDbdsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_OutDbdsPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-dbds YANG schema element.
type Ospfv3Router_Counters_OutDbdsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-dbds"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-dbds"
func (n *Ospfv3Router_Counters_OutDbdsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-dbds"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutDbds
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-dbds"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-dbds"
func (n *Ospfv3Router_Counters_OutDbdsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-dbds"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutDbds
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_OutExternalLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-external-lsas YANG schema element.
type Ospfv3Router_Counters_OutExternalLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_OutExternalLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-external-lsas YANG schema element.
type Ospfv3Router_Counters_OutExternalLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-external-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-external-lsas"
func (n *Ospfv3Router_Counters_OutExternalLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-external-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutExternalLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-external-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-external-lsas"
func (n *Ospfv3Router_Counters_OutExternalLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-external-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutExternalLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_OutHellosPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-hellos YANG schema element.
type Ospfv3Router_Counters_OutHellosPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_OutHellosPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-hellos YANG schema element.
type Ospfv3Router_Counters_OutHellosPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-hellos"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-hellos"
func (n *Ospfv3Router_Counters_OutHellosPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-hellos"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutHellos
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-hellos"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-hellos"
func (n *Ospfv3Router_Counters_OutHellosPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-hellos"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutHellos
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_OutInterAreaPrefixLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-inter-area-prefix-lsas YANG schema element.
type Ospfv3Router_Counters_OutInterAreaPrefixLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_OutInterAreaPrefixLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-inter-area-prefix-lsas YANG schema element.
type Ospfv3Router_Counters_OutInterAreaPrefixLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-inter-area-prefix-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-inter-area-prefix-lsas"
func (n *Ospfv3Router_Counters_OutInterAreaPrefixLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-inter-area-prefix-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutInterAreaPrefixLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-inter-area-prefix-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-inter-area-prefix-lsas"
func (n *Ospfv3Router_Counters_OutInterAreaPrefixLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-inter-area-prefix-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutInterAreaPrefixLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_OutInterAreaRouterLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-inter-area-router-lsas YANG schema element.
type Ospfv3Router_Counters_OutInterAreaRouterLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_OutInterAreaRouterLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-inter-area-router-lsas YANG schema element.
type Ospfv3Router_Counters_OutInterAreaRouterLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-inter-area-router-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-inter-area-router-lsas"
func (n *Ospfv3Router_Counters_OutInterAreaRouterLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-inter-area-router-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutInterAreaRouterLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-inter-area-router-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-inter-area-router-lsas"
func (n *Ospfv3Router_Counters_OutInterAreaRouterLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-inter-area-router-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutInterAreaRouterLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_OutIntraAreaPrefixLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-intra-area-prefix-lsas YANG schema element.
type Ospfv3Router_Counters_OutIntraAreaPrefixLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_OutIntraAreaPrefixLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-intra-area-prefix-lsas YANG schema element.
type Ospfv3Router_Counters_OutIntraAreaPrefixLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-intra-area-prefix-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-intra-area-prefix-lsas"
func (n *Ospfv3Router_Counters_OutIntraAreaPrefixLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-intra-area-prefix-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutIntraAreaPrefixLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-intra-area-prefix-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-intra-area-prefix-lsas"
func (n *Ospfv3Router_Counters_OutIntraAreaPrefixLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-intra-area-prefix-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutIntraAreaPrefixLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_OutLinkLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-link-lsas YANG schema element.
type Ospfv3Router_Counters_OutLinkLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_OutLinkLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-link-lsas YANG schema element.
type Ospfv3Router_Counters_OutLinkLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-link-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-link-lsas"
func (n *Ospfv3Router_Counters_OutLinkLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-link-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutLinkLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-link-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-link-lsas"
func (n *Ospfv3Router_Counters_OutLinkLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-link-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutLinkLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_OutLsAcksPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-ls-acks YANG schema element.
type Ospfv3Router_Counters_OutLsAcksPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_OutLsAcksPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-ls-acks YANG schema element.
type Ospfv3Router_Counters_OutLsAcksPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-ls-acks"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-ls-acks"
func (n *Ospfv3Router_Counters_OutLsAcksPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-ls-acks"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutLsAcks
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-ls-acks"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-ls-acks"
func (n *Ospfv3Router_Counters_OutLsAcksPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-ls-acks"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutLsAcks
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_OutLsRequestsPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-ls-requests YANG schema element.
type Ospfv3Router_Counters_OutLsRequestsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_OutLsRequestsPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-ls-requests YANG schema element.
type Ospfv3Router_Counters_OutLsRequestsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-ls-requests"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-ls-requests"
func (n *Ospfv3Router_Counters_OutLsRequestsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-ls-requests"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutLsRequests
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-ls-requests"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-ls-requests"
func (n *Ospfv3Router_Counters_OutLsRequestsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-ls-requests"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutLsRequests
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_OutLsUpdatesPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-ls-updates YANG schema element.
type Ospfv3Router_Counters_OutLsUpdatesPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_OutLsUpdatesPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-ls-updates YANG schema element.
type Ospfv3Router_Counters_OutLsUpdatesPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-ls-updates"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-ls-updates"
func (n *Ospfv3Router_Counters_OutLsUpdatesPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-ls-updates"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutLsUpdates
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-ls-updates"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-ls-updates"
func (n *Ospfv3Router_Counters_OutLsUpdatesPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-ls-updates"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutLsUpdates
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_OutLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-lsas YANG schema element.
type Ospfv3Router_Counters_OutLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_OutLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-lsas YANG schema element.
type Ospfv3Router_Counters_OutLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-lsas"
func (n *Ospfv3Router_Counters_OutLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-lsas"
func (n *Ospfv3Router_Counters_OutLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_OutNetworkLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-network-lsas YANG schema element.
type Ospfv3Router_Counters_OutNetworkLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_OutNetworkLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-network-lsas YANG schema element.
type Ospfv3Router_Counters_OutNetworkLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-network-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-network-lsas"
func (n *Ospfv3Router_Counters_OutNetworkLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-network-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutNetworkLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-network-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-network-lsas"
func (n *Ospfv3Router_Counters_OutNetworkLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-network-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutNetworkLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_OutNssaLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-nssa-lsas YANG schema element.
type Ospfv3Router_Counters_OutNssaLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_OutNssaLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-nssa-lsas YANG schema element.
type Ospfv3Router_Counters_OutNssaLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-nssa-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-nssa-lsas"
func (n *Ospfv3Router_Counters_OutNssaLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-nssa-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutNssaLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-nssa-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-nssa-lsas"
func (n *Ospfv3Router_Counters_OutNssaLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-nssa-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutNssaLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_OutRouterLsasPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-router-lsas YANG schema element.
type Ospfv3Router_Counters_OutRouterLsasPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_OutRouterLsasPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/out-router-lsas YANG schema element.
type Ospfv3Router_Counters_OutRouterLsasPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-router-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-router-lsas"
func (n *Ospfv3Router_Counters_OutRouterLsasPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-router-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutRouterLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-router-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-router-lsas"
func (n *Ospfv3Router_Counters_OutRouterLsasPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"out-router-lsas"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).OutRouterLsas
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_SessionsDownPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/sessions-down YANG schema element.
type Ospfv3Router_Counters_SessionsDownPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_SessionsDownPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/sessions-down YANG schema element.
type Ospfv3Router_Counters_SessionsDownPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "sessions-down"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/sessions-down"
func (n *Ospfv3Router_Counters_SessionsDownPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"sessions-down"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).SessionsDown
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "sessions-down"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/sessions-down"
func (n *Ospfv3Router_Counters_SessionsDownPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"sessions-down"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).SessionsDown
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_SessionsFlapPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/sessions-flap YANG schema element.
type Ospfv3Router_Counters_SessionsFlapPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_SessionsFlapPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/sessions-flap YANG schema element.
type Ospfv3Router_Counters_SessionsFlapPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "sessions-flap"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/sessions-flap"
func (n *Ospfv3Router_Counters_SessionsFlapPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"sessions-flap"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).SessionsFlap
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "sessions-flap"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/sessions-flap"
func (n *Ospfv3Router_Counters_SessionsFlapPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"sessions-flap"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).SessionsFlap
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_Counters_SessionsUpPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/sessions-up YANG schema element.
type Ospfv3Router_Counters_SessionsUpPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_Counters_SessionsUpPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters/sessions-up YANG schema element.
type Ospfv3Router_Counters_SessionsUpPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "sessions-up"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/sessions-up"
func (n *Ospfv3Router_Counters_SessionsUpPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"sessions-up"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).SessionsUp
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "sessions-up"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/sessions-up"
func (n *Ospfv3Router_Counters_SessionsUpPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Ospfv3Router_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"sessions-up"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Ospfv3Router_Counters).SessionsUp
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_CountersPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters YANG schema element.
type Ospfv3Router_CountersPath struct {
	*ygnmi.NodePath
}

// Ospfv3Router_CountersPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/counters YANG schema element.
type Ospfv3Router_CountersPathAny struct {
	*ygnmi.NodePath
}

// InDbds (leaf): The total number of DBD messages received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-dbds"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-dbds"
func (n *Ospfv3Router_CountersPath) InDbds() *Ospfv3Router_Counters_InDbdsPath {
	ps := &Ospfv3Router_Counters_InDbdsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-dbds"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InDbds (leaf): The total number of DBD messages received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-dbds"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-dbds"
func (n *Ospfv3Router_CountersPathAny) InDbds() *Ospfv3Router_Counters_InDbdsPathAny {
	ps := &Ospfv3Router_Counters_InDbdsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-dbds"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InExternalLsas (leaf): The total number of OSPFv3 External (Type 5) LSAs received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-external-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-external-lsas"
func (n *Ospfv3Router_CountersPath) InExternalLsas() *Ospfv3Router_Counters_InExternalLsasPath {
	ps := &Ospfv3Router_Counters_InExternalLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-external-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InExternalLsas (leaf): The total number of OSPFv3 External (Type 5) LSAs received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-external-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-external-lsas"
func (n *Ospfv3Router_CountersPathAny) InExternalLsas() *Ospfv3Router_Counters_InExternalLsasPathAny {
	ps := &Ospfv3Router_Counters_InExternalLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-external-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InHellos (leaf): The total number of HELLO messages received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-hellos"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-hellos"
func (n *Ospfv3Router_CountersPath) InHellos() *Ospfv3Router_Counters_InHellosPath {
	ps := &Ospfv3Router_Counters_InHellosPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-hellos"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InHellos (leaf): The total number of HELLO messages received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-hellos"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-hellos"
func (n *Ospfv3Router_CountersPathAny) InHellos() *Ospfv3Router_Counters_InHellosPathAny {
	ps := &Ospfv3Router_Counters_InHellosPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-hellos"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InInterAreaPrefixLsas (leaf): The total number of OSPFv3 Inter-Area-Prefix (Type 3) LSAs received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-inter-area-prefix-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-inter-area-prefix-lsas"
func (n *Ospfv3Router_CountersPath) InInterAreaPrefixLsas() *Ospfv3Router_Counters_InInterAreaPrefixLsasPath {
	ps := &Ospfv3Router_Counters_InInterAreaPrefixLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-inter-area-prefix-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InInterAreaPrefixLsas (leaf): The total number of OSPFv3 Inter-Area-Prefix (Type 3) LSAs received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-inter-area-prefix-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-inter-area-prefix-lsas"
func (n *Ospfv3Router_CountersPathAny) InInterAreaPrefixLsas() *Ospfv3Router_Counters_InInterAreaPrefixLsasPathAny {
	ps := &Ospfv3Router_Counters_InInterAreaPrefixLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-inter-area-prefix-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InInterAreaRouterLsas (leaf): The total number of OSPFv3 Inter-Area-Router (Type 4) LSAs received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-inter-area-router-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-inter-area-router-lsas"
func (n *Ospfv3Router_CountersPath) InInterAreaRouterLsas() *Ospfv3Router_Counters_InInterAreaRouterLsasPath {
	ps := &Ospfv3Router_Counters_InInterAreaRouterLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-inter-area-router-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InInterAreaRouterLsas (leaf): The total number of OSPFv3 Inter-Area-Router (Type 4) LSAs received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-inter-area-router-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-inter-area-router-lsas"
func (n *Ospfv3Router_CountersPathAny) InInterAreaRouterLsas() *Ospfv3Router_Counters_InInterAreaRouterLsasPathAny {
	ps := &Ospfv3Router_Counters_InInterAreaRouterLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-inter-area-router-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InIntraAreaPrefixLsas (leaf): The total number of OSPFv3 Intra-Area-Prefix (Type 9) LSAs received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-intra-area-prefix-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-intra-area-prefix-lsas"
func (n *Ospfv3Router_CountersPath) InIntraAreaPrefixLsas() *Ospfv3Router_Counters_InIntraAreaPrefixLsasPath {
	ps := &Ospfv3Router_Counters_InIntraAreaPrefixLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-intra-area-prefix-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InIntraAreaPrefixLsas (leaf): The total number of OSPFv3 Intra-Area-Prefix (Type 9) LSAs received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-intra-area-prefix-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-intra-area-prefix-lsas"
func (n *Ospfv3Router_CountersPathAny) InIntraAreaPrefixLsas() *Ospfv3Router_Counters_InIntraAreaPrefixLsasPathAny {
	ps := &Ospfv3Router_Counters_InIntraAreaPrefixLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-intra-area-prefix-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InLinkLsas (leaf): The total number of OSPFv3 Link (Type 8) LSAs received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-link-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-link-lsas"
func (n *Ospfv3Router_CountersPath) InLinkLsas() *Ospfv3Router_Counters_InLinkLsasPath {
	ps := &Ospfv3Router_Counters_InLinkLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-link-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InLinkLsas (leaf): The total number of OSPFv3 Link (Type 8) LSAs received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-link-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-link-lsas"
func (n *Ospfv3Router_CountersPathAny) InLinkLsas() *Ospfv3Router_Counters_InLinkLsasPathAny {
	ps := &Ospfv3Router_Counters_InLinkLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-link-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InLsAcks (leaf): The total number of LS Ack messages received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-ls-acks"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-ls-acks"
func (n *Ospfv3Router_CountersPath) InLsAcks() *Ospfv3Router_Counters_InLsAcksPath {
	ps := &Ospfv3Router_Counters_InLsAcksPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-ls-acks"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InLsAcks (leaf): The total number of LS Ack messages received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-ls-acks"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-ls-acks"
func (n *Ospfv3Router_CountersPathAny) InLsAcks() *Ospfv3Router_Counters_InLsAcksPathAny {
	ps := &Ospfv3Router_Counters_InLsAcksPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-ls-acks"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InLsRequests (leaf): The total number of LS Request messages received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-ls-requests"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-ls-requests"
func (n *Ospfv3Router_CountersPath) InLsRequests() *Ospfv3Router_Counters_InLsRequestsPath {
	ps := &Ospfv3Router_Counters_InLsRequestsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-ls-requests"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InLsRequests (leaf): The total number of LS Request messages received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-ls-requests"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-ls-requests"
func (n *Ospfv3Router_CountersPathAny) InLsRequests() *Ospfv3Router_Counters_InLsRequestsPathAny {
	ps := &Ospfv3Router_Counters_InLsRequestsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-ls-requests"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InLsUpdates (leaf): The total number of LS Update messages received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-ls-updates"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-ls-updates"
func (n *Ospfv3Router_CountersPath) InLsUpdates() *Ospfv3Router_Counters_InLsUpdatesPath {
	ps := &Ospfv3Router_Counters_InLsUpdatesPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-ls-updates"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InLsUpdates (leaf): The total number of LS Update messages received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-ls-updates"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-ls-updates"
func (n *Ospfv3Router_CountersPathAny) InLsUpdates() *Ospfv3Router_Counters_InLsUpdatesPathAny {
	ps := &Ospfv3Router_Counters_InLsUpdatesPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-ls-updates"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InLsas (leaf): The total number of link state protocol data units (LSAs) received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-lsas"
func (n *Ospfv3Router_CountersPath) InLsas() *Ospfv3Router_Counters_InLsasPath {
	ps := &Ospfv3Router_Counters_InLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InLsas (leaf): The total number of link state protocol data units (LSAs) received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-lsas"
func (n *Ospfv3Router_CountersPathAny) InLsas() *Ospfv3Router_Counters_InLsasPathAny {
	ps := &Ospfv3Router_Counters_InLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InNetworkLsas (leaf): The total number of OSPFv3 Network (Type 2) LSAs received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-network-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-network-lsas"
func (n *Ospfv3Router_CountersPath) InNetworkLsas() *Ospfv3Router_Counters_InNetworkLsasPath {
	ps := &Ospfv3Router_Counters_InNetworkLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-network-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InNetworkLsas (leaf): The total number of OSPFv3 Network (Type 2) LSAs received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-network-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-network-lsas"
func (n *Ospfv3Router_CountersPathAny) InNetworkLsas() *Ospfv3Router_Counters_InNetworkLsasPathAny {
	ps := &Ospfv3Router_Counters_InNetworkLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-network-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InNssaLsas (leaf): The total number of OSPFv3 NSSA (Type 7) LSAs received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-nssa-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-nssa-lsas"
func (n *Ospfv3Router_CountersPath) InNssaLsas() *Ospfv3Router_Counters_InNssaLsasPath {
	ps := &Ospfv3Router_Counters_InNssaLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-nssa-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InNssaLsas (leaf): The total number of OSPFv3 NSSA (Type 7) LSAs received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-nssa-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-nssa-lsas"
func (n *Ospfv3Router_CountersPathAny) InNssaLsas() *Ospfv3Router_Counters_InNssaLsasPathAny {
	ps := &Ospfv3Router_Counters_InNssaLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-nssa-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InRouterLsas (leaf): The total number of OSPFv3 Router (Type 1) LSAs received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-router-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-router-lsas"
func (n *Ospfv3Router_CountersPath) InRouterLsas() *Ospfv3Router_Counters_InRouterLsasPath {
	ps := &Ospfv3Router_Counters_InRouterLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-router-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InRouterLsas (leaf): The total number of OSPFv3 Router (Type 1) LSAs received.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "in-router-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/in-router-lsas"
func (n *Ospfv3Router_CountersPathAny) InRouterLsas() *Ospfv3Router_Counters_InRouterLsasPathAny {
	ps := &Ospfv3Router_Counters_InRouterLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"in-router-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutDbds (leaf): The total number of DBD messages sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-dbds"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-dbds"
func (n *Ospfv3Router_CountersPath) OutDbds() *Ospfv3Router_Counters_OutDbdsPath {
	ps := &Ospfv3Router_Counters_OutDbdsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-dbds"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutDbds (leaf): The total number of DBD messages sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-dbds"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-dbds"
func (n *Ospfv3Router_CountersPathAny) OutDbds() *Ospfv3Router_Counters_OutDbdsPathAny {
	ps := &Ospfv3Router_Counters_OutDbdsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-dbds"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutExternalLsas (leaf): The total number of OSPFv3 External (Type 5) LSAs sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-external-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-external-lsas"
func (n *Ospfv3Router_CountersPath) OutExternalLsas() *Ospfv3Router_Counters_OutExternalLsasPath {
	ps := &Ospfv3Router_Counters_OutExternalLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-external-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutExternalLsas (leaf): The total number of OSPFv3 External (Type 5) LSAs sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-external-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-external-lsas"
func (n *Ospfv3Router_CountersPathAny) OutExternalLsas() *Ospfv3Router_Counters_OutExternalLsasPathAny {
	ps := &Ospfv3Router_Counters_OutExternalLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-external-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutHellos (leaf): The total number of HELLO messages sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-hellos"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-hellos"
func (n *Ospfv3Router_CountersPath) OutHellos() *Ospfv3Router_Counters_OutHellosPath {
	ps := &Ospfv3Router_Counters_OutHellosPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-hellos"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutHellos (leaf): The total number of HELLO messages sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-hellos"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-hellos"
func (n *Ospfv3Router_CountersPathAny) OutHellos() *Ospfv3Router_Counters_OutHellosPathAny {
	ps := &Ospfv3Router_Counters_OutHellosPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-hellos"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutInterAreaPrefixLsas (leaf): The total number of OSPFv3 Inter-Area-Prefix (Type 3) LSAs sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-inter-area-prefix-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-inter-area-prefix-lsas"
func (n *Ospfv3Router_CountersPath) OutInterAreaPrefixLsas() *Ospfv3Router_Counters_OutInterAreaPrefixLsasPath {
	ps := &Ospfv3Router_Counters_OutInterAreaPrefixLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-inter-area-prefix-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutInterAreaPrefixLsas (leaf): The total number of OSPFv3 Inter-Area-Prefix (Type 3) LSAs sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-inter-area-prefix-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-inter-area-prefix-lsas"
func (n *Ospfv3Router_CountersPathAny) OutInterAreaPrefixLsas() *Ospfv3Router_Counters_OutInterAreaPrefixLsasPathAny {
	ps := &Ospfv3Router_Counters_OutInterAreaPrefixLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-inter-area-prefix-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutInterAreaRouterLsas (leaf): The total number of OSPFv3 Inter-Area-Router (Type 4) LSAs sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-inter-area-router-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-inter-area-router-lsas"
func (n *Ospfv3Router_CountersPath) OutInterAreaRouterLsas() *Ospfv3Router_Counters_OutInterAreaRouterLsasPath {
	ps := &Ospfv3Router_Counters_OutInterAreaRouterLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-inter-area-router-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutInterAreaRouterLsas (leaf): The total number of OSPFv3 Inter-Area-Router (Type 4) LSAs sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-inter-area-router-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-inter-area-router-lsas"
func (n *Ospfv3Router_CountersPathAny) OutInterAreaRouterLsas() *Ospfv3Router_Counters_OutInterAreaRouterLsasPathAny {
	ps := &Ospfv3Router_Counters_OutInterAreaRouterLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-inter-area-router-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutIntraAreaPrefixLsas (leaf): The total number of OSPFv3 Intra-Area-Prefix (Type 9) LSAs sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-intra-area-prefix-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-intra-area-prefix-lsas"
func (n *Ospfv3Router_CountersPath) OutIntraAreaPrefixLsas() *Ospfv3Router_Counters_OutIntraAreaPrefixLsasPath {
	ps := &Ospfv3Router_Counters_OutIntraAreaPrefixLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-intra-area-prefix-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutIntraAreaPrefixLsas (leaf): The total number of OSPFv3 Intra-Area-Prefix (Type 9) LSAs sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-intra-area-prefix-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-intra-area-prefix-lsas"
func (n *Ospfv3Router_CountersPathAny) OutIntraAreaPrefixLsas() *Ospfv3Router_Counters_OutIntraAreaPrefixLsasPathAny {
	ps := &Ospfv3Router_Counters_OutIntraAreaPrefixLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-intra-area-prefix-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutLinkLsas (leaf): The total number of OSPFv3 Link (Type 8) LSAs sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-link-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-link-lsas"
func (n *Ospfv3Router_CountersPath) OutLinkLsas() *Ospfv3Router_Counters_OutLinkLsasPath {
	ps := &Ospfv3Router_Counters_OutLinkLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-link-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutLinkLsas (leaf): The total number of OSPFv3 Link (Type 8) LSAs sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-link-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-link-lsas"
func (n *Ospfv3Router_CountersPathAny) OutLinkLsas() *Ospfv3Router_Counters_OutLinkLsasPathAny {
	ps := &Ospfv3Router_Counters_OutLinkLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-link-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutLsAcks (leaf): The total number of LS Ack messages sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-ls-acks"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-ls-acks"
func (n *Ospfv3Router_CountersPath) OutLsAcks() *Ospfv3Router_Counters_OutLsAcksPath {
	ps := &Ospfv3Router_Counters_OutLsAcksPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-ls-acks"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutLsAcks (leaf): The total number of LS Ack messages sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-ls-acks"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-ls-acks"
func (n *Ospfv3Router_CountersPathAny) OutLsAcks() *Ospfv3Router_Counters_OutLsAcksPathAny {
	ps := &Ospfv3Router_Counters_OutLsAcksPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-ls-acks"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutLsRequests (leaf): The total number of LS Request messages sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-ls-requests"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-ls-requests"
func (n *Ospfv3Router_CountersPath) OutLsRequests() *Ospfv3Router_Counters_OutLsRequestsPath {
	ps := &Ospfv3Router_Counters_OutLsRequestsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-ls-requests"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutLsRequests (leaf): The total number of LS Request messages sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-ls-requests"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-ls-requests"
func (n *Ospfv3Router_CountersPathAny) OutLsRequests() *Ospfv3Router_Counters_OutLsRequestsPathAny {
	ps := &Ospfv3Router_Counters_OutLsRequestsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-ls-requests"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutLsUpdates (leaf): The total number of LS Update messages sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-ls-updates"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-ls-updates"
func (n *Ospfv3Router_CountersPath) OutLsUpdates() *Ospfv3Router_Counters_OutLsUpdatesPath {
	ps := &Ospfv3Router_Counters_OutLsUpdatesPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-ls-updates"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutLsUpdates (leaf): The total number of LS Update messages sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-ls-updates"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-ls-updates"
func (n *Ospfv3Router_CountersPathAny) OutLsUpdates() *Ospfv3Router_Counters_OutLsUpdatesPathAny {
	ps := &Ospfv3Router_Counters_OutLsUpdatesPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-ls-updates"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutLsas (leaf): The total number of link state protocol data units (LSAs) sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-lsas"
func (n *Ospfv3Router_CountersPath) OutLsas() *Ospfv3Router_Counters_OutLsasPath {
	ps := &Ospfv3Router_Counters_OutLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutLsas (leaf): The total number of link state protocol data units (LSAs) sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-lsas"
func (n *Ospfv3Router_CountersPathAny) OutLsas() *Ospfv3Router_Counters_OutLsasPathAny {
	ps := &Ospfv3Router_Counters_OutLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutNetworkLsas (leaf): The total number of OSPFv3 Network (Type 2) LSAs sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-network-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-network-lsas"
func (n *Ospfv3Router_CountersPath) OutNetworkLsas() *Ospfv3Router_Counters_OutNetworkLsasPath {
	ps := &Ospfv3Router_Counters_OutNetworkLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-network-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutNetworkLsas (leaf): The total number of OSPFv3 Network (Type 2) LSAs sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-network-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-network-lsas"
func (n *Ospfv3Router_CountersPathAny) OutNetworkLsas() *Ospfv3Router_Counters_OutNetworkLsasPathAny {
	ps := &Ospfv3Router_Counters_OutNetworkLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-network-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutNssaLsas (leaf): The total number of OSPFv3 NSSA (Type 7) LSAs sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-nssa-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-nssa-lsas"
func (n *Ospfv3Router_CountersPath) OutNssaLsas() *Ospfv3Router_Counters_OutNssaLsasPath {
	ps := &Ospfv3Router_Counters_OutNssaLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-nssa-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutNssaLsas (leaf): The total number of OSPFv3 NSSA (Type 7) LSAs sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-nssa-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-nssa-lsas"
func (n *Ospfv3Router_CountersPathAny) OutNssaLsas() *Ospfv3Router_Counters_OutNssaLsasPathAny {
	ps := &Ospfv3Router_Counters_OutNssaLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-nssa-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutRouterLsas (leaf): The total number of OSPFv3 Router (Type 1) LSAs sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-router-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-router-lsas"
func (n *Ospfv3Router_CountersPath) OutRouterLsas() *Ospfv3Router_Counters_OutRouterLsasPath {
	ps := &Ospfv3Router_Counters_OutRouterLsasPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-router-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// OutRouterLsas (leaf): The total number of OSPFv3 Router (Type 1) LSAs sent.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "out-router-lsas"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/out-router-lsas"
func (n *Ospfv3Router_CountersPathAny) OutRouterLsas() *Ospfv3Router_Counters_OutRouterLsasPathAny {
	ps := &Ospfv3Router_Counters_OutRouterLsasPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"out-router-lsas"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SessionsDown (leaf): The total number of sessions that are down.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "sessions-down"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/sessions-down"
func (n *Ospfv3Router_CountersPath) SessionsDown() *Ospfv3Router_Counters_SessionsDownPath {
	ps := &Ospfv3Router_Counters_SessionsDownPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"sessions-down"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SessionsDown (leaf): The total number of sessions that are down.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "sessions-down"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/sessions-down"
func (n *Ospfv3Router_CountersPathAny) SessionsDown() *Ospfv3Router_Counters_SessionsDownPathAny {
	ps := &Ospfv3Router_Counters_SessionsDownPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"sessions-down"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SessionsFlap (leaf): The total number of sessions flap.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "sessions-flap"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/sessions-flap"
func (n *Ospfv3Router_CountersPath) SessionsFlap() *Ospfv3Router_Counters_SessionsFlapPath {
	ps := &Ospfv3Router_Counters_SessionsFlapPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"sessions-flap"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SessionsFlap (leaf): The total number of sessions flap.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "sessions-flap"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/sessions-flap"
func (n *Ospfv3Router_CountersPathAny) SessionsFlap() *Ospfv3Router_Counters_SessionsFlapPathAny {
	ps := &Ospfv3Router_Counters_SessionsFlapPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"sessions-flap"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SessionsUp (leaf): The total number of sessions that are fully up.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "sessions-up"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/sessions-up"
func (n *Ospfv3Router_CountersPath) SessionsUp() *Ospfv3Router_Counters_SessionsUpPath {
	ps := &Ospfv3Router_Counters_SessionsUpPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"sessions-up"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SessionsUp (leaf): The total number of sessions that are fully up.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "sessions-up"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/counters/sessions-up"
func (n *Ospfv3Router_CountersPathAny) SessionsUp() *Ospfv3Router_Counters_SessionsUpPathAny {
	ps := &Ospfv3Router_Counters_SessionsUpPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"sessions-up"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_CountersPath) State() ygnmi.SingletonQuery[*oc.Ospfv3Router_Counters] {
	return ygnmi.NewSingletonQuery[*oc.Ospfv3Router_Counters](
		"Ospfv3Router_Counters",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_CountersPathAny) State() ygnmi.WildcardQuery[*oc.Ospfv3Router_Counters] {
	return ygnmi.NewWildcardQuery[*oc.Ospfv3Router_Counters](
		"Ospfv3Router_Counters",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabasePath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database YANG schema element.
type Ospfv3Router_LinkStateDatabasePath struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabasePathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database YANG schema element.
type Ospfv3Router_LinkStateDatabasePathAny struct {
	*ygnmi.NodePath
}

// LsaStates (container): Container of OSPFv3 LSA state information.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "lsa-states"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states"
func (n *Ospfv3Router_LinkStateDatabasePath) LsaStates() *Ospfv3Router_LinkStateDatabase_LsaStatesPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStatesPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"lsa-states"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// LsaStates (container): Container of OSPFv3 LSA state information.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "lsa-states"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states"
func (n *Ospfv3Router_LinkStateDatabasePathAny) LsaStates() *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStatesPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"lsa-states"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabasePath) State() ygnmi.SingletonQuery[*oc.Ospfv3Router_LinkStateDatabase] {
	return ygnmi.NewSingletonQuery[*oc.Ospfv3Router_LinkStateDatabase](
		"Ospfv3Router_LinkStateDatabase",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabasePathAny) State() ygnmi.WildcardQuery[*oc.Ospfv3Router_LinkStateDatabase] {
	return ygnmi.NewWildcardQuery[*oc.Ospfv3Router_LinkStateDatabase](
		"Ospfv3Router_LinkStateDatabase",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStatesPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStatesPath struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStatesPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStatesPathAny struct {
	*ygnmi.NodePath
}

// ExternalAsLsaAny (list): Contents of the AS External LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "external-as-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa"
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPath) ExternalAsLsaAny() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"external-as-lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
	return ps
}

// ExternalAsLsaAny (list): Contents of the AS External LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "external-as-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa"
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny) ExternalAsLsaAny() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"external-as-lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
	return ps
}

// ExternalAsLsa (list): Contents of the AS External LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "external-as-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa"
//
//	LinkStateId: string
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPath) ExternalAsLsa(LinkStateId string) *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"external-as-lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
	return ps
}

// ExternalAsLsa (list): Contents of the AS External LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "external-as-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa"
//
//	LinkStateId: string
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny) ExternalAsLsa(LinkStateId string) *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"external-as-lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
	return ps
}

// InterAreaPrefixLsaAny (list): Contents of the Inter-Area-Prefix LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "inter-area-prefix-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa"
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPath) InterAreaPrefixLsaAny() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"inter-area-prefix-lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
	return ps
}

// InterAreaPrefixLsaAny (list): Contents of the Inter-Area-Prefix LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "inter-area-prefix-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa"
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny) InterAreaPrefixLsaAny() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"inter-area-prefix-lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
	return ps
}

// InterAreaPrefixLsa (list): Contents of the Inter-Area-Prefix LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "inter-area-prefix-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa"
//
//	LinkStateId: string
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPath) InterAreaPrefixLsa(LinkStateId string) *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"inter-area-prefix-lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
	return ps
}

// InterAreaPrefixLsa (list): Contents of the Inter-Area-Prefix LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "inter-area-prefix-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa"
//
//	LinkStateId: string
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny) InterAreaPrefixLsa(LinkStateId string) *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"inter-area-prefix-lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
	return ps
}

// InterAreaRouterLsaAny (list): Contents of the Inter-Area-Router LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "inter-area-router-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa"
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPath) InterAreaRouterLsaAny() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"inter-area-router-lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
	return ps
}

// InterAreaRouterLsaAny (list): Contents of the Inter-Area-Router LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "inter-area-router-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa"
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny) InterAreaRouterLsaAny() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"inter-area-router-lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
	return ps
}

// InterAreaRouterLsa (list): Contents of the Inter-Area-Router LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "inter-area-router-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa"
//
//	LinkStateId: string
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPath) InterAreaRouterLsa(LinkStateId string) *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"inter-area-router-lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
	return ps
}

// InterAreaRouterLsa (list): Contents of the Inter-Area-Router LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "inter-area-router-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa"
//
//	LinkStateId: string
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny) InterAreaRouterLsa(LinkStateId string) *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"inter-area-router-lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
	return ps
}

// IntraAreaPrefixLsaAny (list): Contents of the Intra-Area-Prefix LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "intra-area-prefix-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa"
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPath) IntraAreaPrefixLsaAny() *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"intra-area-prefix-lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
	return ps
}

// IntraAreaPrefixLsaAny (list): Contents of the Intra-Area-Prefix LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "intra-area-prefix-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa"
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny) IntraAreaPrefixLsaAny() *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"intra-area-prefix-lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
	return ps
}

// IntraAreaPrefixLsa (list): Contents of the Intra-Area-Prefix LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "intra-area-prefix-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa"
//
//	LinkStateId: string
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPath) IntraAreaPrefixLsa(LinkStateId string) *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"intra-area-prefix-lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
	return ps
}

// IntraAreaPrefixLsa (list): Contents of the Intra-Area-Prefix LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "intra-area-prefix-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa"
//
//	LinkStateId: string
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny) IntraAreaPrefixLsa(LinkStateId string) *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"intra-area-prefix-lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
	return ps
}

// LinkLsaAny (list): Contents of the Link LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa"
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPath) LinkLsaAny() *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"link-lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
	return ps
}

// LinkLsaAny (list): Contents of the Link LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa"
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny) LinkLsaAny() *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"link-lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
	return ps
}

// LinkLsa (list): Contents of the Link LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa"
//
//	LinkStateId: string
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPath) LinkLsa(LinkStateId string) *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"link-lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
	return ps
}

// LinkLsa (list): Contents of the Link LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa"
//
//	LinkStateId: string
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny) LinkLsa(LinkStateId string) *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"link-lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
	return ps
}

// NetworkLsaAny (list): Contents of the network LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "network-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa"
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPath) NetworkLsaAny() *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"network-lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
	return ps
}

// NetworkLsaAny (list): Contents of the network LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "network-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa"
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny) NetworkLsaAny() *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"network-lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
	return ps
}

// NetworkLsa (list): Contents of the network LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "network-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa"
//
//	LinkStateId: string
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPath) NetworkLsa(LinkStateId string) *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"network-lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
	return ps
}

// NetworkLsa (list): Contents of the network LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "network-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa"
//
//	LinkStateId: string
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny) NetworkLsa(LinkStateId string) *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"network-lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
	return ps
}

// NssaLsaAny (list): Contents of the NSSA LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "nssa-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa"
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPath) NssaLsaAny() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"nssa-lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
	return ps
}

// NssaLsaAny (list): Contents of the NSSA LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "nssa-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa"
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny) NssaLsaAny() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"nssa-lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
	return ps
}

// NssaLsa (list): Contents of the NSSA LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "nssa-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa"
//
//	LinkStateId: string
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPath) NssaLsa(LinkStateId string) *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"nssa-lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
	return ps
}

// NssaLsa (list): Contents of the NSSA LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "nssa-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa"
//
//	LinkStateId: string
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny) NssaLsa(LinkStateId string) *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"nssa-lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
	return ps
}

// RouterLsaAny (list): Contents of the router LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "router-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa"
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPath) RouterLsaAny() *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"router-lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
	return ps
}

// RouterLsaAny (list): Contents of the router LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "router-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa"
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny) RouterLsaAny() *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"router-lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
	return ps
}

// RouterLsa (list): Contents of the router LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "router-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa"
//
//	LinkStateId: string
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPath) RouterLsa(LinkStateId string) *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"router-lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
	return ps
}

// RouterLsa (list): Contents of the router LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "router-lsa"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa"
//
//	LinkStateId: string
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny) RouterLsa(LinkStateId string) *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"router-lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPath) State() ygnmi.SingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates] {
	return ygnmi.NewSingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates](
		"Ospfv3Router_LinkStateDatabase_LsaStates",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStatesPathAny) State() ygnmi.WildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates] {
	return ygnmi.NewWildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates](
		"Ospfv3Router_LinkStateDatabase_LsaStates",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AddressPrefixPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/address-prefix YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AddressPrefixPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AddressPrefixPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/address-prefix YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AddressPrefixPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AddressPrefixPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).AddressPrefix
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AddressPrefixPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).AddressPrefix
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AdvertisingRouterPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/advertising-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AdvertisingRouterPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AdvertisingRouterPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/advertising-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AdvertisingRouterPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AdvertisingRouterPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).AdvertisingRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AdvertisingRouterPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).AdvertisingRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AgePath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/age YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AgePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AgePathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/age YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AgePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AgePath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "age"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).Age
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AgePathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "age"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).Age
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ForwardingAddressPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/forwarding-address YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ForwardingAddressPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ForwardingAddressPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/forwarding-address YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ForwardingAddressPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/forwarding-address"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/forwarding-address"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ForwardingAddressPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "forwarding-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).ForwardingAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/forwarding-address"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/forwarding-address"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ForwardingAddressPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "forwarding-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).ForwardingAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_LinkStateIdPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/link-state-id YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_LinkStateIdPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_LinkStateIdPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/link-state-id YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_LinkStateIdPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_LinkStateIdPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_LinkStateIdPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-state-id"
//	Path from root:       ""
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_LinkStateIdPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-state-id"
//	Path from root:       ""
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_LinkStateIdPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_MetricPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/metric YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_MetricPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_MetricPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/metric YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_MetricPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_MetricPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "metric"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).Metric
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_MetricPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "metric"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).Metric
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_PrefixLengthPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/prefix-length YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_PrefixLengthPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_PrefixLengthPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/prefix-length YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_PrefixLengthPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_PrefixLengthPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).PrefixLength
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_PrefixLengthPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).PrefixLength
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ReferencedLsTypePath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/referenced-ls-type YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ReferencedLsTypePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ReferencedLsTypePathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/referenced-ls-type YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ReferencedLsTypePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/referenced-ls-type"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/referenced-ls-type"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ReferencedLsTypePath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "referenced-ls-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).ReferencedLsType
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/referenced-ls-type"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/referenced-ls-type"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ReferencedLsTypePathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "referenced-ls-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).ReferencedLsType
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_RouteTagPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/route-tag YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_RouteTagPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_RouteTagPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/route-tag YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_RouteTagPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/route-tag"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/route-tag"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_RouteTagPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "route-tag"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).RouteTag
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/route-tag"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/route-tag"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_RouteTagPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "route-tag"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).RouteTag
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_SequenceNumberPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/sequence-number YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_SequenceNumberPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_SequenceNumberPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/sequence-number YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_SequenceNumberPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_SequenceNumberPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).SequenceNumber
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_SequenceNumberPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa).SequenceNumber
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPath struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathMap represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathMap struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathMapAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathMapAny struct {
	*ygnmi.NodePath
}

// AddressPrefix (leaf): The first IPv6 address prefix to be advertised in the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPath) AddressPrefix() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AddressPrefixPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AddressPrefixPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AddressPrefix (leaf): The first IPv6 address prefix to be advertised in the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny) AddressPrefix() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AddressPrefixPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AddressPrefixPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPath) AdvertisingRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AdvertisingRouterPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AdvertisingRouterPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny) AdvertisingRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AdvertisingRouterPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AdvertisingRouterPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Age (leaf): The time since the LSA's generation in seconds.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPath) Age() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AgePath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AgePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Age (leaf): The time since the LSA's generation in seconds.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny) Age() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AgePathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_AgePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ForwardingAddress (leaf): The IPV6 address where traffic for the advertised destination is forwarded.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/forwarding-address"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/forwarding-address"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPath) ForwardingAddress() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ForwardingAddressPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ForwardingAddressPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ForwardingAddress (leaf): The IPV6 address where traffic for the advertised destination is forwarded.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/forwarding-address"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/forwarding-address"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny) ForwardingAddress() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ForwardingAddressPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ForwardingAddressPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkStateId (leaf): The Link State ID for the specified LSA type.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/link-state-database/lsa-states/external-as-lsa/*/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPath) LinkStateId() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_LinkStateIdPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_LinkStateIdPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "link-state-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkStateId (leaf): The Link State ID for the specified LSA type.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/link-state-database/lsa-states/external-as-lsa/*/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny) LinkStateId() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_LinkStateIdPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_LinkStateIdPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "link-state-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Metric (leaf): The cost of the summary route TOS level 0 and all
// unspecified levels.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPath) Metric() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_MetricPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_MetricPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Metric (leaf): The cost of the summary route TOS level 0 and all
// unspecified levels.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny) Metric() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_MetricPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_MetricPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PrefixLength (leaf): The length of the IPv6 address prefix, in bits.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPath) PrefixLength() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_PrefixLengthPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_PrefixLengthPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PrefixLength (leaf): The length of the IPv6 address prefix, in bits.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny) PrefixLength() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_PrefixLengthPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_PrefixLengthPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ReferencedLsType (leaf): The type of the LS referenced in this LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/referenced-ls-type"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/referenced-ls-type"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPath) ReferencedLsType() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ReferencedLsTypePath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ReferencedLsTypePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "referenced-ls-type"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ReferencedLsType (leaf): The type of the LS referenced in this LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/referenced-ls-type"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/referenced-ls-type"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny) ReferencedLsType() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ReferencedLsTypePathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_ReferencedLsTypePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "referenced-ls-type"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RouteTag (leaf): The optional field may be used to communicate additional information between AS boundary routers.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/route-tag"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/route-tag"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPath) RouteTag() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_RouteTagPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_RouteTagPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "route-tag"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RouteTag (leaf): The optional field may be used to communicate additional information between AS boundary routers.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/route-tag"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/route-tag"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny) RouteTag() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_RouteTagPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_RouteTagPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "route-tag"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SequenceNumber (leaf): Sequence number to detect old and duplicate LSAs.
// The greater the sequence number the more recent the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPath) SequenceNumber() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_SequenceNumberPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_SequenceNumberPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SequenceNumber (leaf): Sequence number to detect old and duplicate LSAs.
// The greater the sequence number the more recent the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/external-as-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny) SequenceNumber() *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_SequenceNumberPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa_SequenceNumberPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPath) State() ygnmi.SingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa] {
	return ygnmi.NewSingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsaPathAny) State() ygnmi.WildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa] {
	return ygnmi.NewWildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa](
		"Ospfv3Router_LinkStateDatabase_LsaStates_ExternalAsLsa",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AddressPrefixPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/address-prefix YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AddressPrefixPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AddressPrefixPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/address-prefix YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AddressPrefixPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AddressPrefixPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa).AddressPrefix
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AddressPrefixPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa).AddressPrefix
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AdvertisingRouterPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/advertising-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AdvertisingRouterPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AdvertisingRouterPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/advertising-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AdvertisingRouterPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AdvertisingRouterPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa).AdvertisingRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AdvertisingRouterPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa).AdvertisingRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AgePath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/age YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AgePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AgePathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/age YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AgePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AgePath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "age"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa).Age
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AgePathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "age"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa).Age
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_LinkStateIdPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/link-state-id YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_LinkStateIdPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_LinkStateIdPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/link-state-id YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_LinkStateIdPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_LinkStateIdPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_LinkStateIdPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-state-id"
//	Path from root:       ""
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_LinkStateIdPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-state-id"
//	Path from root:       ""
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_LinkStateIdPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_MetricPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/metric YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_MetricPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_MetricPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/metric YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_MetricPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_MetricPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "metric"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa).Metric
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_MetricPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "metric"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa).Metric
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_PrefixLengthPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/prefix-length YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_PrefixLengthPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_PrefixLengthPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/prefix-length YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_PrefixLengthPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_PrefixLengthPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa).PrefixLength
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_PrefixLengthPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa).PrefixLength
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_SequenceNumberPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/sequence-number YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_SequenceNumberPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_SequenceNumberPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/sequence-number YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_SequenceNumberPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_SequenceNumberPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa).SequenceNumber
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_SequenceNumberPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa).SequenceNumber
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPath struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathAny struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathMap represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathMap struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathMapAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathMapAny struct {
	*ygnmi.NodePath
}

// AddressPrefix (leaf): The first IPv6 address prefix to be advertised in the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPath) AddressPrefix() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AddressPrefixPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AddressPrefixPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AddressPrefix (leaf): The first IPv6 address prefix to be advertised in the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathAny) AddressPrefix() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AddressPrefixPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AddressPrefixPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPath) AdvertisingRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AdvertisingRouterPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AdvertisingRouterPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathAny) AdvertisingRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AdvertisingRouterPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AdvertisingRouterPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Age (leaf): The time since the LSA's generation in seconds.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPath) Age() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AgePath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AgePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Age (leaf): The time since the LSA's generation in seconds.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathAny) Age() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AgePathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_AgePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkStateId (leaf): The Link State ID for the specified LSA type.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/link-state-database/lsa-states/inter-area-prefix-lsa/*/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPath) LinkStateId() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_LinkStateIdPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_LinkStateIdPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "link-state-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkStateId (leaf): The Link State ID for the specified LSA type.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/link-state-database/lsa-states/inter-area-prefix-lsa/*/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathAny) LinkStateId() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_LinkStateIdPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_LinkStateIdPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "link-state-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Metric (leaf): The cost of the summary route TOS level 0 and all
// unspecified levels.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPath) Metric() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_MetricPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_MetricPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Metric (leaf): The cost of the summary route TOS level 0 and all
// unspecified levels.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathAny) Metric() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_MetricPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_MetricPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PrefixLength (leaf): The length of the IPv6 address prefix, in bits.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPath) PrefixLength() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_PrefixLengthPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_PrefixLengthPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PrefixLength (leaf): The length of the IPv6 address prefix, in bits.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathAny) PrefixLength() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_PrefixLengthPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_PrefixLengthPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SequenceNumber (leaf): Sequence number to detect old and duplicate LSAs.
// The greater the sequence number the more recent the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPath) SequenceNumber() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_SequenceNumberPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_SequenceNumberPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SequenceNumber (leaf): Sequence number to detect old and duplicate LSAs.
// The greater the sequence number the more recent the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-prefix-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathAny) SequenceNumber() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_SequenceNumberPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa_SequenceNumberPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPath) State() ygnmi.SingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa] {
	return ygnmi.NewSingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsaPathAny) State() ygnmi.WildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa] {
	return ygnmi.NewWildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaPrefixLsa",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AdvertisingRouterPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/advertising-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AdvertisingRouterPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AdvertisingRouterPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/advertising-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AdvertisingRouterPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AdvertisingRouterPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa).AdvertisingRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AdvertisingRouterPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa).AdvertisingRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AgePath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/age YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AgePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AgePathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/age YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AgePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AgePath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "age"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa).Age
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AgePathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "age"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa).Age
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_DestinationRouterPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/destination_router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_DestinationRouterPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_DestinationRouterPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/destination_router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_DestinationRouterPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/destination_router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/destination_router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_DestinationRouterPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "destination_router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa).DestinationRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/destination_router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/destination_router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_DestinationRouterPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "destination_router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa).DestinationRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_LinkStateIdPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/link-state-id YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_LinkStateIdPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_LinkStateIdPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/link-state-id YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_LinkStateIdPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_LinkStateIdPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_LinkStateIdPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-state-id"
//	Path from root:       ""
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_LinkStateIdPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-state-id"
//	Path from root:       ""
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_LinkStateIdPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_MetricPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/metric YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_MetricPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_MetricPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/metric YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_MetricPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_MetricPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "metric"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa).Metric
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_MetricPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "metric"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa).Metric
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_SequenceNumberPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/sequence-number YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_SequenceNumberPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_SequenceNumberPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/sequence-number YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_SequenceNumberPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_SequenceNumberPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa).SequenceNumber
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_SequenceNumberPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa).SequenceNumber
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPath struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathAny struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathMap represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathMap struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathMapAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathMapAny struct {
	*ygnmi.NodePath
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPath) AdvertisingRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AdvertisingRouterPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AdvertisingRouterPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathAny) AdvertisingRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AdvertisingRouterPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AdvertisingRouterPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Age (leaf): The time since the LSA's generation in seconds.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPath) Age() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AgePath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AgePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Age (leaf): The time since the LSA's generation in seconds.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathAny) Age() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AgePathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_AgePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// DestinationRouter (leaf): The destination router of LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/destination_router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/destination_router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPath) DestinationRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_DestinationRouterPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_DestinationRouterPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "destination_router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// DestinationRouter (leaf): The destination router of LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/destination_router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/destination_router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathAny) DestinationRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_DestinationRouterPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_DestinationRouterPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "destination_router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkStateId (leaf): The Link State ID for the specified LSA type.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/link-state-database/lsa-states/inter-area-router-lsa/*/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPath) LinkStateId() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_LinkStateIdPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_LinkStateIdPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "link-state-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkStateId (leaf): The Link State ID for the specified LSA type.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/link-state-database/lsa-states/inter-area-router-lsa/*/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathAny) LinkStateId() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_LinkStateIdPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_LinkStateIdPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "link-state-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Metric (leaf): The cost of the summary route TOS level 0 and all
// unspecified levels.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPath) Metric() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_MetricPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_MetricPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Metric (leaf): The cost of the summary route TOS level 0 and all
// unspecified levels.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathAny) Metric() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_MetricPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_MetricPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SequenceNumber (leaf): Sequence number to detect old and duplicate LSAs.
// The greater the sequence number the more recent the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPath) SequenceNumber() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_SequenceNumberPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_SequenceNumberPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SequenceNumber (leaf): Sequence number to detect old and duplicate LSAs.
// The greater the sequence number the more recent the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/inter-area-router-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathAny) SequenceNumber() *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_SequenceNumberPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa_SequenceNumberPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPath) State() ygnmi.SingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa] {
	return ygnmi.NewSingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsaPathAny) State() ygnmi.WildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa] {
	return ygnmi.NewWildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa](
		"Ospfv3Router_LinkStateDatabase_LsaStates_InterAreaRouterLsa",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AddressPrefixPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/address-prefix YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AddressPrefixPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AddressPrefixPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/address-prefix YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AddressPrefixPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AddressPrefixPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa).AddressPrefix
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AddressPrefixPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa).AddressPrefix
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AdvertisingRouterPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/advertising-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AdvertisingRouterPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AdvertisingRouterPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/advertising-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AdvertisingRouterPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AdvertisingRouterPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa).AdvertisingRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AdvertisingRouterPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa).AdvertisingRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AgePath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/age YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AgePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AgePathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/age YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AgePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AgePath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "age"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa).Age
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AgePathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "age"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa).Age
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_LinkStateIdPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/link-state-id YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_LinkStateIdPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_LinkStateIdPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/link-state-id YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_LinkStateIdPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_LinkStateIdPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_LinkStateIdPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-state-id"
//	Path from root:       ""
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_LinkStateIdPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-state-id"
//	Path from root:       ""
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_LinkStateIdPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_MetricPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/metric YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_MetricPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_MetricPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/metric YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_MetricPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_MetricPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "metric"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa).Metric
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_MetricPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "metric"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa).Metric
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_PrefixLengthPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/prefix-length YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_PrefixLengthPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_PrefixLengthPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/prefix-length YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_PrefixLengthPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_PrefixLengthPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa).PrefixLength
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_PrefixLengthPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa).PrefixLength
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_SequenceNumberPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/sequence-number YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_SequenceNumberPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_SequenceNumberPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/sequence-number YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_SequenceNumberPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_SequenceNumberPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa).SequenceNumber
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_SequenceNumberPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa).SequenceNumber
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPath struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathAny struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathMap represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathMap struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathMapAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathMapAny struct {
	*ygnmi.NodePath
}

// AddressPrefix (leaf): The first IPv6 address prefix to be advertised in the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPath) AddressPrefix() *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AddressPrefixPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AddressPrefixPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AddressPrefix (leaf): The first IPv6 address prefix to be advertised in the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathAny) AddressPrefix() *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AddressPrefixPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AddressPrefixPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPath) AdvertisingRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AdvertisingRouterPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AdvertisingRouterPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathAny) AdvertisingRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AdvertisingRouterPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AdvertisingRouterPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Age (leaf): The time since the LSA's generation in seconds.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPath) Age() *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AgePath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AgePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Age (leaf): The time since the LSA's generation in seconds.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathAny) Age() *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AgePathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_AgePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkStateId (leaf): The Link State ID for the specified LSA type.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/link-state-database/lsa-states/intra-area-prefix-lsa/*/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPath) LinkStateId() *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_LinkStateIdPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_LinkStateIdPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "link-state-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkStateId (leaf): The Link State ID for the specified LSA type.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/link-state-database/lsa-states/intra-area-prefix-lsa/*/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathAny) LinkStateId() *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_LinkStateIdPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_LinkStateIdPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "link-state-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Metric (leaf): The cost of the summary route TOS level 0 and all
// unspecified levels.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPath) Metric() *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_MetricPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_MetricPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Metric (leaf): The cost of the summary route TOS level 0 and all
// unspecified levels.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathAny) Metric() *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_MetricPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_MetricPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PrefixLength (leaf): The length of the IPv6 address prefix, in bits.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPath) PrefixLength() *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_PrefixLengthPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_PrefixLengthPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PrefixLength (leaf): The length of the IPv6 address prefix, in bits.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathAny) PrefixLength() *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_PrefixLengthPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_PrefixLengthPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SequenceNumber (leaf): Sequence number to detect old and duplicate LSAs.
// The greater the sequence number the more recent the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPath) SequenceNumber() *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_SequenceNumberPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_SequenceNumberPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SequenceNumber (leaf): Sequence number to detect old and duplicate LSAs.
// The greater the sequence number the more recent the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/intra-area-prefix-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathAny) SequenceNumber() *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_SequenceNumberPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa_SequenceNumberPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPath) State() ygnmi.SingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa] {
	return ygnmi.NewSingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsaPathAny) State() ygnmi.WildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa] {
	return ygnmi.NewWildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa](
		"Ospfv3Router_LinkStateDatabase_LsaStates_IntraAreaPrefixLsa",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AddressPrefixPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/address-prefix YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AddressPrefixPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AddressPrefixPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/address-prefix YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AddressPrefixPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AddressPrefixPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa).AddressPrefix
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AddressPrefixPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa).AddressPrefix
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AdvertisingRouterPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/advertising-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AdvertisingRouterPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AdvertisingRouterPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/advertising-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AdvertisingRouterPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AdvertisingRouterPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa).AdvertisingRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AdvertisingRouterPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa).AdvertisingRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AgePath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/age YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AgePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AgePathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/age YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AgePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AgePath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "age"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa).Age
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AgePathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "age"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa).Age
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkLocalAddressPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/link-local-address YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkLocalAddressPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkLocalAddressPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/link-local-address YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkLocalAddressPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-local-address"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/link-local-address"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkLocalAddressPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-local-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa).LinkLocalAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-local-address"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/link-local-address"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkLocalAddressPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-local-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa).LinkLocalAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkStateIdPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/link-state-id YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkStateIdPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkStateIdPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/link-state-id YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkStateIdPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkStateIdPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkStateIdPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-state-id"
//	Path from root:       ""
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkStateIdPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-state-id"
//	Path from root:       ""
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkStateIdPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_PrefixLengthPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/prefix-length YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_PrefixLengthPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_PrefixLengthPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/prefix-length YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_PrefixLengthPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_PrefixLengthPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa).PrefixLength
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_PrefixLengthPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa).PrefixLength
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_SequenceNumberPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/sequence-number YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_SequenceNumberPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_SequenceNumberPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/sequence-number YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_SequenceNumberPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_SequenceNumberPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa).SequenceNumber
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_SequenceNumberPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa).SequenceNumber
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPath struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathAny struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathMap represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathMap struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathMapAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathMapAny struct {
	*ygnmi.NodePath
}

// AddressPrefix (leaf): The first IPv6 address prefix to be advertised in the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPath) AddressPrefix() *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AddressPrefixPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AddressPrefixPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AddressPrefix (leaf): The first IPv6 address prefix to be advertised in the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathAny) AddressPrefix() *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AddressPrefixPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AddressPrefixPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPath) AdvertisingRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AdvertisingRouterPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AdvertisingRouterPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathAny) AdvertisingRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AdvertisingRouterPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AdvertisingRouterPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Age (leaf): The time since the LSA's generation in seconds.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPath) Age() *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AgePath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AgePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Age (leaf): The time since the LSA's generation in seconds.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathAny) Age() *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AgePathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_AgePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkLocalAddress (leaf): The IPV6 Link Local address for the originating router's interface attached to this link.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-local-address"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/link-local-address"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPath) LinkLocalAddress() *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkLocalAddressPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkLocalAddressPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "link-local-address"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkLocalAddress (leaf): The IPV6 Link Local address for the originating router's interface attached to this link.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-local-address"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/link-local-address"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathAny) LinkLocalAddress() *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkLocalAddressPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkLocalAddressPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "link-local-address"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkStateId (leaf): The Link State ID for the specified LSA type.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/link-state-database/lsa-states/link-lsa/*/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPath) LinkStateId() *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkStateIdPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkStateIdPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "link-state-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkStateId (leaf): The Link State ID for the specified LSA type.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/link-state-database/lsa-states/link-lsa/*/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathAny) LinkStateId() *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkStateIdPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_LinkStateIdPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "link-state-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PrefixLength (leaf): The length of the IPv6 address prefix, in bits.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPath) PrefixLength() *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_PrefixLengthPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_PrefixLengthPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PrefixLength (leaf): The length of the IPv6 address prefix, in bits.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathAny) PrefixLength() *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_PrefixLengthPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_PrefixLengthPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SequenceNumber (leaf): Sequence number to detect old and duplicate LSAs.
// The greater the sequence number the more recent the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPath) SequenceNumber() *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_SequenceNumberPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_SequenceNumberPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SequenceNumber (leaf): Sequence number to detect old and duplicate LSAs.
// The greater the sequence number the more recent the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/link-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathAny) SequenceNumber() *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_SequenceNumberPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa_SequenceNumberPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPath) State() ygnmi.SingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa] {
	return ygnmi.NewSingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsaPathAny) State() ygnmi.WildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa] {
	return ygnmi.NewWildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa](
		"Ospfv3Router_LinkStateDatabase_LsaStates_LinkLsa",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AdvertisingRouterPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/advertising-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AdvertisingRouterPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AdvertisingRouterPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/advertising-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AdvertisingRouterPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AdvertisingRouterPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa).AdvertisingRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AdvertisingRouterPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa).AdvertisingRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AgePath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/age YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AgePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AgePathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/age YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AgePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AgePath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "age"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa).Age
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AgePathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "age"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa).Age
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AttachedRouterPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/attached-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AttachedRouterPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AttachedRouterPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/attached-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AttachedRouterPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/attached-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/attached-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AttachedRouterPath) State() ygnmi.SingletonQuery[[]string] {
	return ygnmi.NewSingletonQuery[[]string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attached-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) ([]string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa).AttachedRouter
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/attached-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/attached-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AttachedRouterPathAny) State() ygnmi.WildcardQuery[[]string] {
	return ygnmi.NewWildcardQuery[[]string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attached-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) ([]string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa).AttachedRouter
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_LinkStateIdPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/link-state-id YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_LinkStateIdPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_LinkStateIdPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/link-state-id YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_LinkStateIdPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_LinkStateIdPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_LinkStateIdPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-state-id"
//	Path from root:       ""
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_LinkStateIdPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-state-id"
//	Path from root:       ""
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_LinkStateIdPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_SequenceNumberPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/sequence-number YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_SequenceNumberPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_SequenceNumberPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/sequence-number YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_SequenceNumberPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_SequenceNumberPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa).SequenceNumber
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_SequenceNumberPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa).SequenceNumber
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPath struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathAny struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathMap represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathMap struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathMapAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathMapAny struct {
	*ygnmi.NodePath
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPath) AdvertisingRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AdvertisingRouterPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AdvertisingRouterPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathAny) AdvertisingRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AdvertisingRouterPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AdvertisingRouterPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Age (leaf): The time since the LSA's generation in seconds.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPath) Age() *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AgePath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AgePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Age (leaf): The time since the LSA's generation in seconds.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathAny) Age() *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AgePathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AgePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttachedRouter (leaf-list): A list of the router ID of the routers that are attached to
// the network described by the Network LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/attached-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/attached-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPath) AttachedRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AttachedRouterPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AttachedRouterPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attached-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttachedRouter (leaf-list): A list of the router ID of the routers that are attached to
// the network described by the Network LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/attached-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/attached-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathAny) AttachedRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AttachedRouterPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_AttachedRouterPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attached-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkStateId (leaf): The Link State ID for the specified LSA type.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/link-state-database/lsa-states/network-lsa/*/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPath) LinkStateId() *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_LinkStateIdPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_LinkStateIdPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "link-state-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkStateId (leaf): The Link State ID for the specified LSA type.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/link-state-database/lsa-states/network-lsa/*/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathAny) LinkStateId() *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_LinkStateIdPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_LinkStateIdPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "link-state-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SequenceNumber (leaf): Sequence number to detect old and duplicate LSAs.
// The greater the sequence number the more recent the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPath) SequenceNumber() *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_SequenceNumberPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_SequenceNumberPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SequenceNumber (leaf): Sequence number to detect old and duplicate LSAs.
// The greater the sequence number the more recent the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/network-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathAny) SequenceNumber() *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_SequenceNumberPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa_SequenceNumberPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPath) State() ygnmi.SingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa] {
	return ygnmi.NewSingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsaPathAny) State() ygnmi.WildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa] {
	return ygnmi.NewWildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NetworkLsa",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AddressPrefixPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/address-prefix YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AddressPrefixPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AddressPrefixPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/address-prefix YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AddressPrefixPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AddressPrefixPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).AddressPrefix
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AddressPrefixPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).AddressPrefix
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AdvertisingRouterPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/advertising-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AdvertisingRouterPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AdvertisingRouterPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/advertising-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AdvertisingRouterPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AdvertisingRouterPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).AdvertisingRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AdvertisingRouterPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).AdvertisingRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AgePath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/age YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AgePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AgePathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/age YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AgePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AgePath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "age"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).Age
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AgePathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "age"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).Age
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_ForwardingAddressPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/forwarding-address YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_ForwardingAddressPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_ForwardingAddressPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/forwarding-address YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_ForwardingAddressPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/forwarding-address"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/forwarding-address"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_ForwardingAddressPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "forwarding-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).ForwardingAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/forwarding-address"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/forwarding-address"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_ForwardingAddressPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "forwarding-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).ForwardingAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_LinkStateIdPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/link-state-id YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_LinkStateIdPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_LinkStateIdPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/link-state-id YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_LinkStateIdPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_LinkStateIdPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_LinkStateIdPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-state-id"
//	Path from root:       ""
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_LinkStateIdPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-state-id"
//	Path from root:       ""
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_LinkStateIdPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_MetricPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/metric YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_MetricPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_MetricPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/metric YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_MetricPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_MetricPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "metric"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).Metric
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_MetricPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "metric"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).Metric
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_PrefixLengthPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/prefix-length YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_PrefixLengthPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_PrefixLengthPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/prefix-length YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_PrefixLengthPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_PrefixLengthPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).PrefixLength
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_PrefixLengthPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).PrefixLength
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_RouteTagPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/route-tag YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_RouteTagPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_RouteTagPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/route-tag YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_RouteTagPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/route-tag"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/route-tag"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_RouteTagPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "route-tag"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).RouteTag
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/route-tag"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/route-tag"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_RouteTagPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "route-tag"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).RouteTag
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_SequenceNumberPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/sequence-number YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_SequenceNumberPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_SequenceNumberPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/sequence-number YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_SequenceNumberPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_SequenceNumberPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).SequenceNumber
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_SequenceNumberPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa).SequenceNumber
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPath struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathMap represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathMap struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathMapAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathMapAny struct {
	*ygnmi.NodePath
}

// AddressPrefix (leaf): The first IPv6 address prefix to be advertised in the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPath) AddressPrefix() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AddressPrefixPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AddressPrefixPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AddressPrefix (leaf): The first IPv6 address prefix to be advertised in the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/address-prefix"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/address-prefix"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny) AddressPrefix() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AddressPrefixPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AddressPrefixPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "address-prefix"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPath) AdvertisingRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AdvertisingRouterPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AdvertisingRouterPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny) AdvertisingRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AdvertisingRouterPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AdvertisingRouterPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Age (leaf): The time since the LSA's generation in seconds.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPath) Age() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AgePath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AgePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Age (leaf): The time since the LSA's generation in seconds.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny) Age() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AgePathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_AgePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ForwardingAddress (leaf): The IPV6 address where traffic for the advertised destination is forwarded.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/forwarding-address"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/forwarding-address"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPath) ForwardingAddress() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_ForwardingAddressPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_ForwardingAddressPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ForwardingAddress (leaf): The IPV6 address where traffic for the advertised destination is forwarded.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/forwarding-address"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/forwarding-address"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny) ForwardingAddress() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_ForwardingAddressPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_ForwardingAddressPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkStateId (leaf): The Link State ID for the specified LSA type.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/link-state-database/lsa-states/nssa-lsa/*/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPath) LinkStateId() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_LinkStateIdPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_LinkStateIdPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "link-state-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkStateId (leaf): The Link State ID for the specified LSA type.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/link-state-database/lsa-states/nssa-lsa/*/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny) LinkStateId() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_LinkStateIdPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_LinkStateIdPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "link-state-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Metric (leaf): The cost of the summary route TOS level 0 and all
// unspecified levels.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPath) Metric() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_MetricPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_MetricPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Metric (leaf): The cost of the summary route TOS level 0 and all
// unspecified levels.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/metric"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/metric"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny) Metric() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_MetricPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_MetricPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PrefixLength (leaf): The length of the IPv6 address prefix, in bits.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPath) PrefixLength() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_PrefixLengthPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_PrefixLengthPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PrefixLength (leaf): The length of the IPv6 address prefix, in bits.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/prefix-length"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/prefix-length"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny) PrefixLength() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_PrefixLengthPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_PrefixLengthPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RouteTag (leaf): The optional field may be used to communicate additional information between AS boundary routers.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/route-tag"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/route-tag"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPath) RouteTag() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_RouteTagPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_RouteTagPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "route-tag"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RouteTag (leaf): The optional field may be used to communicate additional information between AS boundary routers.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/route-tag"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/route-tag"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny) RouteTag() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_RouteTagPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_RouteTagPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "route-tag"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SequenceNumber (leaf): Sequence number to detect old and duplicate LSAs.
// The greater the sequence number the more recent the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPath) SequenceNumber() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_SequenceNumberPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_SequenceNumberPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SequenceNumber (leaf): Sequence number to detect old and duplicate LSAs.
// The greater the sequence number the more recent the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/nssa-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny) SequenceNumber() *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_SequenceNumberPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa_SequenceNumberPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPath) State() ygnmi.SingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa] {
	return ygnmi.NewSingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsaPathAny) State() ygnmi.WildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa] {
	return ygnmi.NewWildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa](
		"Ospfv3Router_LinkStateDatabase_LsaStates_NssaLsa",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AdvertisingRouterPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/advertising-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AdvertisingRouterPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AdvertisingRouterPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/advertising-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AdvertisingRouterPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AdvertisingRouterPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa).AdvertisingRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AdvertisingRouterPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa).AdvertisingRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AgePath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/age YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AgePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AgePathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/age YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AgePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AgePath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "age"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa).Age
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AgePathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "age"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa).Age
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkStateIdPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/link-state-id YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkStateIdPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkStateIdPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/link-state-id YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkStateIdPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkStateIdPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkStateIdPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-state-id"
//	Path from root:       ""
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkStateIdPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "link-state-id"
//	Path from root:       ""
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkStateIdPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"link-state-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa).LinkStateId
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_NeighborRouterPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/neighbor-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_NeighborRouterPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_NeighborRouterPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/neighbor-router YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_NeighborRouterPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/neighbor-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/neighbor-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_NeighborRouterPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "neighbor-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa).NeighborRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/neighbor-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/neighbor-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_NeighborRouterPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "neighbor-router"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa).NeighborRouter
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_SequenceNumberPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/sequence-number YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_SequenceNumberPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_SequenceNumberPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/sequence-number YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_SequenceNumberPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_SequenceNumberPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa).SequenceNumber
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_SequenceNumberPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa).SequenceNumber
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPath struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathAny struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathMap represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathMap struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathMapAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathMapAny struct {
	*ygnmi.NodePath
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPath) AdvertisingRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AdvertisingRouterPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AdvertisingRouterPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/advertising-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/advertising-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathAny) AdvertisingRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AdvertisingRouterPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AdvertisingRouterPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Age (leaf): The time since the LSA's generation in seconds.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPath) Age() *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AgePath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AgePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Age (leaf): The time since the LSA's generation in seconds.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/age"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/age"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathAny) Age() *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AgePathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_AgePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkAny (list): OSPFv3 link attributes.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/link"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPath) LinkAny() *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "link"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// LinkAny (list): OSPFv3 link attributes.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/link"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/link"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathAny) LinkAny() *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "link"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// LinkStateId (leaf): The Link State ID for the specified LSA type.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/link-state-database/lsa-states/router-lsa/*/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPath) LinkStateId() *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkStateIdPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkStateIdPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "link-state-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkStateId (leaf): The Link State ID for the specified LSA type.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "*/link-state-id"
//	Path from root:       "/ospfv3-routers/ospfv3-router/*/link-state-database/lsa-states/router-lsa/*/link-state-id"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathAny) LinkStateId() *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkStateIdPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkStateIdPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "link-state-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// NeighborRouter (leaf): The router ID of the neighbor that is attached to the link.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/neighbor-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/neighbor-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPath) NeighborRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_NeighborRouterPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_NeighborRouterPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "neighbor-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// NeighborRouter (leaf): The router ID of the neighbor that is attached to the link.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/neighbor-router"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/neighbor-router"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathAny) NeighborRouter() *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_NeighborRouterPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_NeighborRouterPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "neighbor-router"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SequenceNumber (leaf): Sequence number to detect old and duplicate LSAs.
// The greater the sequence number the more recent the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPath) SequenceNumber() *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_SequenceNumberPath {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_SequenceNumberPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SequenceNumber (leaf): Sequence number to detect old and duplicate LSAs.
// The greater the sequence number the more recent the LSA.
//
//	Defining module:      "open-traffic-generator-ospfv3"
//	Instantiating module: "open-traffic-generator-ospfv3"
//	Path from parent:     "state/sequence-number"
//	Path from root:       "/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/sequence-number"
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathAny) SequenceNumber() *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_SequenceNumberPathAny {
	ps := &Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_SequenceNumberPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPath) State() ygnmi.SingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa] {
	return ygnmi.NewSingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa](
		"Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsaPathAny) State() ygnmi.WildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa] {
	return ygnmi.NewWildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa](
		"Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkPath represents the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/link YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkPath struct {
	*ygnmi.NodePath
}

// Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkPathAny represents the wildcard version of the /open-traffic-generator-ospfv3/ospfv3-routers/ospfv3-router/state/link-state-database/lsa-states/router-lsa/state/link YANG schema element.
type Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkPathAny struct {
	*ygnmi.NodePath
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkPath) State() ygnmi.SingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_Link] {
	return ygnmi.NewSingletonQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_Link](
		"Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_Link",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_LinkPathAny) State() ygnmi.WildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_Link] {
	return ygnmi.NewWildcardQuery[*oc.Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_Link](
		"Ospfv3Router_LinkStateDatabase_LsaStates_RouterLsa_Link",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}
