/*
Package otg is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was true
in this case).

This package was generated by ygnmi version: v0.11.1: (ygot: v0.29.20)
using the following YANG input files:
  - models-yang/models/bgp/open-traffic-generator-bgp.yang
  - models-yang/models/discovery/open-traffic-generator-discovery.yang
  - models-yang/models/dhcp/v4client/open-traffic-generator-dhcpv4client.yang
  - models-yang/models/dhcp/v4server/open-traffic-generator-dhcpv4server.yang
  - models-yang/models/dhcp/v6client/open-traffic-generator-dhcpv6client.yang
  - models-yang/models/dhcp/v6server/open-traffic-generator-dhcpv6server.yang
  - models-yang/models/flow/open-traffic-generator-flow.yang
  - models-yang/models/interface/open-traffic-generator-port.yang
  - models-yang/models/isis/open-traffic-generator-isis.yang
  - models-yang/models/lacp/open-traffic-generator-lacp.yang
  - models-yang/models/lag/open-traffic-generator-lag.yang
  - models-yang/models/lldp/open-traffic-generator-lldp.yang
  - models-yang/models/ospfv2/open-traffic-generator-ospfv2.yang
  - models-yang/models/platform/open-traffic-generator-platform.yang
  - models-yang/models/rsvp/open-traffic-generator-rsvp.yang
  - models-yang/models/types/open-traffic-generator-types.yang

Imported modules were sourced from:
  - models-yang/models/...
*/
package otg

import (
	"github.com/openconfig/ygot/ygot"
)

// E_AdjacencySid_AdjacencyType is a derived int64 type which is used to represent
// the enumerated node AdjacencySid_AdjacencyType. An additional value named
// AdjacencySid_AdjacencyType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AdjacencySid_AdjacencyType int64

// IsYANGGoEnum ensures that AdjacencySid_AdjacencyType implements the yang.GoEnum
// interface. This ensures that AdjacencySid_AdjacencyType can be identified as a
// mapped type for a YANG enumeration.
func (E_AdjacencySid_AdjacencyType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AdjacencySid_AdjacencyType.
func (E_AdjacencySid_AdjacencyType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_AdjacencySid_AdjacencyType.
func (e E_AdjacencySid_AdjacencyType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AdjacencySid_AdjacencyType")
}

const (
	// AdjacencySid_AdjacencyType_UNSET corresponds to the value UNSET of AdjacencySid_AdjacencyType
	AdjacencySid_AdjacencyType_UNSET E_AdjacencySid_AdjacencyType = 0
	// AdjacencySid_AdjacencyType_ADJ_SID corresponds to the value ADJ_SID of AdjacencySid_AdjacencyType
	AdjacencySid_AdjacencyType_ADJ_SID E_AdjacencySid_AdjacencyType = 1
	// AdjacencySid_AdjacencyType_LAN_ADJ_SID corresponds to the value LAN_ADJ_SID of AdjacencySid_AdjacencyType
	AdjacencySid_AdjacencyType_LAN_ADJ_SID E_AdjacencySid_AdjacencyType = 2
)

// E_AdjacencySid_Flags is a derived int64 type which is used to represent
// the enumerated node AdjacencySid_Flags. An additional value named
// AdjacencySid_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AdjacencySid_Flags int64

// IsYANGGoEnum ensures that AdjacencySid_Flags implements the yang.GoEnum
// interface. This ensures that AdjacencySid_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_AdjacencySid_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AdjacencySid_Flags.
func (E_AdjacencySid_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_AdjacencySid_Flags.
func (e E_AdjacencySid_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AdjacencySid_Flags")
}

const (
	// AdjacencySid_Flags_UNSET corresponds to the value UNSET of AdjacencySid_Flags
	AdjacencySid_Flags_UNSET E_AdjacencySid_Flags = 0
	// AdjacencySid_Flags_ADDRESS_FAMILY corresponds to the value ADDRESS_FAMILY of AdjacencySid_Flags
	AdjacencySid_Flags_ADDRESS_FAMILY E_AdjacencySid_Flags = 1
	// AdjacencySid_Flags_BACKUP corresponds to the value BACKUP of AdjacencySid_Flags
	AdjacencySid_Flags_BACKUP E_AdjacencySid_Flags = 2
	// AdjacencySid_Flags_VALUE corresponds to the value VALUE of AdjacencySid_Flags
	AdjacencySid_Flags_VALUE E_AdjacencySid_Flags = 3
	// AdjacencySid_Flags_LOCAL corresponds to the value LOCAL of AdjacencySid_Flags
	AdjacencySid_Flags_LOCAL E_AdjacencySid_Flags = 4
	// AdjacencySid_Flags_SET corresponds to the value SET of AdjacencySid_Flags
	AdjacencySid_Flags_SET E_AdjacencySid_Flags = 5
	// AdjacencySid_Flags_PERSISTENT corresponds to the value PERSISTENT of AdjacencySid_Flags
	AdjacencySid_Flags_PERSISTENT E_AdjacencySid_Flags = 6
)

// E_BgpPeer_SessionState is a derived int64 type which is used to represent
// the enumerated node BgpPeer_SessionState. An additional value named
// BgpPeer_SessionState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpPeer_SessionState int64

// IsYANGGoEnum ensures that BgpPeer_SessionState implements the yang.GoEnum
// interface. This ensures that BgpPeer_SessionState can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpPeer_SessionState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpPeer_SessionState.
func (E_BgpPeer_SessionState) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpPeer_SessionState.
func (e E_BgpPeer_SessionState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpPeer_SessionState")
}

const (
	// BgpPeer_SessionState_UNSET corresponds to the value UNSET of BgpPeer_SessionState
	BgpPeer_SessionState_UNSET E_BgpPeer_SessionState = 0
	// BgpPeer_SessionState_IDLE corresponds to the value IDLE of BgpPeer_SessionState
	BgpPeer_SessionState_IDLE E_BgpPeer_SessionState = 1
	// BgpPeer_SessionState_CONNECT corresponds to the value CONNECT of BgpPeer_SessionState
	BgpPeer_SessionState_CONNECT E_BgpPeer_SessionState = 2
	// BgpPeer_SessionState_ACTIVE corresponds to the value ACTIVE of BgpPeer_SessionState
	BgpPeer_SessionState_ACTIVE E_BgpPeer_SessionState = 3
	// BgpPeer_SessionState_OPEN_SENT corresponds to the value OPEN_SENT of BgpPeer_SessionState
	BgpPeer_SessionState_OPEN_SENT E_BgpPeer_SessionState = 4
	// BgpPeer_SessionState_OPEN_CONFIRM corresponds to the value OPEN_CONFIRM of BgpPeer_SessionState
	BgpPeer_SessionState_OPEN_CONFIRM E_BgpPeer_SessionState = 5
	// BgpPeer_SessionState_ESTABLISHED corresponds to the value ESTABLISHED of BgpPeer_SessionState
	BgpPeer_SessionState_ESTABLISHED E_BgpPeer_SessionState = 6
)

// E_Capabilities_Name is a derived int64 type which is used to represent
// the enumerated node Capabilities_Name. An additional value named
// Capabilities_Name_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Capabilities_Name int64

// IsYANGGoEnum ensures that Capabilities_Name implements the yang.GoEnum
// interface. This ensures that Capabilities_Name can be identified as a
// mapped type for a YANG enumeration.
func (E_Capabilities_Name) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Capabilities_Name.
func (E_Capabilities_Name) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Capabilities_Name.
func (e E_Capabilities_Name) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Capabilities_Name")
}

const (
	// Capabilities_Name_UNSET corresponds to the value UNSET of Capabilities_Name
	Capabilities_Name_UNSET E_Capabilities_Name = 0
	// Capabilities_Name_MAC_BRIDGE corresponds to the value MAC_BRIDGE of Capabilities_Name
	Capabilities_Name_MAC_BRIDGE E_Capabilities_Name = 1
	// Capabilities_Name_TWO_PORT_MAC_RELAY corresponds to the value TWO_PORT_MAC_RELAY of Capabilities_Name
	Capabilities_Name_TWO_PORT_MAC_RELAY E_Capabilities_Name = 2
	// Capabilities_Name_REPEATER corresponds to the value REPEATER of Capabilities_Name
	Capabilities_Name_REPEATER E_Capabilities_Name = 3
	// Capabilities_Name_DOCSIS_CABLE_DEVICE corresponds to the value DOCSIS_CABLE_DEVICE of Capabilities_Name
	Capabilities_Name_DOCSIS_CABLE_DEVICE E_Capabilities_Name = 4
	// Capabilities_Name_S_VLAN corresponds to the value S_VLAN of Capabilities_Name
	Capabilities_Name_S_VLAN E_Capabilities_Name = 5
	// Capabilities_Name_TELEPHONE corresponds to the value TELEPHONE of Capabilities_Name
	Capabilities_Name_TELEPHONE E_Capabilities_Name = 6
	// Capabilities_Name_OTHER corresponds to the value OTHER of Capabilities_Name
	Capabilities_Name_OTHER E_Capabilities_Name = 7
	// Capabilities_Name_ROUTER corresponds to the value ROUTER of Capabilities_Name
	Capabilities_Name_ROUTER E_Capabilities_Name = 8
	// Capabilities_Name_C_VLAN corresponds to the value C_VLAN of Capabilities_Name
	Capabilities_Name_C_VLAN E_Capabilities_Name = 9
	// Capabilities_Name_STATION_ONLY corresponds to the value STATION_ONLY of Capabilities_Name
	Capabilities_Name_STATION_ONLY E_Capabilities_Name = 10
	// Capabilities_Name_WLAN_ACCESS_POINT corresponds to the value WLAN_ACCESS_POINT of Capabilities_Name
	Capabilities_Name_WLAN_ACCESS_POINT E_Capabilities_Name = 11
)

// E_Capability_Flags is a derived int64 type which is used to represent
// the enumerated node Capability_Flags. An additional value named
// Capability_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Capability_Flags int64

// IsYANGGoEnum ensures that Capability_Flags implements the yang.GoEnum
// interface. This ensures that Capability_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_Capability_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Capability_Flags.
func (E_Capability_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Capability_Flags.
func (e E_Capability_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Capability_Flags")
}

const (
	// Capability_Flags_UNSET corresponds to the value UNSET of Capability_Flags
	Capability_Flags_UNSET E_Capability_Flags = 0
	// Capability_Flags_FLOOD corresponds to the value FLOOD of Capability_Flags
	Capability_Flags_FLOOD E_Capability_Flags = 1
	// Capability_Flags_DOWN corresponds to the value DOWN of Capability_Flags
	Capability_Flags_DOWN E_Capability_Flags = 2
)

// E_Component_Name is a derived int64 type which is used to represent
// the enumerated node Component_Name. An additional value named
// Component_Name_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Component_Name int64

// IsYANGGoEnum ensures that Component_Name implements the yang.GoEnum
// interface. This ensures that Component_Name can be identified as a
// mapped type for a YANG enumeration.
func (E_Component_Name) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Component_Name.
func (E_Component_Name) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Component_Name.
func (e E_Component_Name) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Component_Name")
}

const (
	// Component_Name_UNSET corresponds to the value UNSET of Component_Name
	Component_Name_UNSET E_Component_Name = 0
	// Component_Name_keng_controller corresponds to the value keng_controller of Component_Name
	Component_Name_keng_controller E_Component_Name = 1
)

// E_Ero_Type is a derived int64 type which is used to represent
// the enumerated node Ero_Type. An additional value named
// Ero_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ero_Type int64

// IsYANGGoEnum ensures that Ero_Type implements the yang.GoEnum
// interface. This ensures that Ero_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_Ero_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ero_Type.
func (E_Ero_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Ero_Type.
func (e E_Ero_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ero_Type")
}

const (
	// Ero_Type_UNSET corresponds to the value UNSET of Ero_Type
	Ero_Type_UNSET E_Ero_Type = 0
	// Ero_Type_IPV4 corresponds to the value IPV4 of Ero_Type
	Ero_Type_IPV4 E_Ero_Type = 1
	// Ero_Type_IPV6 corresponds to the value IPV6 of Ero_Type
	Ero_Type_IPV6 E_Ero_Type = 2
	// Ero_Type_ASN corresponds to the value ASN of Ero_Type
	Ero_Type_ASN E_Ero_Type = 3
	// Ero_Type_ASN4 corresponds to the value ASN4 of Ero_Type
	Ero_Type_ASN4 E_Ero_Type = 4
	// Ero_Type_LABEL corresponds to the value LABEL of Ero_Type
	Ero_Type_LABEL E_Ero_Type = 5
	// Ero_Type_UNNUMBERED_INTERFACE corresponds to the value UNNUMBERED_INTERFACE of Ero_Type
	Ero_Type_UNNUMBERED_INTERFACE E_Ero_Type = 6
)

// E_ExtendedCommunity_BgpExtendedCommunityStructuredType is a derived int64 type which is used to represent
// the enumerated node ExtendedCommunity_BgpExtendedCommunityStructuredType. An additional value named
// ExtendedCommunity_BgpExtendedCommunityStructuredType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_ExtendedCommunity_BgpExtendedCommunityStructuredType int64

// IsYANGGoEnum ensures that ExtendedCommunity_BgpExtendedCommunityStructuredType implements the yang.GoEnum
// interface. This ensures that ExtendedCommunity_BgpExtendedCommunityStructuredType can be identified as a
// mapped type for a YANG enumeration.
func (E_ExtendedCommunity_BgpExtendedCommunityStructuredType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  ExtendedCommunity_BgpExtendedCommunityStructuredType.
func (E_ExtendedCommunity_BgpExtendedCommunityStructuredType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_ExtendedCommunity_BgpExtendedCommunityStructuredType.
func (e E_ExtendedCommunity_BgpExtendedCommunityStructuredType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_ExtendedCommunity_BgpExtendedCommunityStructuredType")
}

const (
	// ExtendedCommunity_BgpExtendedCommunityStructuredType_UNSET corresponds to the value UNSET of ExtendedCommunity_BgpExtendedCommunityStructuredType
	ExtendedCommunity_BgpExtendedCommunityStructuredType_UNSET E_ExtendedCommunity_BgpExtendedCommunityStructuredType = 0
	// ExtendedCommunity_BgpExtendedCommunityStructuredType_TRANSITIVE_2OCTET_AS_TYPE corresponds to the value TRANSITIVE_2OCTET_AS_TYPE of ExtendedCommunity_BgpExtendedCommunityStructuredType
	ExtendedCommunity_BgpExtendedCommunityStructuredType_TRANSITIVE_2OCTET_AS_TYPE E_ExtendedCommunity_BgpExtendedCommunityStructuredType = 1
	// ExtendedCommunity_BgpExtendedCommunityStructuredType_TRANSITIVE_IPV4_ADDRESS_TYPE corresponds to the value TRANSITIVE_IPV4_ADDRESS_TYPE of ExtendedCommunity_BgpExtendedCommunityStructuredType
	ExtendedCommunity_BgpExtendedCommunityStructuredType_TRANSITIVE_IPV4_ADDRESS_TYPE E_ExtendedCommunity_BgpExtendedCommunityStructuredType = 2
	// ExtendedCommunity_BgpExtendedCommunityStructuredType_TRANSITIVE_4OCTET_AS_TYPE corresponds to the value TRANSITIVE_4OCTET_AS_TYPE of ExtendedCommunity_BgpExtendedCommunityStructuredType
	ExtendedCommunity_BgpExtendedCommunityStructuredType_TRANSITIVE_4OCTET_AS_TYPE E_ExtendedCommunity_BgpExtendedCommunityStructuredType = 3
	// ExtendedCommunity_BgpExtendedCommunityStructuredType_TRANSITIVE_OPAQUE_TYPE corresponds to the value TRANSITIVE_OPAQUE_TYPE of ExtendedCommunity_BgpExtendedCommunityStructuredType
	ExtendedCommunity_BgpExtendedCommunityStructuredType_TRANSITIVE_OPAQUE_TYPE E_ExtendedCommunity_BgpExtendedCommunityStructuredType = 4
	// ExtendedCommunity_BgpExtendedCommunityStructuredType_NON_TRANSITIVE_2OCTET_AS_TYPE corresponds to the value NON_TRANSITIVE_2OCTET_AS_TYPE of ExtendedCommunity_BgpExtendedCommunityStructuredType
	ExtendedCommunity_BgpExtendedCommunityStructuredType_NON_TRANSITIVE_2OCTET_AS_TYPE E_ExtendedCommunity_BgpExtendedCommunityStructuredType = 5
)

// E_ExtendedIpv4Reachability_Prefix_RedistributionType is a derived int64 type which is used to represent
// the enumerated node ExtendedIpv4Reachability_Prefix_RedistributionType. An additional value named
// ExtendedIpv4Reachability_Prefix_RedistributionType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_ExtendedIpv4Reachability_Prefix_RedistributionType int64

// IsYANGGoEnum ensures that ExtendedIpv4Reachability_Prefix_RedistributionType implements the yang.GoEnum
// interface. This ensures that ExtendedIpv4Reachability_Prefix_RedistributionType can be identified as a
// mapped type for a YANG enumeration.
func (E_ExtendedIpv4Reachability_Prefix_RedistributionType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  ExtendedIpv4Reachability_Prefix_RedistributionType.
func (E_ExtendedIpv4Reachability_Prefix_RedistributionType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_ExtendedIpv4Reachability_Prefix_RedistributionType.
func (e E_ExtendedIpv4Reachability_Prefix_RedistributionType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_ExtendedIpv4Reachability_Prefix_RedistributionType")
}

const (
	// ExtendedIpv4Reachability_Prefix_RedistributionType_UNSET corresponds to the value UNSET of ExtendedIpv4Reachability_Prefix_RedistributionType
	ExtendedIpv4Reachability_Prefix_RedistributionType_UNSET E_ExtendedIpv4Reachability_Prefix_RedistributionType = 0
	// ExtendedIpv4Reachability_Prefix_RedistributionType_UP corresponds to the value UP of ExtendedIpv4Reachability_Prefix_RedistributionType
	ExtendedIpv4Reachability_Prefix_RedistributionType_UP E_ExtendedIpv4Reachability_Prefix_RedistributionType = 1
	// ExtendedIpv4Reachability_Prefix_RedistributionType_DOWN corresponds to the value DOWN of ExtendedIpv4Reachability_Prefix_RedistributionType
	ExtendedIpv4Reachability_Prefix_RedistributionType_DOWN E_ExtendedIpv4Reachability_Prefix_RedistributionType = 2
)

// E_Ipv4ExternalReachability_Prefix_OriginType is a derived int64 type which is used to represent
// the enumerated node Ipv4ExternalReachability_Prefix_OriginType. An additional value named
// Ipv4ExternalReachability_Prefix_OriginType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ipv4ExternalReachability_Prefix_OriginType int64

// IsYANGGoEnum ensures that Ipv4ExternalReachability_Prefix_OriginType implements the yang.GoEnum
// interface. This ensures that Ipv4ExternalReachability_Prefix_OriginType can be identified as a
// mapped type for a YANG enumeration.
func (E_Ipv4ExternalReachability_Prefix_OriginType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ipv4ExternalReachability_Prefix_OriginType.
func (E_Ipv4ExternalReachability_Prefix_OriginType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Ipv4ExternalReachability_Prefix_OriginType.
func (e E_Ipv4ExternalReachability_Prefix_OriginType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ipv4ExternalReachability_Prefix_OriginType")
}

const (
	// Ipv4ExternalReachability_Prefix_OriginType_UNSET corresponds to the value UNSET of Ipv4ExternalReachability_Prefix_OriginType
	Ipv4ExternalReachability_Prefix_OriginType_UNSET E_Ipv4ExternalReachability_Prefix_OriginType = 0
	// Ipv4ExternalReachability_Prefix_OriginType_INTERNAL corresponds to the value INTERNAL of Ipv4ExternalReachability_Prefix_OriginType
	Ipv4ExternalReachability_Prefix_OriginType_INTERNAL E_Ipv4ExternalReachability_Prefix_OriginType = 1
	// Ipv4ExternalReachability_Prefix_OriginType_EXTERNAL corresponds to the value EXTERNAL of Ipv4ExternalReachability_Prefix_OriginType
	Ipv4ExternalReachability_Prefix_OriginType_EXTERNAL E_Ipv4ExternalReachability_Prefix_OriginType = 2
)

// E_Ipv4ExternalReachability_Prefix_RedistributionType is a derived int64 type which is used to represent
// the enumerated node Ipv4ExternalReachability_Prefix_RedistributionType. An additional value named
// Ipv4ExternalReachability_Prefix_RedistributionType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ipv4ExternalReachability_Prefix_RedistributionType int64

// IsYANGGoEnum ensures that Ipv4ExternalReachability_Prefix_RedistributionType implements the yang.GoEnum
// interface. This ensures that Ipv4ExternalReachability_Prefix_RedistributionType can be identified as a
// mapped type for a YANG enumeration.
func (E_Ipv4ExternalReachability_Prefix_RedistributionType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ipv4ExternalReachability_Prefix_RedistributionType.
func (E_Ipv4ExternalReachability_Prefix_RedistributionType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Ipv4ExternalReachability_Prefix_RedistributionType.
func (e E_Ipv4ExternalReachability_Prefix_RedistributionType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ipv4ExternalReachability_Prefix_RedistributionType")
}

const (
	// Ipv4ExternalReachability_Prefix_RedistributionType_UNSET corresponds to the value UNSET of Ipv4ExternalReachability_Prefix_RedistributionType
	Ipv4ExternalReachability_Prefix_RedistributionType_UNSET E_Ipv4ExternalReachability_Prefix_RedistributionType = 0
	// Ipv4ExternalReachability_Prefix_RedistributionType_UP corresponds to the value UP of Ipv4ExternalReachability_Prefix_RedistributionType
	Ipv4ExternalReachability_Prefix_RedistributionType_UP E_Ipv4ExternalReachability_Prefix_RedistributionType = 1
	// Ipv4ExternalReachability_Prefix_RedistributionType_DOWN corresponds to the value DOWN of Ipv4ExternalReachability_Prefix_RedistributionType
	Ipv4ExternalReachability_Prefix_RedistributionType_DOWN E_Ipv4ExternalReachability_Prefix_RedistributionType = 2
)

// E_Ipv4Lsp_LastFlapReason is a derived int64 type which is used to represent
// the enumerated node Ipv4Lsp_LastFlapReason. An additional value named
// Ipv4Lsp_LastFlapReason_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ipv4Lsp_LastFlapReason int64

// IsYANGGoEnum ensures that Ipv4Lsp_LastFlapReason implements the yang.GoEnum
// interface. This ensures that Ipv4Lsp_LastFlapReason can be identified as a
// mapped type for a YANG enumeration.
func (E_Ipv4Lsp_LastFlapReason) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ipv4Lsp_LastFlapReason.
func (E_Ipv4Lsp_LastFlapReason) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Ipv4Lsp_LastFlapReason.
func (e E_Ipv4Lsp_LastFlapReason) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ipv4Lsp_LastFlapReason")
}

const (
	// Ipv4Lsp_LastFlapReason_UNSET corresponds to the value UNSET of Ipv4Lsp_LastFlapReason
	Ipv4Lsp_LastFlapReason_UNSET E_Ipv4Lsp_LastFlapReason = 0
	// Ipv4Lsp_LastFlapReason_RESVTEAR corresponds to the value RESVTEAR of Ipv4Lsp_LastFlapReason
	Ipv4Lsp_LastFlapReason_RESVTEAR E_Ipv4Lsp_LastFlapReason = 1
	// Ipv4Lsp_LastFlapReason_PATHTEAR corresponds to the value PATHTEAR of Ipv4Lsp_LastFlapReason
	Ipv4Lsp_LastFlapReason_PATHTEAR E_Ipv4Lsp_LastFlapReason = 2
	// Ipv4Lsp_LastFlapReason_PATHTIMEOUT corresponds to the value PATHTIMEOUT of Ipv4Lsp_LastFlapReason
	Ipv4Lsp_LastFlapReason_PATHTIMEOUT E_Ipv4Lsp_LastFlapReason = 3
)

// E_Ipv4Lsp_SessionStatus is a derived int64 type which is used to represent
// the enumerated node Ipv4Lsp_SessionStatus. An additional value named
// Ipv4Lsp_SessionStatus_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ipv4Lsp_SessionStatus int64

// IsYANGGoEnum ensures that Ipv4Lsp_SessionStatus implements the yang.GoEnum
// interface. This ensures that Ipv4Lsp_SessionStatus can be identified as a
// mapped type for a YANG enumeration.
func (E_Ipv4Lsp_SessionStatus) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ipv4Lsp_SessionStatus.
func (E_Ipv4Lsp_SessionStatus) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Ipv4Lsp_SessionStatus.
func (e E_Ipv4Lsp_SessionStatus) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ipv4Lsp_SessionStatus")
}

const (
	// Ipv4Lsp_SessionStatus_UNSET corresponds to the value UNSET of Ipv4Lsp_SessionStatus
	Ipv4Lsp_SessionStatus_UNSET E_Ipv4Lsp_SessionStatus = 0
	// Ipv4Lsp_SessionStatus_UP corresponds to the value UP of Ipv4Lsp_SessionStatus
	Ipv4Lsp_SessionStatus_UP E_Ipv4Lsp_SessionStatus = 1
	// Ipv4Lsp_SessionStatus_DOWN corresponds to the value DOWN of Ipv4Lsp_SessionStatus
	Ipv4Lsp_SessionStatus_DOWN E_Ipv4Lsp_SessionStatus = 2
)

// E_Ipv6Reachability_Prefix_OriginType is a derived int64 type which is used to represent
// the enumerated node Ipv6Reachability_Prefix_OriginType. An additional value named
// Ipv6Reachability_Prefix_OriginType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ipv6Reachability_Prefix_OriginType int64

// IsYANGGoEnum ensures that Ipv6Reachability_Prefix_OriginType implements the yang.GoEnum
// interface. This ensures that Ipv6Reachability_Prefix_OriginType can be identified as a
// mapped type for a YANG enumeration.
func (E_Ipv6Reachability_Prefix_OriginType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ipv6Reachability_Prefix_OriginType.
func (E_Ipv6Reachability_Prefix_OriginType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Ipv6Reachability_Prefix_OriginType.
func (e E_Ipv6Reachability_Prefix_OriginType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ipv6Reachability_Prefix_OriginType")
}

const (
	// Ipv6Reachability_Prefix_OriginType_UNSET corresponds to the value UNSET of Ipv6Reachability_Prefix_OriginType
	Ipv6Reachability_Prefix_OriginType_UNSET E_Ipv6Reachability_Prefix_OriginType = 0
	// Ipv6Reachability_Prefix_OriginType_INTERNAL corresponds to the value INTERNAL of Ipv6Reachability_Prefix_OriginType
	Ipv6Reachability_Prefix_OriginType_INTERNAL E_Ipv6Reachability_Prefix_OriginType = 1
	// Ipv6Reachability_Prefix_OriginType_EXTERNAL corresponds to the value EXTERNAL of Ipv6Reachability_Prefix_OriginType
	Ipv6Reachability_Prefix_OriginType_EXTERNAL E_Ipv6Reachability_Prefix_OriginType = 2
)

// E_Ipv6Reachability_Prefix_RedistributionType is a derived int64 type which is used to represent
// the enumerated node Ipv6Reachability_Prefix_RedistributionType. An additional value named
// Ipv6Reachability_Prefix_RedistributionType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ipv6Reachability_Prefix_RedistributionType int64

// IsYANGGoEnum ensures that Ipv6Reachability_Prefix_RedistributionType implements the yang.GoEnum
// interface. This ensures that Ipv6Reachability_Prefix_RedistributionType can be identified as a
// mapped type for a YANG enumeration.
func (E_Ipv6Reachability_Prefix_RedistributionType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ipv6Reachability_Prefix_RedistributionType.
func (E_Ipv6Reachability_Prefix_RedistributionType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Ipv6Reachability_Prefix_RedistributionType.
func (e E_Ipv6Reachability_Prefix_RedistributionType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ipv6Reachability_Prefix_RedistributionType")
}

const (
	// Ipv6Reachability_Prefix_RedistributionType_UNSET corresponds to the value UNSET of Ipv6Reachability_Prefix_RedistributionType
	Ipv6Reachability_Prefix_RedistributionType_UNSET E_Ipv6Reachability_Prefix_RedistributionType = 0
	// Ipv6Reachability_Prefix_RedistributionType_UP corresponds to the value UP of Ipv6Reachability_Prefix_RedistributionType
	Ipv6Reachability_Prefix_RedistributionType_UP E_Ipv6Reachability_Prefix_RedistributionType = 1
	// Ipv6Reachability_Prefix_RedistributionType_DOWN corresponds to the value DOWN of Ipv6Reachability_Prefix_RedistributionType
	Ipv6Reachability_Prefix_RedistributionType_DOWN E_Ipv6Reachability_Prefix_RedistributionType = 2
)

// E_Lacp_LacpActivityType is a derived int64 type which is used to represent
// the enumerated node Lacp_LacpActivityType. An additional value named
// Lacp_LacpActivityType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lacp_LacpActivityType int64

// IsYANGGoEnum ensures that Lacp_LacpActivityType implements the yang.GoEnum
// interface. This ensures that Lacp_LacpActivityType can be identified as a
// mapped type for a YANG enumeration.
func (E_Lacp_LacpActivityType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lacp_LacpActivityType.
func (E_Lacp_LacpActivityType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lacp_LacpActivityType.
func (e E_Lacp_LacpActivityType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lacp_LacpActivityType")
}

const (
	// Lacp_LacpActivityType_UNSET corresponds to the value UNSET of Lacp_LacpActivityType
	Lacp_LacpActivityType_UNSET E_Lacp_LacpActivityType = 0
	// Lacp_LacpActivityType_ACTIVE corresponds to the value ACTIVE of Lacp_LacpActivityType
	Lacp_LacpActivityType_ACTIVE E_Lacp_LacpActivityType = 1
	// Lacp_LacpActivityType_PASSIVE corresponds to the value PASSIVE of Lacp_LacpActivityType
	Lacp_LacpActivityType_PASSIVE E_Lacp_LacpActivityType = 2
)

// E_Lacp_LacpSynchronizationType is a derived int64 type which is used to represent
// the enumerated node Lacp_LacpSynchronizationType. An additional value named
// Lacp_LacpSynchronizationType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lacp_LacpSynchronizationType int64

// IsYANGGoEnum ensures that Lacp_LacpSynchronizationType implements the yang.GoEnum
// interface. This ensures that Lacp_LacpSynchronizationType can be identified as a
// mapped type for a YANG enumeration.
func (E_Lacp_LacpSynchronizationType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lacp_LacpSynchronizationType.
func (E_Lacp_LacpSynchronizationType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lacp_LacpSynchronizationType.
func (e E_Lacp_LacpSynchronizationType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lacp_LacpSynchronizationType")
}

const (
	// Lacp_LacpSynchronizationType_UNSET corresponds to the value UNSET of Lacp_LacpSynchronizationType
	Lacp_LacpSynchronizationType_UNSET E_Lacp_LacpSynchronizationType = 0
	// Lacp_LacpSynchronizationType_IN_SYNC corresponds to the value IN_SYNC of Lacp_LacpSynchronizationType
	Lacp_LacpSynchronizationType_IN_SYNC E_Lacp_LacpSynchronizationType = 1
	// Lacp_LacpSynchronizationType_OUT_SYNC corresponds to the value OUT_SYNC of Lacp_LacpSynchronizationType
	Lacp_LacpSynchronizationType_OUT_SYNC E_Lacp_LacpSynchronizationType = 2
)

// E_Lacp_LacpTimeoutType is a derived int64 type which is used to represent
// the enumerated node Lacp_LacpTimeoutType. An additional value named
// Lacp_LacpTimeoutType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lacp_LacpTimeoutType int64

// IsYANGGoEnum ensures that Lacp_LacpTimeoutType implements the yang.GoEnum
// interface. This ensures that Lacp_LacpTimeoutType can be identified as a
// mapped type for a YANG enumeration.
func (E_Lacp_LacpTimeoutType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lacp_LacpTimeoutType.
func (E_Lacp_LacpTimeoutType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lacp_LacpTimeoutType.
func (e E_Lacp_LacpTimeoutType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lacp_LacpTimeoutType")
}

const (
	// Lacp_LacpTimeoutType_UNSET corresponds to the value UNSET of Lacp_LacpTimeoutType
	Lacp_LacpTimeoutType_UNSET E_Lacp_LacpTimeoutType = 0
	// Lacp_LacpTimeoutType_LONG corresponds to the value LONG of Lacp_LacpTimeoutType
	Lacp_LacpTimeoutType_LONG E_Lacp_LacpTimeoutType = 1
	// Lacp_LacpTimeoutType_SHORT corresponds to the value SHORT of Lacp_LacpTimeoutType
	Lacp_LacpTimeoutType_SHORT E_Lacp_LacpTimeoutType = 2
)

// E_Lag_OperStatus is a derived int64 type which is used to represent
// the enumerated node Lag_OperStatus. An additional value named
// Lag_OperStatus_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lag_OperStatus int64

// IsYANGGoEnum ensures that Lag_OperStatus implements the yang.GoEnum
// interface. This ensures that Lag_OperStatus can be identified as a
// mapped type for a YANG enumeration.
func (E_Lag_OperStatus) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lag_OperStatus.
func (E_Lag_OperStatus) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lag_OperStatus.
func (e E_Lag_OperStatus) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lag_OperStatus")
}

const (
	// Lag_OperStatus_UNSET corresponds to the value UNSET of Lag_OperStatus
	Lag_OperStatus_UNSET E_Lag_OperStatus = 0
	// Lag_OperStatus_UP corresponds to the value UP of Lag_OperStatus
	Lag_OperStatus_UP E_Lag_OperStatus = 1
	// Lag_OperStatus_DOWN corresponds to the value DOWN of Lag_OperStatus
	Lag_OperStatus_DOWN E_Lag_OperStatus = 2
)

// E_Link_Type is a derived int64 type which is used to represent
// the enumerated node Link_Type. An additional value named
// Link_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Link_Type int64

// IsYANGGoEnum ensures that Link_Type implements the yang.GoEnum
// interface. This ensures that Link_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_Link_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Link_Type.
func (E_Link_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Link_Type.
func (e E_Link_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Link_Type")
}

const (
	// Link_Type_UNSET corresponds to the value UNSET of Link_Type
	Link_Type_UNSET E_Link_Type = 0
	// Link_Type_POINT_TO_POINT corresponds to the value POINT_TO_POINT of Link_Type
	Link_Type_POINT_TO_POINT E_Link_Type = 1
	// Link_Type_TRANSIT corresponds to the value TRANSIT of Link_Type
	Link_Type_TRANSIT E_Link_Type = 2
	// Link_Type_STUB corresponds to the value STUB of Link_Type
	Link_Type_STUB E_Link_Type = 3
	// Link_Type_VIRTUAL corresponds to the value VIRTUAL of Link_Type
	Link_Type_VIRTUAL E_Link_Type = 4
)

// E_LldpNeighbor_ChassisIdType is a derived int64 type which is used to represent
// the enumerated node LldpNeighbor_ChassisIdType. An additional value named
// LldpNeighbor_ChassisIdType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LldpNeighbor_ChassisIdType int64

// IsYANGGoEnum ensures that LldpNeighbor_ChassisIdType implements the yang.GoEnum
// interface. This ensures that LldpNeighbor_ChassisIdType can be identified as a
// mapped type for a YANG enumeration.
func (E_LldpNeighbor_ChassisIdType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LldpNeighbor_ChassisIdType.
func (E_LldpNeighbor_ChassisIdType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_LldpNeighbor_ChassisIdType.
func (e E_LldpNeighbor_ChassisIdType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LldpNeighbor_ChassisIdType")
}

const (
	// LldpNeighbor_ChassisIdType_UNSET corresponds to the value UNSET of LldpNeighbor_ChassisIdType
	LldpNeighbor_ChassisIdType_UNSET E_LldpNeighbor_ChassisIdType = 0
	// LldpNeighbor_ChassisIdType_PORT_COMPONENT corresponds to the value PORT_COMPONENT of LldpNeighbor_ChassisIdType
	LldpNeighbor_ChassisIdType_PORT_COMPONENT E_LldpNeighbor_ChassisIdType = 1
	// LldpNeighbor_ChassisIdType_NETWORK_ADDRESS corresponds to the value NETWORK_ADDRESS of LldpNeighbor_ChassisIdType
	LldpNeighbor_ChassisIdType_NETWORK_ADDRESS E_LldpNeighbor_ChassisIdType = 2
	// LldpNeighbor_ChassisIdType_CHASSIS_COMPONENT corresponds to the value CHASSIS_COMPONENT of LldpNeighbor_ChassisIdType
	LldpNeighbor_ChassisIdType_CHASSIS_COMPONENT E_LldpNeighbor_ChassisIdType = 3
	// LldpNeighbor_ChassisIdType_MAC_ADDRESS corresponds to the value MAC_ADDRESS of LldpNeighbor_ChassisIdType
	LldpNeighbor_ChassisIdType_MAC_ADDRESS E_LldpNeighbor_ChassisIdType = 4
	// LldpNeighbor_ChassisIdType_INTERFACE_NAME corresponds to the value INTERFACE_NAME of LldpNeighbor_ChassisIdType
	LldpNeighbor_ChassisIdType_INTERFACE_NAME E_LldpNeighbor_ChassisIdType = 5
	// LldpNeighbor_ChassisIdType_LOCAL corresponds to the value LOCAL of LldpNeighbor_ChassisIdType
	LldpNeighbor_ChassisIdType_LOCAL E_LldpNeighbor_ChassisIdType = 6
	// LldpNeighbor_ChassisIdType_INTERFACE_ALIAS corresponds to the value INTERFACE_ALIAS of LldpNeighbor_ChassisIdType
	LldpNeighbor_ChassisIdType_INTERFACE_ALIAS E_LldpNeighbor_ChassisIdType = 7
)

// E_LldpNeighbor_PortIdType is a derived int64 type which is used to represent
// the enumerated node LldpNeighbor_PortIdType. An additional value named
// LldpNeighbor_PortIdType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LldpNeighbor_PortIdType int64

// IsYANGGoEnum ensures that LldpNeighbor_PortIdType implements the yang.GoEnum
// interface. This ensures that LldpNeighbor_PortIdType can be identified as a
// mapped type for a YANG enumeration.
func (E_LldpNeighbor_PortIdType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LldpNeighbor_PortIdType.
func (E_LldpNeighbor_PortIdType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_LldpNeighbor_PortIdType.
func (e E_LldpNeighbor_PortIdType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LldpNeighbor_PortIdType")
}

const (
	// LldpNeighbor_PortIdType_UNSET corresponds to the value UNSET of LldpNeighbor_PortIdType
	LldpNeighbor_PortIdType_UNSET E_LldpNeighbor_PortIdType = 0
	// LldpNeighbor_PortIdType_PORT_COMPONENT corresponds to the value PORT_COMPONENT of LldpNeighbor_PortIdType
	LldpNeighbor_PortIdType_PORT_COMPONENT E_LldpNeighbor_PortIdType = 1
	// LldpNeighbor_PortIdType_NETWORK_ADDRESS corresponds to the value NETWORK_ADDRESS of LldpNeighbor_PortIdType
	LldpNeighbor_PortIdType_NETWORK_ADDRESS E_LldpNeighbor_PortIdType = 2
	// LldpNeighbor_PortIdType_AGENT_CIRCUIT_ID corresponds to the value AGENT_CIRCUIT_ID of LldpNeighbor_PortIdType
	LldpNeighbor_PortIdType_AGENT_CIRCUIT_ID E_LldpNeighbor_PortIdType = 3
	// LldpNeighbor_PortIdType_MAC_ADDRESS corresponds to the value MAC_ADDRESS of LldpNeighbor_PortIdType
	LldpNeighbor_PortIdType_MAC_ADDRESS E_LldpNeighbor_PortIdType = 4
	// LldpNeighbor_PortIdType_INTERFACE_NAME corresponds to the value INTERFACE_NAME of LldpNeighbor_PortIdType
	LldpNeighbor_PortIdType_INTERFACE_NAME E_LldpNeighbor_PortIdType = 5
	// LldpNeighbor_PortIdType_LOCAL corresponds to the value LOCAL of LldpNeighbor_PortIdType
	LldpNeighbor_PortIdType_LOCAL E_LldpNeighbor_PortIdType = 6
	// LldpNeighbor_PortIdType_INTERFACE_ALIAS corresponds to the value INTERFACE_ALIAS of LldpNeighbor_PortIdType
	LldpNeighbor_PortIdType_INTERFACE_ALIAS E_LldpNeighbor_PortIdType = 7
)

// E_Lsps_Flags is a derived int64 type which is used to represent
// the enumerated node Lsps_Flags. An additional value named
// Lsps_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lsps_Flags int64

// IsYANGGoEnum ensures that Lsps_Flags implements the yang.GoEnum
// interface. This ensures that Lsps_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_Lsps_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lsps_Flags.
func (E_Lsps_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lsps_Flags.
func (e E_Lsps_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lsps_Flags")
}

const (
	// Lsps_Flags_UNSET corresponds to the value UNSET of Lsps_Flags
	Lsps_Flags_UNSET E_Lsps_Flags = 0
	// Lsps_Flags_PARTITION_REPAIR corresponds to the value PARTITION_REPAIR of Lsps_Flags
	Lsps_Flags_PARTITION_REPAIR E_Lsps_Flags = 1
	// Lsps_Flags_ATTACHED_ERROR corresponds to the value ATTACHED_ERROR of Lsps_Flags
	Lsps_Flags_ATTACHED_ERROR E_Lsps_Flags = 2
	// Lsps_Flags_ATTACHED_EXPENSE corresponds to the value ATTACHED_EXPENSE of Lsps_Flags
	Lsps_Flags_ATTACHED_EXPENSE E_Lsps_Flags = 3
	// Lsps_Flags_ATTACHED_DELAY corresponds to the value ATTACHED_DELAY of Lsps_Flags
	Lsps_Flags_ATTACHED_DELAY E_Lsps_Flags = 4
	// Lsps_Flags_ATTACHED_DEFAULT corresponds to the value ATTACHED_DEFAULT of Lsps_Flags
	Lsps_Flags_ATTACHED_DEFAULT E_Lsps_Flags = 5
	// Lsps_Flags_OVERLOAD corresponds to the value OVERLOAD of Lsps_Flags
	Lsps_Flags_OVERLOAD E_Lsps_Flags = 6
)

// E_Lsps_PduType is a derived int64 type which is used to represent
// the enumerated node Lsps_PduType. An additional value named
// Lsps_PduType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lsps_PduType int64

// IsYANGGoEnum ensures that Lsps_PduType implements the yang.GoEnum
// interface. This ensures that Lsps_PduType can be identified as a
// mapped type for a YANG enumeration.
func (E_Lsps_PduType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lsps_PduType.
func (E_Lsps_PduType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lsps_PduType.
func (e E_Lsps_PduType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lsps_PduType")
}

const (
	// Lsps_PduType_UNSET corresponds to the value UNSET of Lsps_PduType
	Lsps_PduType_UNSET E_Lsps_PduType = 0
	// Lsps_PduType_LEVEL_1 corresponds to the value LEVEL_1 of Lsps_PduType
	Lsps_PduType_LEVEL_1 E_Lsps_PduType = 1
	// Lsps_PduType_LEVEL_2 corresponds to the value LEVEL_2 of Lsps_PduType
	Lsps_PduType_LEVEL_2 E_Lsps_PduType = 2
)

// E_OpaqueLsa_Type is a derived int64 type which is used to represent
// the enumerated node OpaqueLsa_Type. An additional value named
// OpaqueLsa_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpaqueLsa_Type int64

// IsYANGGoEnum ensures that OpaqueLsa_Type implements the yang.GoEnum
// interface. This ensures that OpaqueLsa_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_OpaqueLsa_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpaqueLsa_Type.
func (E_OpaqueLsa_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OpaqueLsa_Type.
func (e E_OpaqueLsa_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OpaqueLsa_Type")
}

const (
	// OpaqueLsa_Type_UNSET corresponds to the value UNSET of OpaqueLsa_Type
	OpaqueLsa_Type_UNSET E_OpaqueLsa_Type = 0
	// OpaqueLsa_Type_LOCAL corresponds to the value LOCAL of OpaqueLsa_Type
	OpaqueLsa_Type_LOCAL E_OpaqueLsa_Type = 1
	// OpaqueLsa_Type_AREA corresponds to the value AREA of OpaqueLsa_Type
	OpaqueLsa_Type_AREA E_OpaqueLsa_Type = 2
	// OpaqueLsa_Type_DOMAIN corresponds to the value DOMAIN of OpaqueLsa_Type
	OpaqueLsa_Type_DOMAIN E_OpaqueLsa_Type = 3
)

// E_Port_Link is a derived int64 type which is used to represent
// the enumerated node Port_Link. An additional value named
// Port_Link_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Port_Link int64

// IsYANGGoEnum ensures that Port_Link implements the yang.GoEnum
// interface. This ensures that Port_Link can be identified as a
// mapped type for a YANG enumeration.
func (E_Port_Link) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Port_Link.
func (E_Port_Link) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Port_Link.
func (e E_Port_Link) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Port_Link")
}

const (
	// Port_Link_UNSET corresponds to the value UNSET of Port_Link
	Port_Link_UNSET E_Port_Link = 0
	// Port_Link_UP corresponds to the value UP of Port_Link
	Port_Link_UP E_Port_Link = 1
	// Port_Link_DOWN corresponds to the value DOWN of Port_Link
	Port_Link_DOWN E_Port_Link = 2
)

// E_PrefixSid_Flags is a derived int64 type which is used to represent
// the enumerated node PrefixSid_Flags. An additional value named
// PrefixSid_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PrefixSid_Flags int64

// IsYANGGoEnum ensures that PrefixSid_Flags implements the yang.GoEnum
// interface. This ensures that PrefixSid_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_PrefixSid_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PrefixSid_Flags.
func (E_PrefixSid_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PrefixSid_Flags.
func (e E_PrefixSid_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PrefixSid_Flags")
}

const (
	// PrefixSid_Flags_UNSET corresponds to the value UNSET of PrefixSid_Flags
	PrefixSid_Flags_UNSET E_PrefixSid_Flags = 0
	// PrefixSid_Flags_READVERTISEMENT corresponds to the value READVERTISEMENT of PrefixSid_Flags
	PrefixSid_Flags_READVERTISEMENT E_PrefixSid_Flags = 1
	// PrefixSid_Flags_NODE corresponds to the value NODE of PrefixSid_Flags
	PrefixSid_Flags_NODE E_PrefixSid_Flags = 2
	// PrefixSid_Flags_NO_PHP corresponds to the value NO_PHP of PrefixSid_Flags
	PrefixSid_Flags_NO_PHP E_PrefixSid_Flags = 3
	// PrefixSid_Flags_EXPLICIT_NULL corresponds to the value EXPLICIT_NULL of PrefixSid_Flags
	PrefixSid_Flags_EXPLICIT_NULL E_PrefixSid_Flags = 4
	// PrefixSid_Flags_VALUE corresponds to the value VALUE of PrefixSid_Flags
	PrefixSid_Flags_VALUE E_PrefixSid_Flags = 5
	// PrefixSid_Flags_LOCAL corresponds to the value LOCAL of PrefixSid_Flags
	PrefixSid_Flags_LOCAL E_PrefixSid_Flags = 6
)

// E_SegmentRoutingCapability_Flags is a derived int64 type which is used to represent
// the enumerated node SegmentRoutingCapability_Flags. An additional value named
// SegmentRoutingCapability_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SegmentRoutingCapability_Flags int64

// IsYANGGoEnum ensures that SegmentRoutingCapability_Flags implements the yang.GoEnum
// interface. This ensures that SegmentRoutingCapability_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_SegmentRoutingCapability_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SegmentRoutingCapability_Flags.
func (E_SegmentRoutingCapability_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_SegmentRoutingCapability_Flags.
func (e E_SegmentRoutingCapability_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SegmentRoutingCapability_Flags")
}

const (
	// SegmentRoutingCapability_Flags_UNSET corresponds to the value UNSET of SegmentRoutingCapability_Flags
	SegmentRoutingCapability_Flags_UNSET E_SegmentRoutingCapability_Flags = 0
	// SegmentRoutingCapability_Flags_IPV4_MPLS corresponds to the value IPV4_MPLS of SegmentRoutingCapability_Flags
	SegmentRoutingCapability_Flags_IPV4_MPLS E_SegmentRoutingCapability_Flags = 1
	// SegmentRoutingCapability_Flags_IPV6_MPLS corresponds to the value IPV6_MPLS of SegmentRoutingCapability_Flags
	SegmentRoutingCapability_Flags_IPV6_MPLS E_SegmentRoutingCapability_Flags = 2
)

// E_State_CommunityType is a derived int64 type which is used to represent
// the enumerated node State_CommunityType. An additional value named
// State_CommunityType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_State_CommunityType int64

// IsYANGGoEnum ensures that State_CommunityType implements the yang.GoEnum
// interface. This ensures that State_CommunityType can be identified as a
// mapped type for a YANG enumeration.
func (E_State_CommunityType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  State_CommunityType.
func (E_State_CommunityType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_State_CommunityType.
func (e E_State_CommunityType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_State_CommunityType")
}

const (
	// State_CommunityType_UNSET corresponds to the value UNSET of State_CommunityType
	State_CommunityType_UNSET E_State_CommunityType = 0
	// State_CommunityType_MANUAL_AS_NUMBER corresponds to the value MANUAL_AS_NUMBER of State_CommunityType
	State_CommunityType_MANUAL_AS_NUMBER E_State_CommunityType = 1
	// State_CommunityType_NO_EXPORT corresponds to the value NO_EXPORT of State_CommunityType
	State_CommunityType_NO_EXPORT E_State_CommunityType = 2
	// State_CommunityType_NO_ADVERTISE corresponds to the value NO_ADVERTISE of State_CommunityType
	State_CommunityType_NO_ADVERTISE E_State_CommunityType = 3
	// State_CommunityType_NO_EXPORT_SUBCONFED corresponds to the value NO_EXPORT_SUBCONFED of State_CommunityType
	State_CommunityType_NO_EXPORT_SUBCONFED E_State_CommunityType = 4
	// State_CommunityType_LLGR_STALE corresponds to the value LLGR_STALE of State_CommunityType
	State_CommunityType_LLGR_STALE E_State_CommunityType = 5
	// State_CommunityType_NO_LLGR corresponds to the value NO_LLGR of State_CommunityType
	State_CommunityType_NO_LLGR E_State_CommunityType = 6
)

// E_State_Flags is a derived int64 type which is used to represent
// the enumerated node State_Flags. An additional value named
// State_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_State_Flags int64

// IsYANGGoEnum ensures that State_Flags implements the yang.GoEnum
// interface. This ensures that State_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_State_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  State_Flags.
func (E_State_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_State_Flags.
func (e E_State_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_State_Flags")
}

const (
	// State_Flags_UNSET corresponds to the value UNSET of State_Flags
	State_Flags_UNSET E_State_Flags = 0
	// State_Flags_EXTERNAL_FLAG corresponds to the value EXTERNAL_FLAG of State_Flags
	State_Flags_EXTERNAL_FLAG E_State_Flags = 1
	// State_Flags_READVERTISEMENT_FLAG corresponds to the value READVERTISEMENT_FLAG of State_Flags
	State_Flags_READVERTISEMENT_FLAG E_State_Flags = 2
	// State_Flags_NODE_FLAG corresponds to the value NODE_FLAG of State_Flags
	State_Flags_NODE_FLAG E_State_Flags = 3
)

// E_State_SegmentType is a derived int64 type which is used to represent
// the enumerated node State_SegmentType. An additional value named
// State_SegmentType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_State_SegmentType int64

// IsYANGGoEnum ensures that State_SegmentType implements the yang.GoEnum
// interface. This ensures that State_SegmentType can be identified as a
// mapped type for a YANG enumeration.
func (E_State_SegmentType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  State_SegmentType.
func (E_State_SegmentType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_State_SegmentType.
func (e E_State_SegmentType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_State_SegmentType")
}

const (
	// State_SegmentType_UNSET corresponds to the value UNSET of State_SegmentType
	State_SegmentType_UNSET E_State_SegmentType = 0
	// State_SegmentType_AS_SEQUENCE corresponds to the value AS_SEQUENCE of State_SegmentType
	State_SegmentType_AS_SEQUENCE E_State_SegmentType = 1
	// State_SegmentType_AS_SET corresponds to the value AS_SET of State_SegmentType
	State_SegmentType_AS_SET E_State_SegmentType = 2
	// State_SegmentType_AS_CONFED_SEQUENCE corresponds to the value AS_CONFED_SEQUENCE of State_SegmentType
	State_SegmentType_AS_CONFED_SEQUENCE E_State_SegmentType = 3
	// State_SegmentType_AS_CONFED_SET corresponds to the value AS_CONFED_SET of State_SegmentType
	State_SegmentType_AS_CONFED_SET E_State_SegmentType = 4
)

// E_Structured_NonTransitive_2OctetAsType is a derived int64 type which is used to represent
// the enumerated node Structured_NonTransitive_2OctetAsType. An additional value named
// Structured_NonTransitive_2OctetAsType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Structured_NonTransitive_2OctetAsType int64

// IsYANGGoEnum ensures that Structured_NonTransitive_2OctetAsType implements the yang.GoEnum
// interface. This ensures that Structured_NonTransitive_2OctetAsType can be identified as a
// mapped type for a YANG enumeration.
func (E_Structured_NonTransitive_2OctetAsType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Structured_NonTransitive_2OctetAsType.
func (E_Structured_NonTransitive_2OctetAsType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Structured_NonTransitive_2OctetAsType.
func (e E_Structured_NonTransitive_2OctetAsType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Structured_NonTransitive_2OctetAsType")
}

const (
	// Structured_NonTransitive_2OctetAsType_UNSET corresponds to the value UNSET of Structured_NonTransitive_2OctetAsType
	Structured_NonTransitive_2OctetAsType_UNSET E_Structured_NonTransitive_2OctetAsType = 0
	// Structured_NonTransitive_2OctetAsType_LINK_BANDWIDTH_SUBTYPE corresponds to the value LINK_BANDWIDTH_SUBTYPE of Structured_NonTransitive_2OctetAsType
	Structured_NonTransitive_2OctetAsType_LINK_BANDWIDTH_SUBTYPE E_Structured_NonTransitive_2OctetAsType = 1
)

// E_Structured_TransitiveIpv4AddressType is a derived int64 type which is used to represent
// the enumerated node Structured_TransitiveIpv4AddressType. An additional value named
// Structured_TransitiveIpv4AddressType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Structured_TransitiveIpv4AddressType int64

// IsYANGGoEnum ensures that Structured_TransitiveIpv4AddressType implements the yang.GoEnum
// interface. This ensures that Structured_TransitiveIpv4AddressType can be identified as a
// mapped type for a YANG enumeration.
func (E_Structured_TransitiveIpv4AddressType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Structured_TransitiveIpv4AddressType.
func (E_Structured_TransitiveIpv4AddressType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Structured_TransitiveIpv4AddressType.
func (e E_Structured_TransitiveIpv4AddressType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Structured_TransitiveIpv4AddressType")
}

const (
	// Structured_TransitiveIpv4AddressType_UNSET corresponds to the value UNSET of Structured_TransitiveIpv4AddressType
	Structured_TransitiveIpv4AddressType_UNSET E_Structured_TransitiveIpv4AddressType = 0
	// Structured_TransitiveIpv4AddressType_ROUTE_TARGET_SUBTYPE corresponds to the value ROUTE_TARGET_SUBTYPE of Structured_TransitiveIpv4AddressType
	Structured_TransitiveIpv4AddressType_ROUTE_TARGET_SUBTYPE E_Structured_TransitiveIpv4AddressType = 1
	// Structured_TransitiveIpv4AddressType_ROUTE_ORIGIN_SUBTYPE corresponds to the value ROUTE_ORIGIN_SUBTYPE of Structured_TransitiveIpv4AddressType
	Structured_TransitiveIpv4AddressType_ROUTE_ORIGIN_SUBTYPE E_Structured_TransitiveIpv4AddressType = 2
)

// E_Structured_TransitiveOpaqueType is a derived int64 type which is used to represent
// the enumerated node Structured_TransitiveOpaqueType. An additional value named
// Structured_TransitiveOpaqueType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Structured_TransitiveOpaqueType int64

// IsYANGGoEnum ensures that Structured_TransitiveOpaqueType implements the yang.GoEnum
// interface. This ensures that Structured_TransitiveOpaqueType can be identified as a
// mapped type for a YANG enumeration.
func (E_Structured_TransitiveOpaqueType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Structured_TransitiveOpaqueType.
func (E_Structured_TransitiveOpaqueType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Structured_TransitiveOpaqueType.
func (e E_Structured_TransitiveOpaqueType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Structured_TransitiveOpaqueType")
}

const (
	// Structured_TransitiveOpaqueType_UNSET corresponds to the value UNSET of Structured_TransitiveOpaqueType
	Structured_TransitiveOpaqueType_UNSET E_Structured_TransitiveOpaqueType = 0
	// Structured_TransitiveOpaqueType_COLOR_SUBTYPE corresponds to the value COLOR_SUBTYPE of Structured_TransitiveOpaqueType
	Structured_TransitiveOpaqueType_COLOR_SUBTYPE E_Structured_TransitiveOpaqueType = 1
	// Structured_TransitiveOpaqueType_ENCAPSULATION_SUBTYPE corresponds to the value ENCAPSULATION_SUBTYPE of Structured_TransitiveOpaqueType
	Structured_TransitiveOpaqueType_ENCAPSULATION_SUBTYPE E_Structured_TransitiveOpaqueType = 2
)

// E_Structured_Transitive_2OctetAsType is a derived int64 type which is used to represent
// the enumerated node Structured_Transitive_2OctetAsType. An additional value named
// Structured_Transitive_2OctetAsType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Structured_Transitive_2OctetAsType int64

// IsYANGGoEnum ensures that Structured_Transitive_2OctetAsType implements the yang.GoEnum
// interface. This ensures that Structured_Transitive_2OctetAsType can be identified as a
// mapped type for a YANG enumeration.
func (E_Structured_Transitive_2OctetAsType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Structured_Transitive_2OctetAsType.
func (E_Structured_Transitive_2OctetAsType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Structured_Transitive_2OctetAsType.
func (e E_Structured_Transitive_2OctetAsType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Structured_Transitive_2OctetAsType")
}

const (
	// Structured_Transitive_2OctetAsType_UNSET corresponds to the value UNSET of Structured_Transitive_2OctetAsType
	Structured_Transitive_2OctetAsType_UNSET E_Structured_Transitive_2OctetAsType = 0
	// Structured_Transitive_2OctetAsType_ROUTE_TARGET_SUBTYPE corresponds to the value ROUTE_TARGET_SUBTYPE of Structured_Transitive_2OctetAsType
	Structured_Transitive_2OctetAsType_ROUTE_TARGET_SUBTYPE E_Structured_Transitive_2OctetAsType = 1
	// Structured_Transitive_2OctetAsType_ROUTE_ORIGIN_SUBTYPE corresponds to the value ROUTE_ORIGIN_SUBTYPE of Structured_Transitive_2OctetAsType
	Structured_Transitive_2OctetAsType_ROUTE_ORIGIN_SUBTYPE E_Structured_Transitive_2OctetAsType = 2
)

// E_Structured_Transitive_4OctetAsType is a derived int64 type which is used to represent
// the enumerated node Structured_Transitive_4OctetAsType. An additional value named
// Structured_Transitive_4OctetAsType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Structured_Transitive_4OctetAsType int64

// IsYANGGoEnum ensures that Structured_Transitive_4OctetAsType implements the yang.GoEnum
// interface. This ensures that Structured_Transitive_4OctetAsType can be identified as a
// mapped type for a YANG enumeration.
func (E_Structured_Transitive_4OctetAsType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Structured_Transitive_4OctetAsType.
func (E_Structured_Transitive_4OctetAsType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Structured_Transitive_4OctetAsType.
func (e E_Structured_Transitive_4OctetAsType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Structured_Transitive_4OctetAsType")
}

const (
	// Structured_Transitive_4OctetAsType_UNSET corresponds to the value UNSET of Structured_Transitive_4OctetAsType
	Structured_Transitive_4OctetAsType_UNSET E_Structured_Transitive_4OctetAsType = 0
	// Structured_Transitive_4OctetAsType_ROUTE_TARGET_SUBTYPE corresponds to the value ROUTE_TARGET_SUBTYPE of Structured_Transitive_4OctetAsType
	Structured_Transitive_4OctetAsType_ROUTE_TARGET_SUBTYPE E_Structured_Transitive_4OctetAsType = 1
	// Structured_Transitive_4OctetAsType_ROUTE_ORIGIN_SUBTYPE corresponds to the value ROUTE_ORIGIN_SUBTYPE of Structured_Transitive_4OctetAsType
	Structured_Transitive_4OctetAsType_ROUTE_ORIGIN_SUBTYPE E_Structured_Transitive_4OctetAsType = 2
)

// E_Tags_ValueType is a derived int64 type which is used to represent
// the enumerated node Tags_ValueType. An additional value named
// Tags_ValueType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Tags_ValueType int64

// IsYANGGoEnum ensures that Tags_ValueType implements the yang.GoEnum
// interface. This ensures that Tags_ValueType can be identified as a
// mapped type for a YANG enumeration.
func (E_Tags_ValueType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Tags_ValueType.
func (E_Tags_ValueType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Tags_ValueType.
func (e E_Tags_ValueType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Tags_ValueType")
}

const (
	// Tags_ValueType_UNSET corresponds to the value UNSET of Tags_ValueType
	Tags_ValueType_UNSET E_Tags_ValueType = 0
	// Tags_ValueType_STRING corresponds to the value STRING of Tags_ValueType
	Tags_ValueType_STRING E_Tags_ValueType = 1
	// Tags_ValueType_HEX corresponds to the value HEX of Tags_ValueType
	Tags_ValueType_HEX E_Tags_ValueType = 2
	// Tags_ValueType_BOOL corresponds to the value BOOL of Tags_ValueType
	Tags_ValueType_BOOL E_Tags_ValueType = 3
	// Tags_ValueType_COUNTER64 corresponds to the value COUNTER64 of Tags_ValueType
	Tags_ValueType_COUNTER64 E_Tags_ValueType = 4
	// Tags_ValueType_FLOAT32 corresponds to the value FLOAT32 of Tags_ValueType
	Tags_ValueType_FLOAT32 E_Tags_ValueType = 5
	// Tags_ValueType_IPV4 corresponds to the value IPV4 of Tags_ValueType
	Tags_ValueType_IPV4 E_Tags_ValueType = 6
	// Tags_ValueType_IPV6 corresponds to the value IPV6 of Tags_ValueType
	Tags_ValueType_IPV6 E_Tags_ValueType = 7
	// Tags_ValueType_MAC corresponds to the value MAC of Tags_ValueType
	Tags_ValueType_MAC E_Tags_ValueType = 8
)

// E_Types_MplsLabel_Enum is a derived int64 type which is used to represent
// the enumerated node Types_MplsLabel_Enum. An additional value named
// Types_MplsLabel_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Types_MplsLabel_Enum int64

// IsYANGGoEnum ensures that Types_MplsLabel_Enum implements the yang.GoEnum
// interface. This ensures that Types_MplsLabel_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_Types_MplsLabel_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Types_MplsLabel_Enum.
func (E_Types_MplsLabel_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Types_MplsLabel_Enum.
func (e E_Types_MplsLabel_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Types_MplsLabel_Enum")
}

const (
	// Types_MplsLabel_Enum_UNSET corresponds to the value UNSET of Types_MplsLabel_Enum
	Types_MplsLabel_Enum_UNSET E_Types_MplsLabel_Enum = 0
	// Types_MplsLabel_Enum_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of Types_MplsLabel_Enum
	Types_MplsLabel_Enum_IPV4_EXPLICIT_NULL E_Types_MplsLabel_Enum = 1
	// Types_MplsLabel_Enum_ROUTER_ALERT corresponds to the value ROUTER_ALERT of Types_MplsLabel_Enum
	Types_MplsLabel_Enum_ROUTER_ALERT E_Types_MplsLabel_Enum = 2
	// Types_MplsLabel_Enum_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of Types_MplsLabel_Enum
	Types_MplsLabel_Enum_IPV6_EXPLICIT_NULL E_Types_MplsLabel_Enum = 3
	// Types_MplsLabel_Enum_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of Types_MplsLabel_Enum
	Types_MplsLabel_Enum_IMPLICIT_NULL E_Types_MplsLabel_Enum = 4
	// Types_MplsLabel_Enum_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of Types_MplsLabel_Enum
	Types_MplsLabel_Enum_ENTROPY_LABEL_INDICATOR E_Types_MplsLabel_Enum = 8
	// Types_MplsLabel_Enum_NO_LABEL corresponds to the value NO_LABEL of Types_MplsLabel_Enum
	Types_MplsLabel_Enum_NO_LABEL E_Types_MplsLabel_Enum = 9
)

// E_UnicastIpv4Prefix_Origin is a derived int64 type which is used to represent
// the enumerated node UnicastIpv4Prefix_Origin. An additional value named
// UnicastIpv4Prefix_Origin_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_UnicastIpv4Prefix_Origin int64

// IsYANGGoEnum ensures that UnicastIpv4Prefix_Origin implements the yang.GoEnum
// interface. This ensures that UnicastIpv4Prefix_Origin can be identified as a
// mapped type for a YANG enumeration.
func (E_UnicastIpv4Prefix_Origin) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  UnicastIpv4Prefix_Origin.
func (E_UnicastIpv4Prefix_Origin) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_UnicastIpv4Prefix_Origin.
func (e E_UnicastIpv4Prefix_Origin) String() string {
	return ygot.EnumLogString(e, int64(e), "E_UnicastIpv4Prefix_Origin")
}

const (
	// UnicastIpv4Prefix_Origin_UNSET corresponds to the value UNSET of UnicastIpv4Prefix_Origin
	UnicastIpv4Prefix_Origin_UNSET E_UnicastIpv4Prefix_Origin = 0
	// UnicastIpv4Prefix_Origin_IGP corresponds to the value IGP of UnicastIpv4Prefix_Origin
	UnicastIpv4Prefix_Origin_IGP E_UnicastIpv4Prefix_Origin = 1
	// UnicastIpv4Prefix_Origin_EGP corresponds to the value EGP of UnicastIpv4Prefix_Origin
	UnicastIpv4Prefix_Origin_EGP E_UnicastIpv4Prefix_Origin = 2
	// UnicastIpv4Prefix_Origin_INCOMPLETE corresponds to the value INCOMPLETE of UnicastIpv4Prefix_Origin
	UnicastIpv4Prefix_Origin_INCOMPLETE E_UnicastIpv4Prefix_Origin = 3
)

// E_UnicastIpv6Prefix_Origin is a derived int64 type which is used to represent
// the enumerated node UnicastIpv6Prefix_Origin. An additional value named
// UnicastIpv6Prefix_Origin_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_UnicastIpv6Prefix_Origin int64

// IsYANGGoEnum ensures that UnicastIpv6Prefix_Origin implements the yang.GoEnum
// interface. This ensures that UnicastIpv6Prefix_Origin can be identified as a
// mapped type for a YANG enumeration.
func (E_UnicastIpv6Prefix_Origin) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  UnicastIpv6Prefix_Origin.
func (E_UnicastIpv6Prefix_Origin) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_UnicastIpv6Prefix_Origin.
func (e E_UnicastIpv6Prefix_Origin) String() string {
	return ygot.EnumLogString(e, int64(e), "E_UnicastIpv6Prefix_Origin")
}

const (
	// UnicastIpv6Prefix_Origin_UNSET corresponds to the value UNSET of UnicastIpv6Prefix_Origin
	UnicastIpv6Prefix_Origin_UNSET E_UnicastIpv6Prefix_Origin = 0
	// UnicastIpv6Prefix_Origin_IGP corresponds to the value IGP of UnicastIpv6Prefix_Origin
	UnicastIpv6Prefix_Origin_IGP E_UnicastIpv6Prefix_Origin = 1
	// UnicastIpv6Prefix_Origin_EGP corresponds to the value EGP of UnicastIpv6Prefix_Origin
	UnicastIpv6Prefix_Origin_EGP E_UnicastIpv6Prefix_Origin = 2
	// UnicastIpv6Prefix_Origin_INCOMPLETE corresponds to the value INCOMPLETE of UnicastIpv6Prefix_Origin
	UnicastIpv6Prefix_Origin_INCOMPLETE E_UnicastIpv6Prefix_Origin = 3
)
