/*
Package networkinstance is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /usr/local/google/home/alexmasi/go/pkg/mod/github.com/openconfig/ygot@v0.23.1/genutil/names.go
using the following YANG input files:
  - gnmi-collector-metadata.yang
  - public/release/models/acl/openconfig-acl.yang
  - public/release/models/acl/openconfig-packet-match.yang
  - public/release/models/aft/openconfig-aft.yang
  - public/release/models/aft/openconfig-aft-network-instance.yang
  - public/release/models/ate/openconfig-ate-flow.yang
  - public/release/models/ate/openconfig-ate-intf.yang
  - public/release/models/bfd/openconfig-bfd.yang
  - public/release/models/bgp/openconfig-bgp-policy.yang
  - public/release/models/bgp/openconfig-bgp-types.yang
  - public/release/models/interfaces/openconfig-if-aggregate.yang
  - public/release/models/interfaces/openconfig-if-ethernet.yang
  - public/release/models/interfaces/openconfig-if-ip-ext.yang
  - public/release/models/interfaces/openconfig-if-ip.yang
  - public/release/models/interfaces/openconfig-interfaces.yang
  - public/release/models/isis/openconfig-isis.yang
  - public/release/models/lacp/openconfig-lacp.yang
  - public/release/models/lldp/openconfig-lldp-types.yang
  - public/release/models/lldp/openconfig-lldp.yang
  - public/release/models/local-routing/openconfig-local-routing.yang
  - public/release/models/mpls/openconfig-mpls-types.yang
  - public/release/models/multicast/openconfig-pim.yang
  - public/release/models/network-instance/openconfig-network-instance.yang
  - public/release/models/openconfig-extensions.yang
  - public/release/models/optical-transport/openconfig-transport-types.yang
  - public/release/models/ospf/openconfig-ospfv2.yang
  - public/release/models/p4rt/openconfig-p4rt.yang
  - public/release/models/platform/openconfig-platform-cpu.yang
  - public/release/models/platform/openconfig-platform-fan.yang
  - public/release/models/platform/openconfig-platform-integrated-circuit.yang
  - public/release/models/platform/openconfig-platform-software.yang
  - public/release/models/platform/openconfig-platform-transceiver.yang
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
  - public/release/models/policy/openconfig-policy-types.yang
  - public/release/models/qos/openconfig-qos-elements.yang
  - public/release/models/qos/openconfig-qos-interfaces.yang
  - public/release/models/qos/openconfig-qos-types.yang
  - public/release/models/qos/openconfig-qos.yang
  - public/release/models/rib/openconfig-rib-bgp.yang
  - public/release/models/segment-routing/openconfig-segment-routing-types.yang
  - public/release/models/system/openconfig-system.yang
  - public/release/models/types/openconfig-inet-types.yang
  - public/release/models/types/openconfig-types.yang
  - public/release/models/types/openconfig-yang-types.yang
  - public/release/models/vlan/openconfig-vlan.yang
  - public/third_party/ietf/iana-if-type.yang
  - public/third_party/ietf/ietf-inet-types.yang
  - public/third_party/ietf/ietf-interfaces.yang
  - public/third_party/ietf/ietf-yang-types.yang

Imported modules were sourced from:
  - public/release/models/...
  - public/third_party/ietf/...
*/
package networkinstance

import (
	oc "github.com/openconfig/ondatra/telemetry"
	"github.com/openconfig/ygot/ygot"
)

// NetworkInstancePath represents the /openconfig-network-instance/network-instances/network-instance YANG schema element.
type NetworkInstancePath struct {
	*ygot.NodePath
}

// NetworkInstancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance YANG schema element.
type NetworkInstancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_DescriptionPath represents the /openconfig-network-instance/network-instances/network-instance/config/description YANG schema element.
type NetworkInstance_DescriptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_DescriptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/config/description YANG schema element.
type NetworkInstance_DescriptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/config/enabled YANG schema element.
type NetworkInstance_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/config/enabled YANG schema element.
type NetworkInstance_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_EnabledAddressFamiliesPath represents the /openconfig-network-instance/network-instances/network-instance/config/enabled-address-families YANG schema element.
type NetworkInstance_EnabledAddressFamiliesPath struct {
	*ygot.NodePath
}

// NetworkInstance_EnabledAddressFamiliesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/config/enabled-address-families YANG schema element.
type NetworkInstance_EnabledAddressFamiliesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_MtuPath represents the /openconfig-network-instance/network-instances/network-instance/config/mtu YANG schema element.
type NetworkInstance_MtuPath struct {
	*ygot.NodePath
}

// NetworkInstance_MtuPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/config/mtu YANG schema element.
type NetworkInstance_MtuPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_NamePath represents the /openconfig-network-instance/network-instances/network-instance/config/name YANG schema element.
type NetworkInstance_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/config/name YANG schema element.
type NetworkInstance_NamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteDistinguisherPath represents the /openconfig-network-instance/network-instances/network-instance/config/route-distinguisher YANG schema element.
type NetworkInstance_RouteDistinguisherPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteDistinguisherPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/config/route-distinguisher YANG schema element.
type NetworkInstance_RouteDistinguisherPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/config/router-id YANG schema element.
type NetworkInstance_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/config/router-id YANG schema element.
type NetworkInstance_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TypePath represents the /openconfig-network-instance/network-instances/network-instance/config/type YANG schema element.
type NetworkInstance_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/config/type YANG schema element.
type NetworkInstance_TypePathAny struct {
	*ygot.NodePath
}

// ConnectionPointAny (list): A connection point within a Layer 2 network instance.
// Each connection-point consists of a set of interfaces
// only one of which is active at any one time. Other than
// the specification of whether an interface is local
// (i.e., exists within this network-instance), or remote,
// all configuration and state parameters are common
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "connection-points/connection-point"
// Path from root: "/network-instances/network-instance/connection-points/connection-point"
// ConnectionPointId (wildcarded): string
func (n *NetworkInstancePath) ConnectionPointAny() *NetworkInstance_ConnectionPointPathAny {
	return &NetworkInstance_ConnectionPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"connection-points", "connection-point"},
			map[string]interface{}{"connection-point-id": "*"},
			n,
		),
	}
}

// ConnectionPointAny (list): A connection point within a Layer 2 network instance.
// Each connection-point consists of a set of interfaces
// only one of which is active at any one time. Other than
// the specification of whether an interface is local
// (i.e., exists within this network-instance), or remote,
// all configuration and state parameters are common
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "connection-points/connection-point"
// Path from root: "/network-instances/network-instance/connection-points/connection-point"
// ConnectionPointId (wildcarded): string
func (n *NetworkInstancePathAny) ConnectionPointAny() *NetworkInstance_ConnectionPointPathAny {
	return &NetworkInstance_ConnectionPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"connection-points", "connection-point"},
			map[string]interface{}{"connection-point-id": "*"},
			n,
		),
	}
}

// ConnectionPoint (list): A connection point within a Layer 2 network instance.
// Each connection-point consists of a set of interfaces
// only one of which is active at any one time. Other than
// the specification of whether an interface is local
// (i.e., exists within this network-instance), or remote,
// all configuration and state parameters are common
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "connection-points/connection-point"
// Path from root: "/network-instances/network-instance/connection-points/connection-point"
// ConnectionPointId: string
func (n *NetworkInstancePath) ConnectionPoint(ConnectionPointId string) *NetworkInstance_ConnectionPointPath {
	return &NetworkInstance_ConnectionPointPath{
		NodePath: ygot.NewNodePath(
			[]string{"connection-points", "connection-point"},
			map[string]interface{}{"connection-point-id": ConnectionPointId},
			n,
		),
	}
}

// ConnectionPoint (list): A connection point within a Layer 2 network instance.
// Each connection-point consists of a set of interfaces
// only one of which is active at any one time. Other than
// the specification of whether an interface is local
// (i.e., exists within this network-instance), or remote,
// all configuration and state parameters are common
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "connection-points/connection-point"
// Path from root: "/network-instances/network-instance/connection-points/connection-point"
// ConnectionPointId: string
func (n *NetworkInstancePathAny) ConnectionPoint(ConnectionPointId string) *NetworkInstance_ConnectionPointPathAny {
	return &NetworkInstance_ConnectionPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"connection-points", "connection-point"},
			map[string]interface{}{"connection-point-id": ConnectionPointId},
			n,
		),
	}
}

// Description (leaf): A free-form string to be used by the network operator to
// describe the function of this network instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/config/description"
func (n *NetworkInstancePath) Description() *NetworkInstance_DescriptionPath {
	return &NetworkInstance_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): A free-form string to be used by the network operator to
// describe the function of this network instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/config/description"
func (n *NetworkInstancePathAny) Description() *NetworkInstance_DescriptionPathAny {
	return &NetworkInstance_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the network instance should be configured to be
// active on the network element
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/config/enabled"
func (n *NetworkInstancePath) Enabled() *NetworkInstance_EnabledPath {
	return &NetworkInstance_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the network instance should be configured to be
// active on the network element
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/config/enabled"
func (n *NetworkInstancePathAny) Enabled() *NetworkInstance_EnabledPathAny {
	return &NetworkInstance_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnabledAddressFamilies (leaf-list): The address families that are to be enabled for this
// network instance.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled-address-families"
// Path from root: "/network-instances/network-instance/config/enabled-address-families"
func (n *NetworkInstancePath) EnabledAddressFamilies() *NetworkInstance_EnabledAddressFamiliesPath {
	return &NetworkInstance_EnabledAddressFamiliesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled-address-families"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnabledAddressFamilies (leaf-list): The address families that are to be enabled for this
// network instance.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled-address-families"
// Path from root: "/network-instances/network-instance/config/enabled-address-families"
func (n *NetworkInstancePathAny) EnabledAddressFamilies() *NetworkInstance_EnabledAddressFamiliesPathAny {
	return &NetworkInstance_EnabledAddressFamiliesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled-address-families"},
			map[string]interface{}{},
			n,
		),
	}
}

// Encapsulation (container): Configuration parameters relating to the encapsulation
// used for the network instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "encapsulation"
// Path from root: "/network-instances/network-instance/encapsulation"
func (n *NetworkInstancePath) Encapsulation() *NetworkInstance_EncapsulationPath {
	return &NetworkInstance_EncapsulationPath{
		NodePath: ygot.NewNodePath(
			[]string{"encapsulation"},
			map[string]interface{}{},
			n,
		),
	}
}

// Encapsulation (container): Configuration parameters relating to the encapsulation
// used for the network instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "encapsulation"
// Path from root: "/network-instances/network-instance/encapsulation"
func (n *NetworkInstancePathAny) Encapsulation() *NetworkInstance_EncapsulationPathAny {
	return &NetworkInstance_EncapsulationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"encapsulation"},
			map[string]interface{}{},
			n,
		),
	}
}

// Evpn (container): Configuration of parameters for EVPN related bridge domains
// (MAC VRFs) and layer3 VRFs (IP VRFs)
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "evpn"
// Path from root: "/network-instances/network-instance/evpn"
func (n *NetworkInstancePath) Evpn() *NetworkInstance_EvpnPath {
	return &NetworkInstance_EvpnPath{
		NodePath: ygot.NewNodePath(
			[]string{"evpn"},
			map[string]interface{}{},
			n,
		),
	}
}

// Evpn (container): Configuration of parameters for EVPN related bridge domains
// (MAC VRFs) and layer3 VRFs (IP VRFs)
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "evpn"
// Path from root: "/network-instances/network-instance/evpn"
func (n *NetworkInstancePathAny) Evpn() *NetworkInstance_EvpnPathAny {
	return &NetworkInstance_EvpnPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"evpn"},
			map[string]interface{}{},
			n,
		),
	}
}

// Fdb (container): Operational state and configuration parameters relating to
// the forwarding database of the network instance
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "fdb"
// Path from root: "/network-instances/network-instance/fdb"
func (n *NetworkInstancePath) Fdb() *NetworkInstance_FdbPath {
	return &NetworkInstance_FdbPath{
		NodePath: ygot.NewNodePath(
			[]string{"fdb"},
			map[string]interface{}{},
			n,
		),
	}
}

// Fdb (container): Operational state and configuration parameters relating to
// the forwarding database of the network instance
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "fdb"
// Path from root: "/network-instances/network-instance/fdb"
func (n *NetworkInstancePathAny) Fdb() *NetworkInstance_FdbPathAny {
	return &NetworkInstance_FdbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"fdb"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterInstancePolicies (container): Policies dictating how RIB or FIB entries are imported
// to and exported from this instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-instance-policies"
// Path from root: "/network-instances/network-instance/inter-instance-policies"
func (n *NetworkInstancePath) InterInstancePolicies() *NetworkInstance_InterInstancePoliciesPath {
	return &NetworkInstance_InterInstancePoliciesPath{
		NodePath: ygot.NewNodePath(
			[]string{"inter-instance-policies"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterInstancePolicies (container): Policies dictating how RIB or FIB entries are imported
// to and exported from this instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-instance-policies"
// Path from root: "/network-instances/network-instance/inter-instance-policies"
func (n *NetworkInstancePathAny) InterInstancePolicies() *NetworkInstance_InterInstancePoliciesPathAny {
	return &NetworkInstance_InterInstancePoliciesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-instance-policies"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): An interface associated with the network instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/interfaces/interface"
// Id (wildcarded): string
func (n *NetworkInstancePath) InterfaceAny() *NetworkInstance_InterfacePathAny {
	return &NetworkInstance_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): An interface associated with the network instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/interfaces/interface"
// Id (wildcarded): string
func (n *NetworkInstancePathAny) InterfaceAny() *NetworkInstance_InterfacePathAny {
	return &NetworkInstance_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Interface (list): An interface associated with the network instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/interfaces/interface"
// Id: string
func (n *NetworkInstancePath) Interface(Id string) *NetworkInstance_InterfacePath {
	return &NetworkInstance_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Interface (list): An interface associated with the network instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/interfaces/interface"
// Id: string
func (n *NetworkInstancePathAny) Interface(Id string) *NetworkInstance_InterfacePathAny {
	return &NetworkInstance_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Mpls (container): Anchor point for mpls configuration and operational
// data
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/mpls"
func (n *NetworkInstancePath) Mpls() *NetworkInstance_MplsPath {
	return &NetworkInstance_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Anchor point for mpls configuration and operational
// data
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/mpls"
func (n *NetworkInstancePathAny) Mpls() *NetworkInstance_MplsPathAny {
	return &NetworkInstance_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mtu (leaf): The maximum frame size which should be supported for this
// instance for Layer 2 frames
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mtu"
// Path from root: "/network-instances/network-instance/config/mtu"
func (n *NetworkInstancePath) Mtu() *NetworkInstance_MtuPath {
	return &NetworkInstance_MtuPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mtu"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mtu (leaf): The maximum frame size which should be supported for this
// instance for Layer 2 frames
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mtu"
// Path from root: "/network-instances/network-instance/config/mtu"
func (n *NetworkInstancePathAny) Mtu() *NetworkInstance_MtuPathAny {
	return &NetworkInstance_MtuPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mtu"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): An operator-assigned unique name for the network instance.
// If the operator does not designate a name for the instance of
// type 'DEFAULT_INSTANCE' (e.g. config), the implementation
// should use the name of 'DEFAULT' (e.g. state).
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/config/name"
func (n *NetworkInstancePath) Name() *NetworkInstance_NamePath {
	return &NetworkInstance_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): An operator-assigned unique name for the network instance.
// If the operator does not designate a name for the instance of
// type 'DEFAULT_INSTANCE' (e.g. config), the implementation
// should use the name of 'DEFAULT' (e.g. state).
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/config/name"
func (n *NetworkInstancePathAny) Name() *NetworkInstance_NamePathAny {
	return &NetworkInstance_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// PolicyForwarding (container): Configuration and operational state relating to policy-forwarding within
// a network instance.
// ----------------------------------------
// Defining module: "openconfig-policy-forwarding"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "policy-forwarding"
// Path from root: "/network-instances/network-instance/policy-forwarding"
func (n *NetworkInstancePath) PolicyForwarding() *NetworkInstance_PolicyForwardingPath {
	return &NetworkInstance_PolicyForwardingPath{
		NodePath: ygot.NewNodePath(
			[]string{"policy-forwarding"},
			map[string]interface{}{},
			n,
		),
	}
}

// PolicyForwarding (container): Configuration and operational state relating to policy-forwarding within
// a network instance.
// ----------------------------------------
// Defining module: "openconfig-policy-forwarding"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "policy-forwarding"
// Path from root: "/network-instances/network-instance/policy-forwarding"
func (n *NetworkInstancePathAny) PolicyForwarding() *NetworkInstance_PolicyForwardingPathAny {
	return &NetworkInstance_PolicyForwardingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"policy-forwarding"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtocolAny (list): A process (instance) of a routing protocol. Some
// systems may not support more than one instance of
// a particular routing protocol
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "protocols/protocol"
// Path from root: "/network-instances/network-instance/protocols/protocol"
// Identifier (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// Name (wildcarded): string
func (n *NetworkInstancePath) ProtocolAny() *NetworkInstance_ProtocolPathAny {
	return &NetworkInstance_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"protocols", "protocol"},
			map[string]interface{}{"identifier": "*", "name": "*"},
			n,
		),
	}
}

// ProtocolAny (list): A process (instance) of a routing protocol. Some
// systems may not support more than one instance of
// a particular routing protocol
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "protocols/protocol"
// Path from root: "/network-instances/network-instance/protocols/protocol"
// Identifier (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// Name (wildcarded): string
func (n *NetworkInstancePathAny) ProtocolAny() *NetworkInstance_ProtocolPathAny {
	return &NetworkInstance_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"protocols", "protocol"},
			map[string]interface{}{"identifier": "*", "name": "*"},
			n,
		),
	}
}

// ProtocolAnyName (list): A process (instance) of a routing protocol. Some
// systems may not support more than one instance of
// a particular routing protocol
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "protocols/protocol"
// Path from root: "/network-instances/network-instance/protocols/protocol"
// Identifier: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// Name (wildcarded): string
func (n *NetworkInstancePath) ProtocolAnyName(Identifier oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE) *NetworkInstance_ProtocolPathAny {
	return &NetworkInstance_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"protocols", "protocol"},
			map[string]interface{}{"identifier": Identifier, "name": "*"},
			n,
		),
	}
}

// ProtocolAnyName (list): A process (instance) of a routing protocol. Some
// systems may not support more than one instance of
// a particular routing protocol
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "protocols/protocol"
// Path from root: "/network-instances/network-instance/protocols/protocol"
// Identifier: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// Name (wildcarded): string
func (n *NetworkInstancePathAny) ProtocolAnyName(Identifier oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE) *NetworkInstance_ProtocolPathAny {
	return &NetworkInstance_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"protocols", "protocol"},
			map[string]interface{}{"identifier": Identifier, "name": "*"},
			n,
		),
	}
}

// ProtocolAnyIdentifier (list): A process (instance) of a routing protocol. Some
// systems may not support more than one instance of
// a particular routing protocol
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "protocols/protocol"
// Path from root: "/network-instances/network-instance/protocols/protocol"
// Identifier (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// Name: string
func (n *NetworkInstancePath) ProtocolAnyIdentifier(Name string) *NetworkInstance_ProtocolPathAny {
	return &NetworkInstance_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"protocols", "protocol"},
			map[string]interface{}{"identifier": "*", "name": Name},
			n,
		),
	}
}

// ProtocolAnyIdentifier (list): A process (instance) of a routing protocol. Some
// systems may not support more than one instance of
// a particular routing protocol
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "protocols/protocol"
// Path from root: "/network-instances/network-instance/protocols/protocol"
// Identifier (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// Name: string
func (n *NetworkInstancePathAny) ProtocolAnyIdentifier(Name string) *NetworkInstance_ProtocolPathAny {
	return &NetworkInstance_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"protocols", "protocol"},
			map[string]interface{}{"identifier": "*", "name": Name},
			n,
		),
	}
}

// Protocol (list): A process (instance) of a routing protocol. Some
// systems may not support more than one instance of
// a particular routing protocol
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "protocols/protocol"
// Path from root: "/network-instances/network-instance/protocols/protocol"
// Identifier: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// Name: string
func (n *NetworkInstancePath) Protocol(Identifier oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE, Name string) *NetworkInstance_ProtocolPath {
	return &NetworkInstance_ProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"protocols", "protocol"},
			map[string]interface{}{"identifier": Identifier, "name": Name},
			n,
		),
	}
}

// Protocol (list): A process (instance) of a routing protocol. Some
// systems may not support more than one instance of
// a particular routing protocol
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "protocols/protocol"
// Path from root: "/network-instances/network-instance/protocols/protocol"
// Identifier: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// Name: string
func (n *NetworkInstancePathAny) Protocol(Identifier oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE, Name string) *NetworkInstance_ProtocolPathAny {
	return &NetworkInstance_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"protocols", "protocol"},
			map[string]interface{}{"identifier": Identifier, "name": Name},
			n,
		),
	}
}

// RouteDistinguisher (leaf): The route distinguisher that should be used for the local
// VRF or VSI instance when it is signalled via BGP.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-distinguisher"
// Path from root: "/network-instances/network-instance/config/route-distinguisher"
func (n *NetworkInstancePath) RouteDistinguisher() *NetworkInstance_RouteDistinguisherPath {
	return &NetworkInstance_RouteDistinguisherPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-distinguisher"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteDistinguisher (leaf): The route distinguisher that should be used for the local
// VRF or VSI instance when it is signalled via BGP.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-distinguisher"
// Path from root: "/network-instances/network-instance/config/route-distinguisher"
func (n *NetworkInstancePathAny) RouteDistinguisher() *NetworkInstance_RouteDistinguisherPathAny {
	return &NetworkInstance_RouteDistinguisherPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-distinguisher"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteLimitAny (list): A route limit applying to a particular address family.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-limits/route-limit"
// Path from root: "/network-instances/network-instance/route-limits/route-limit"
// Afi (wildcarded): oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePath) RouteLimitAny() *NetworkInstance_RouteLimitPathAny {
	return &NetworkInstance_RouteLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"route-limits", "route-limit"},
			map[string]interface{}{"afi": "*"},
			n,
		),
	}
}

// RouteLimitAny (list): A route limit applying to a particular address family.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-limits/route-limit"
// Path from root: "/network-instances/network-instance/route-limits/route-limit"
// Afi (wildcarded): oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePathAny) RouteLimitAny() *NetworkInstance_RouteLimitPathAny {
	return &NetworkInstance_RouteLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"route-limits", "route-limit"},
			map[string]interface{}{"afi": "*"},
			n,
		),
	}
}

// RouteLimit (list): A route limit applying to a particular address family.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-limits/route-limit"
// Path from root: "/network-instances/network-instance/route-limits/route-limit"
// Afi: oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePath) RouteLimit(Afi oc.E_Types_ADDRESS_FAMILY) *NetworkInstance_RouteLimitPath {
	return &NetworkInstance_RouteLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"route-limits", "route-limit"},
			map[string]interface{}{"afi": Afi},
			n,
		),
	}
}

// RouteLimit (list): A route limit applying to a particular address family.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-limits/route-limit"
// Path from root: "/network-instances/network-instance/route-limits/route-limit"
// Afi: oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePathAny) RouteLimit(Afi oc.E_Types_ADDRESS_FAMILY) *NetworkInstance_RouteLimitPathAny {
	return &NetworkInstance_RouteLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"route-limits", "route-limit"},
			map[string]interface{}{"afi": Afi},
			n,
		),
	}
}

// RouterId (leaf): A identifier for the local network instance - typically
// used within associated routing protocols or signalling
// routing information in another network instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/router-id"
// Path from root: "/network-instances/network-instance/config/router-id"
func (n *NetworkInstancePath) RouterId() *NetworkInstance_RouterIdPath {
	return &NetworkInstance_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): A identifier for the local network instance - typically
// used within associated routing protocols or signalling
// routing information in another network instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/router-id"
// Path from root: "/network-instances/network-instance/config/router-id"
func (n *NetworkInstancePathAny) RouterId() *NetworkInstance_RouterIdPathAny {
	return &NetworkInstance_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operational state parameters relating to
// segment routing.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/segment-routing"
func (n *NetworkInstancePath) SegmentRouting() *NetworkInstance_SegmentRoutingPath {
	return &NetworkInstance_SegmentRoutingPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operational state parameters relating to
// segment routing.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/segment-routing"
func (n *NetworkInstancePathAny) SegmentRouting() *NetworkInstance_SegmentRoutingPathAny {
	return &NetworkInstance_SegmentRoutingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// TableAny (list): A network instance manages one or more forwarding or
// routing tables. These may reflect a Layer 2 forwarding
// information base, a Layer 3 routing table, or an MPLS
// LFIB.
//
// The table populated by a protocol within an instance is
// identified by the protocol identifier (e.g., BGP, IS-IS)
// and the address family (e.g., IPv4, IPv6) supported by
// that protocol. Multiple instances of the same protocol
// populate a single table -- such that
// a single IS-IS or OSPF IPv4 table exists per network
// instance.
//
// An implementation is expected to create entries within
// this list when the relevant protocol context is enabled.
// i.e., when a BGP instance is created with IPv4 and IPv6
// address families enabled, the protocol=BGP,
// address-family=IPv4 table is created by the system.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tables/table"
// Path from root: "/network-instances/network-instance/tables/table"
// Protocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily (wildcarded): oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePath) TableAny() *NetworkInstance_TablePathAny {
	return &NetworkInstance_TablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tables", "table"},
			map[string]interface{}{"protocol": "*", "address-family": "*"},
			n,
		),
	}
}

// TableAny (list): A network instance manages one or more forwarding or
// routing tables. These may reflect a Layer 2 forwarding
// information base, a Layer 3 routing table, or an MPLS
// LFIB.
//
// The table populated by a protocol within an instance is
// identified by the protocol identifier (e.g., BGP, IS-IS)
// and the address family (e.g., IPv4, IPv6) supported by
// that protocol. Multiple instances of the same protocol
// populate a single table -- such that
// a single IS-IS or OSPF IPv4 table exists per network
// instance.
//
// An implementation is expected to create entries within
// this list when the relevant protocol context is enabled.
// i.e., when a BGP instance is created with IPv4 and IPv6
// address families enabled, the protocol=BGP,
// address-family=IPv4 table is created by the system.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tables/table"
// Path from root: "/network-instances/network-instance/tables/table"
// Protocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily (wildcarded): oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePathAny) TableAny() *NetworkInstance_TablePathAny {
	return &NetworkInstance_TablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tables", "table"},
			map[string]interface{}{"protocol": "*", "address-family": "*"},
			n,
		),
	}
}

// TableAnyAddressFamily (list): A network instance manages one or more forwarding or
// routing tables. These may reflect a Layer 2 forwarding
// information base, a Layer 3 routing table, or an MPLS
// LFIB.
//
// The table populated by a protocol within an instance is
// identified by the protocol identifier (e.g., BGP, IS-IS)
// and the address family (e.g., IPv4, IPv6) supported by
// that protocol. Multiple instances of the same protocol
// populate a single table -- such that
// a single IS-IS or OSPF IPv4 table exists per network
// instance.
//
// An implementation is expected to create entries within
// this list when the relevant protocol context is enabled.
// i.e., when a BGP instance is created with IPv4 and IPv6
// address families enabled, the protocol=BGP,
// address-family=IPv4 table is created by the system.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tables/table"
// Path from root: "/network-instances/network-instance/tables/table"
// Protocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily (wildcarded): oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePath) TableAnyAddressFamily(Protocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE) *NetworkInstance_TablePathAny {
	return &NetworkInstance_TablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tables", "table"},
			map[string]interface{}{"protocol": Protocol, "address-family": "*"},
			n,
		),
	}
}

// TableAnyAddressFamily (list): A network instance manages one or more forwarding or
// routing tables. These may reflect a Layer 2 forwarding
// information base, a Layer 3 routing table, or an MPLS
// LFIB.
//
// The table populated by a protocol within an instance is
// identified by the protocol identifier (e.g., BGP, IS-IS)
// and the address family (e.g., IPv4, IPv6) supported by
// that protocol. Multiple instances of the same protocol
// populate a single table -- such that
// a single IS-IS or OSPF IPv4 table exists per network
// instance.
//
// An implementation is expected to create entries within
// this list when the relevant protocol context is enabled.
// i.e., when a BGP instance is created with IPv4 and IPv6
// address families enabled, the protocol=BGP,
// address-family=IPv4 table is created by the system.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tables/table"
// Path from root: "/network-instances/network-instance/tables/table"
// Protocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily (wildcarded): oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePathAny) TableAnyAddressFamily(Protocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE) *NetworkInstance_TablePathAny {
	return &NetworkInstance_TablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tables", "table"},
			map[string]interface{}{"protocol": Protocol, "address-family": "*"},
			n,
		),
	}
}

// TableAnyProtocol (list): A network instance manages one or more forwarding or
// routing tables. These may reflect a Layer 2 forwarding
// information base, a Layer 3 routing table, or an MPLS
// LFIB.
//
// The table populated by a protocol within an instance is
// identified by the protocol identifier (e.g., BGP, IS-IS)
// and the address family (e.g., IPv4, IPv6) supported by
// that protocol. Multiple instances of the same protocol
// populate a single table -- such that
// a single IS-IS or OSPF IPv4 table exists per network
// instance.
//
// An implementation is expected to create entries within
// this list when the relevant protocol context is enabled.
// i.e., when a BGP instance is created with IPv4 and IPv6
// address families enabled, the protocol=BGP,
// address-family=IPv4 table is created by the system.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tables/table"
// Path from root: "/network-instances/network-instance/tables/table"
// Protocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily: oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePath) TableAnyProtocol(AddressFamily oc.E_Types_ADDRESS_FAMILY) *NetworkInstance_TablePathAny {
	return &NetworkInstance_TablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tables", "table"},
			map[string]interface{}{"protocol": "*", "address-family": AddressFamily},
			n,
		),
	}
}

// TableAnyProtocol (list): A network instance manages one or more forwarding or
// routing tables. These may reflect a Layer 2 forwarding
// information base, a Layer 3 routing table, or an MPLS
// LFIB.
//
// The table populated by a protocol within an instance is
// identified by the protocol identifier (e.g., BGP, IS-IS)
// and the address family (e.g., IPv4, IPv6) supported by
// that protocol. Multiple instances of the same protocol
// populate a single table -- such that
// a single IS-IS or OSPF IPv4 table exists per network
// instance.
//
// An implementation is expected to create entries within
// this list when the relevant protocol context is enabled.
// i.e., when a BGP instance is created with IPv4 and IPv6
// address families enabled, the protocol=BGP,
// address-family=IPv4 table is created by the system.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tables/table"
// Path from root: "/network-instances/network-instance/tables/table"
// Protocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily: oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePathAny) TableAnyProtocol(AddressFamily oc.E_Types_ADDRESS_FAMILY) *NetworkInstance_TablePathAny {
	return &NetworkInstance_TablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tables", "table"},
			map[string]interface{}{"protocol": "*", "address-family": AddressFamily},
			n,
		),
	}
}

// Table (list): A network instance manages one or more forwarding or
// routing tables. These may reflect a Layer 2 forwarding
// information base, a Layer 3 routing table, or an MPLS
// LFIB.
//
// The table populated by a protocol within an instance is
// identified by the protocol identifier (e.g., BGP, IS-IS)
// and the address family (e.g., IPv4, IPv6) supported by
// that protocol. Multiple instances of the same protocol
// populate a single table -- such that
// a single IS-IS or OSPF IPv4 table exists per network
// instance.
//
// An implementation is expected to create entries within
// this list when the relevant protocol context is enabled.
// i.e., when a BGP instance is created with IPv4 and IPv6
// address families enabled, the protocol=BGP,
// address-family=IPv4 table is created by the system.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tables/table"
// Path from root: "/network-instances/network-instance/tables/table"
// Protocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily: oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePath) Table(Protocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE, AddressFamily oc.E_Types_ADDRESS_FAMILY) *NetworkInstance_TablePath {
	return &NetworkInstance_TablePath{
		NodePath: ygot.NewNodePath(
			[]string{"tables", "table"},
			map[string]interface{}{"protocol": Protocol, "address-family": AddressFamily},
			n,
		),
	}
}

// Table (list): A network instance manages one or more forwarding or
// routing tables. These may reflect a Layer 2 forwarding
// information base, a Layer 3 routing table, or an MPLS
// LFIB.
//
// The table populated by a protocol within an instance is
// identified by the protocol identifier (e.g., BGP, IS-IS)
// and the address family (e.g., IPv4, IPv6) supported by
// that protocol. Multiple instances of the same protocol
// populate a single table -- such that
// a single IS-IS or OSPF IPv4 table exists per network
// instance.
//
// An implementation is expected to create entries within
// this list when the relevant protocol context is enabled.
// i.e., when a BGP instance is created with IPv4 and IPv6
// address families enabled, the protocol=BGP,
// address-family=IPv4 table is created by the system.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tables/table"
// Path from root: "/network-instances/network-instance/tables/table"
// Protocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily: oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePathAny) Table(Protocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE, AddressFamily oc.E_Types_ADDRESS_FAMILY) *NetworkInstance_TablePathAny {
	return &NetworkInstance_TablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tables", "table"},
			map[string]interface{}{"protocol": Protocol, "address-family": AddressFamily},
			n,
		),
	}
}

// TableConnectionAny (list): A list of connections between pairs of routing or
// forwarding tables, the leaking of entries between
// which is specified by the import policy.
//
// A connection connecting a source table to a destination
// table implies that routes that match the policy specified
// for the connection are available for the destination
// protocol to advertise, or match within its policies.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "table-connections/table-connection"
// Path from root: "/network-instances/network-instance/table-connections/table-connection"
// SrcProtocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// DstProtocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily (wildcarded): oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePath) TableConnectionAny() *NetworkInstance_TableConnectionPathAny {
	return &NetworkInstance_TableConnectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"table-connections", "table-connection"},
			map[string]interface{}{"src-protocol": "*", "dst-protocol": "*", "address-family": "*"},
			n,
		),
	}
}

// TableConnectionAny (list): A list of connections between pairs of routing or
// forwarding tables, the leaking of entries between
// which is specified by the import policy.
//
// A connection connecting a source table to a destination
// table implies that routes that match the policy specified
// for the connection are available for the destination
// protocol to advertise, or match within its policies.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "table-connections/table-connection"
// Path from root: "/network-instances/network-instance/table-connections/table-connection"
// SrcProtocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// DstProtocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily (wildcarded): oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePathAny) TableConnectionAny() *NetworkInstance_TableConnectionPathAny {
	return &NetworkInstance_TableConnectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"table-connections", "table-connection"},
			map[string]interface{}{"src-protocol": "*", "dst-protocol": "*", "address-family": "*"},
			n,
		),
	}
}

// TableConnectionAnyDstProtocolAnyAddressFamily (list): A list of connections between pairs of routing or
// forwarding tables, the leaking of entries between
// which is specified by the import policy.
//
// A connection connecting a source table to a destination
// table implies that routes that match the policy specified
// for the connection are available for the destination
// protocol to advertise, or match within its policies.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "table-connections/table-connection"
// Path from root: "/network-instances/network-instance/table-connections/table-connection"
// SrcProtocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// DstProtocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily (wildcarded): oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePath) TableConnectionAnyDstProtocolAnyAddressFamily(SrcProtocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE) *NetworkInstance_TableConnectionPathAny {
	return &NetworkInstance_TableConnectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"table-connections", "table-connection"},
			map[string]interface{}{"src-protocol": SrcProtocol, "dst-protocol": "*", "address-family": "*"},
			n,
		),
	}
}

// TableConnectionAnyDstProtocolAnyAddressFamily (list): A list of connections between pairs of routing or
// forwarding tables, the leaking of entries between
// which is specified by the import policy.
//
// A connection connecting a source table to a destination
// table implies that routes that match the policy specified
// for the connection are available for the destination
// protocol to advertise, or match within its policies.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "table-connections/table-connection"
// Path from root: "/network-instances/network-instance/table-connections/table-connection"
// SrcProtocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// DstProtocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily (wildcarded): oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePathAny) TableConnectionAnyDstProtocolAnyAddressFamily(SrcProtocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE) *NetworkInstance_TableConnectionPathAny {
	return &NetworkInstance_TableConnectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"table-connections", "table-connection"},
			map[string]interface{}{"src-protocol": SrcProtocol, "dst-protocol": "*", "address-family": "*"},
			n,
		),
	}
}

// TableConnectionAnySrcProtocolAnyAddressFamily (list): A list of connections between pairs of routing or
// forwarding tables, the leaking of entries between
// which is specified by the import policy.
//
// A connection connecting a source table to a destination
// table implies that routes that match the policy specified
// for the connection are available for the destination
// protocol to advertise, or match within its policies.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "table-connections/table-connection"
// Path from root: "/network-instances/network-instance/table-connections/table-connection"
// SrcProtocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// DstProtocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily (wildcarded): oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePath) TableConnectionAnySrcProtocolAnyAddressFamily(DstProtocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE) *NetworkInstance_TableConnectionPathAny {
	return &NetworkInstance_TableConnectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"table-connections", "table-connection"},
			map[string]interface{}{"src-protocol": "*", "dst-protocol": DstProtocol, "address-family": "*"},
			n,
		),
	}
}

// TableConnectionAnySrcProtocolAnyAddressFamily (list): A list of connections between pairs of routing or
// forwarding tables, the leaking of entries between
// which is specified by the import policy.
//
// A connection connecting a source table to a destination
// table implies that routes that match the policy specified
// for the connection are available for the destination
// protocol to advertise, or match within its policies.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "table-connections/table-connection"
// Path from root: "/network-instances/network-instance/table-connections/table-connection"
// SrcProtocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// DstProtocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily (wildcarded): oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePathAny) TableConnectionAnySrcProtocolAnyAddressFamily(DstProtocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE) *NetworkInstance_TableConnectionPathAny {
	return &NetworkInstance_TableConnectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"table-connections", "table-connection"},
			map[string]interface{}{"src-protocol": "*", "dst-protocol": DstProtocol, "address-family": "*"},
			n,
		),
	}
}

// TableConnectionAnyAddressFamily (list): A list of connections between pairs of routing or
// forwarding tables, the leaking of entries between
// which is specified by the import policy.
//
// A connection connecting a source table to a destination
// table implies that routes that match the policy specified
// for the connection are available for the destination
// protocol to advertise, or match within its policies.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "table-connections/table-connection"
// Path from root: "/network-instances/network-instance/table-connections/table-connection"
// SrcProtocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// DstProtocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily (wildcarded): oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePath) TableConnectionAnyAddressFamily(SrcProtocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE, DstProtocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE) *NetworkInstance_TableConnectionPathAny {
	return &NetworkInstance_TableConnectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"table-connections", "table-connection"},
			map[string]interface{}{"src-protocol": SrcProtocol, "dst-protocol": DstProtocol, "address-family": "*"},
			n,
		),
	}
}

// TableConnectionAnyAddressFamily (list): A list of connections between pairs of routing or
// forwarding tables, the leaking of entries between
// which is specified by the import policy.
//
// A connection connecting a source table to a destination
// table implies that routes that match the policy specified
// for the connection are available for the destination
// protocol to advertise, or match within its policies.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "table-connections/table-connection"
// Path from root: "/network-instances/network-instance/table-connections/table-connection"
// SrcProtocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// DstProtocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily (wildcarded): oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePathAny) TableConnectionAnyAddressFamily(SrcProtocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE, DstProtocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE) *NetworkInstance_TableConnectionPathAny {
	return &NetworkInstance_TableConnectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"table-connections", "table-connection"},
			map[string]interface{}{"src-protocol": SrcProtocol, "dst-protocol": DstProtocol, "address-family": "*"},
			n,
		),
	}
}

// TableConnectionAnySrcProtocolAnyDstProtocol (list): A list of connections between pairs of routing or
// forwarding tables, the leaking of entries between
// which is specified by the import policy.
//
// A connection connecting a source table to a destination
// table implies that routes that match the policy specified
// for the connection are available for the destination
// protocol to advertise, or match within its policies.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "table-connections/table-connection"
// Path from root: "/network-instances/network-instance/table-connections/table-connection"
// SrcProtocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// DstProtocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily: oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePath) TableConnectionAnySrcProtocolAnyDstProtocol(AddressFamily oc.E_Types_ADDRESS_FAMILY) *NetworkInstance_TableConnectionPathAny {
	return &NetworkInstance_TableConnectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"table-connections", "table-connection"},
			map[string]interface{}{"src-protocol": "*", "dst-protocol": "*", "address-family": AddressFamily},
			n,
		),
	}
}

// TableConnectionAnySrcProtocolAnyDstProtocol (list): A list of connections between pairs of routing or
// forwarding tables, the leaking of entries between
// which is specified by the import policy.
//
// A connection connecting a source table to a destination
// table implies that routes that match the policy specified
// for the connection are available for the destination
// protocol to advertise, or match within its policies.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "table-connections/table-connection"
// Path from root: "/network-instances/network-instance/table-connections/table-connection"
// SrcProtocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// DstProtocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily: oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePathAny) TableConnectionAnySrcProtocolAnyDstProtocol(AddressFamily oc.E_Types_ADDRESS_FAMILY) *NetworkInstance_TableConnectionPathAny {
	return &NetworkInstance_TableConnectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"table-connections", "table-connection"},
			map[string]interface{}{"src-protocol": "*", "dst-protocol": "*", "address-family": AddressFamily},
			n,
		),
	}
}

// TableConnectionAnyDstProtocol (list): A list of connections between pairs of routing or
// forwarding tables, the leaking of entries between
// which is specified by the import policy.
//
// A connection connecting a source table to a destination
// table implies that routes that match the policy specified
// for the connection are available for the destination
// protocol to advertise, or match within its policies.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "table-connections/table-connection"
// Path from root: "/network-instances/network-instance/table-connections/table-connection"
// SrcProtocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// DstProtocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily: oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePath) TableConnectionAnyDstProtocol(SrcProtocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE, AddressFamily oc.E_Types_ADDRESS_FAMILY) *NetworkInstance_TableConnectionPathAny {
	return &NetworkInstance_TableConnectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"table-connections", "table-connection"},
			map[string]interface{}{"src-protocol": SrcProtocol, "dst-protocol": "*", "address-family": AddressFamily},
			n,
		),
	}
}

// TableConnectionAnyDstProtocol (list): A list of connections between pairs of routing or
// forwarding tables, the leaking of entries between
// which is specified by the import policy.
//
// A connection connecting a source table to a destination
// table implies that routes that match the policy specified
// for the connection are available for the destination
// protocol to advertise, or match within its policies.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "table-connections/table-connection"
// Path from root: "/network-instances/network-instance/table-connections/table-connection"
// SrcProtocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// DstProtocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily: oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePathAny) TableConnectionAnyDstProtocol(SrcProtocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE, AddressFamily oc.E_Types_ADDRESS_FAMILY) *NetworkInstance_TableConnectionPathAny {
	return &NetworkInstance_TableConnectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"table-connections", "table-connection"},
			map[string]interface{}{"src-protocol": SrcProtocol, "dst-protocol": "*", "address-family": AddressFamily},
			n,
		),
	}
}

// TableConnectionAnySrcProtocol (list): A list of connections between pairs of routing or
// forwarding tables, the leaking of entries between
// which is specified by the import policy.
//
// A connection connecting a source table to a destination
// table implies that routes that match the policy specified
// for the connection are available for the destination
// protocol to advertise, or match within its policies.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "table-connections/table-connection"
// Path from root: "/network-instances/network-instance/table-connections/table-connection"
// SrcProtocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// DstProtocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily: oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePath) TableConnectionAnySrcProtocol(DstProtocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE, AddressFamily oc.E_Types_ADDRESS_FAMILY) *NetworkInstance_TableConnectionPathAny {
	return &NetworkInstance_TableConnectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"table-connections", "table-connection"},
			map[string]interface{}{"src-protocol": "*", "dst-protocol": DstProtocol, "address-family": AddressFamily},
			n,
		),
	}
}

// TableConnectionAnySrcProtocol (list): A list of connections between pairs of routing or
// forwarding tables, the leaking of entries between
// which is specified by the import policy.
//
// A connection connecting a source table to a destination
// table implies that routes that match the policy specified
// for the connection are available for the destination
// protocol to advertise, or match within its policies.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "table-connections/table-connection"
// Path from root: "/network-instances/network-instance/table-connections/table-connection"
// SrcProtocol (wildcarded): oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// DstProtocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily: oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePathAny) TableConnectionAnySrcProtocol(DstProtocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE, AddressFamily oc.E_Types_ADDRESS_FAMILY) *NetworkInstance_TableConnectionPathAny {
	return &NetworkInstance_TableConnectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"table-connections", "table-connection"},
			map[string]interface{}{"src-protocol": "*", "dst-protocol": DstProtocol, "address-family": AddressFamily},
			n,
		),
	}
}

// TableConnection (list): A list of connections between pairs of routing or
// forwarding tables, the leaking of entries between
// which is specified by the import policy.
//
// A connection connecting a source table to a destination
// table implies that routes that match the policy specified
// for the connection are available for the destination
// protocol to advertise, or match within its policies.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "table-connections/table-connection"
// Path from root: "/network-instances/network-instance/table-connections/table-connection"
// SrcProtocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// DstProtocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily: oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePath) TableConnection(SrcProtocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE, DstProtocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE, AddressFamily oc.E_Types_ADDRESS_FAMILY) *NetworkInstance_TableConnectionPath {
	return &NetworkInstance_TableConnectionPath{
		NodePath: ygot.NewNodePath(
			[]string{"table-connections", "table-connection"},
			map[string]interface{}{"src-protocol": SrcProtocol, "dst-protocol": DstProtocol, "address-family": AddressFamily},
			n,
		),
	}
}

// TableConnection (list): A list of connections between pairs of routing or
// forwarding tables, the leaking of entries between
// which is specified by the import policy.
//
// A connection connecting a source table to a destination
// table implies that routes that match the policy specified
// for the connection are available for the destination
// protocol to advertise, or match within its policies.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "table-connections/table-connection"
// Path from root: "/network-instances/network-instance/table-connections/table-connection"
// SrcProtocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// DstProtocol: oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE
// AddressFamily: oc.E_Types_ADDRESS_FAMILY
func (n *NetworkInstancePathAny) TableConnection(SrcProtocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE, DstProtocol oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE, AddressFamily oc.E_Types_ADDRESS_FAMILY) *NetworkInstance_TableConnectionPathAny {
	return &NetworkInstance_TableConnectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"table-connections", "table-connection"},
			map[string]interface{}{"src-protocol": SrcProtocol, "dst-protocol": DstProtocol, "address-family": AddressFamily},
			n,
		),
	}
}

// Type (leaf): The type of network instance. The value of this leaf
// indicates the type of forwarding entries that should be
// supported by this network instance. Signalling protocols also
// use the network instance type to infer the type of service
// they advertise; for example MPLS signalling for an L2VSI
// network instance would infer a VPLS service whereas a type of
// L2PTP would infer a VPWS (pseudo-wire) service.
//
// An implementation must support only a single network-instance
// of type 'DEFAULT_INSTANCE'.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/type"
// Path from root: "/network-instances/network-instance/config/type"
func (n *NetworkInstancePath) Type() *NetworkInstance_TypePath {
	return &NetworkInstance_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of network instance. The value of this leaf
// indicates the type of forwarding entries that should be
// supported by this network instance. Signalling protocols also
// use the network instance type to infer the type of service
// they advertise; for example MPLS signalling for an L2VSI
// network instance would infer a VPLS service whereas a type of
// L2PTP would infer a VPWS (pseudo-wire) service.
//
// An implementation must support only a single network-instance
// of type 'DEFAULT_INSTANCE'.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/type"
// Path from root: "/network-instances/network-instance/config/type"
func (n *NetworkInstancePathAny) Type() *NetworkInstance_TypePathAny {
	return &NetworkInstance_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// VlanAny (list): Configured VLANs keyed by id
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "vlans/vlan"
// Path from root: "/network-instances/network-instance/vlans/vlan"
// VlanId (wildcarded): uint16
func (n *NetworkInstancePath) VlanAny() *NetworkInstance_VlanPathAny {
	return &NetworkInstance_VlanPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"vlans", "vlan"},
			map[string]interface{}{"vlan-id": "*"},
			n,
		),
	}
}

// VlanAny (list): Configured VLANs keyed by id
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "vlans/vlan"
// Path from root: "/network-instances/network-instance/vlans/vlan"
// VlanId (wildcarded): uint16
func (n *NetworkInstancePathAny) VlanAny() *NetworkInstance_VlanPathAny {
	return &NetworkInstance_VlanPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"vlans", "vlan"},
			map[string]interface{}{"vlan-id": "*"},
			n,
		),
	}
}

// Vlan (list): Configured VLANs keyed by id
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "vlans/vlan"
// Path from root: "/network-instances/network-instance/vlans/vlan"
// VlanId: uint16
func (n *NetworkInstancePath) Vlan(VlanId uint16) *NetworkInstance_VlanPath {
	return &NetworkInstance_VlanPath{
		NodePath: ygot.NewNodePath(
			[]string{"vlans", "vlan"},
			map[string]interface{}{"vlan-id": VlanId},
			n,
		),
	}
}

// Vlan (list): Configured VLANs keyed by id
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "vlans/vlan"
// Path from root: "/network-instances/network-instance/vlans/vlan"
// VlanId: uint16
func (n *NetworkInstancePathAny) Vlan(VlanId uint16) *NetworkInstance_VlanPathAny {
	return &NetworkInstance_VlanPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"vlans", "vlan"},
			map[string]interface{}{"vlan-id": VlanId},
			n,
		),
	}
}

// NetworkInstance_ConnectionPointPath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point YANG schema element.
type NetworkInstance_ConnectionPointPath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point YANG schema element.
type NetworkInstance_ConnectionPointPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_ConnectionPointIdPath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/config/connection-point-id YANG schema element.
type NetworkInstance_ConnectionPoint_ConnectionPointIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_ConnectionPointIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/config/connection-point-id YANG schema element.
type NetworkInstance_ConnectionPoint_ConnectionPointIdPathAny struct {
	*ygot.NodePath
}

// ConnectionPointId (leaf): An identifier for a connection point
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/connection-point-id"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/config/connection-point-id"
func (n *NetworkInstance_ConnectionPointPath) ConnectionPointId() *NetworkInstance_ConnectionPoint_ConnectionPointIdPath {
	return &NetworkInstance_ConnectionPoint_ConnectionPointIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "connection-point-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConnectionPointId (leaf): An identifier for a connection point
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/connection-point-id"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/config/connection-point-id"
func (n *NetworkInstance_ConnectionPointPathAny) ConnectionPointId() *NetworkInstance_ConnectionPoint_ConnectionPointIdPathAny {
	return &NetworkInstance_ConnectionPoint_ConnectionPointIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "connection-point-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// EndpointAny (list): A list of the endpoints (interfaces or remote
// connection points that can be used for this
// connection point). The active endpoint is selected
// based on the precedence that it is configured
// with
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "endpoints/endpoint"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint"
// EndpointId (wildcarded): string
func (n *NetworkInstance_ConnectionPointPath) EndpointAny() *NetworkInstance_ConnectionPoint_EndpointPathAny {
	return &NetworkInstance_ConnectionPoint_EndpointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"endpoints", "endpoint"},
			map[string]interface{}{"endpoint-id": "*"},
			n,
		),
	}
}

// EndpointAny (list): A list of the endpoints (interfaces or remote
// connection points that can be used for this
// connection point). The active endpoint is selected
// based on the precedence that it is configured
// with
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "endpoints/endpoint"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint"
// EndpointId (wildcarded): string
func (n *NetworkInstance_ConnectionPointPathAny) EndpointAny() *NetworkInstance_ConnectionPoint_EndpointPathAny {
	return &NetworkInstance_ConnectionPoint_EndpointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"endpoints", "endpoint"},
			map[string]interface{}{"endpoint-id": "*"},
			n,
		),
	}
}

// Endpoint (list): A list of the endpoints (interfaces or remote
// connection points that can be used for this
// connection point). The active endpoint is selected
// based on the precedence that it is configured
// with
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "endpoints/endpoint"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint"
// EndpointId: string
func (n *NetworkInstance_ConnectionPointPath) Endpoint(EndpointId string) *NetworkInstance_ConnectionPoint_EndpointPath {
	return &NetworkInstance_ConnectionPoint_EndpointPath{
		NodePath: ygot.NewNodePath(
			[]string{"endpoints", "endpoint"},
			map[string]interface{}{"endpoint-id": EndpointId},
			n,
		),
	}
}

// Endpoint (list): A list of the endpoints (interfaces or remote
// connection points that can be used for this
// connection point). The active endpoint is selected
// based on the precedence that it is configured
// with
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "endpoints/endpoint"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint"
// EndpointId: string
func (n *NetworkInstance_ConnectionPointPathAny) Endpoint(EndpointId string) *NetworkInstance_ConnectionPoint_EndpointPathAny {
	return &NetworkInstance_ConnectionPoint_EndpointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"endpoints", "endpoint"},
			map[string]interface{}{"endpoint-id": EndpointId},
			n,
		),
	}
}

// NetworkInstance_ConnectionPoint_EndpointPath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint YANG schema element.
type NetworkInstance_ConnectionPoint_EndpointPath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_EndpointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint YANG schema element.
type NetworkInstance_ConnectionPoint_EndpointPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_EndpointIdPath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/config/endpoint-id YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_EndpointIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_EndpointIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/config/endpoint-id YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_EndpointIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_PrecedencePath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/config/precedence YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_PrecedencePath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_PrecedencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/config/precedence YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_PrecedencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_TypePath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/config/type YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/config/type YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_TypePathAny struct {
	*ygot.NodePath
}

// EndpointId (leaf): An identifier for the endpoint
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/endpoint-id"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/config/endpoint-id"
func (n *NetworkInstance_ConnectionPoint_EndpointPath) EndpointId() *NetworkInstance_ConnectionPoint_Endpoint_EndpointIdPath {
	return &NetworkInstance_ConnectionPoint_Endpoint_EndpointIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "endpoint-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// EndpointId (leaf): An identifier for the endpoint
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/endpoint-id"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/config/endpoint-id"
func (n *NetworkInstance_ConnectionPoint_EndpointPathAny) EndpointId() *NetworkInstance_ConnectionPoint_Endpoint_EndpointIdPathAny {
	return &NetworkInstance_ConnectionPoint_Endpoint_EndpointIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "endpoint-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Local (container): Configuration and operational state parameters
// relating to a local interface
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "local"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local"
func (n *NetworkInstance_ConnectionPoint_EndpointPath) Local() *NetworkInstance_ConnectionPoint_Endpoint_LocalPath {
	return &NetworkInstance_ConnectionPoint_Endpoint_LocalPath{
		NodePath: ygot.NewNodePath(
			[]string{"local"},
			map[string]interface{}{},
			n,
		),
	}
}

// Local (container): Configuration and operational state parameters
// relating to a local interface
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "local"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local"
func (n *NetworkInstance_ConnectionPoint_EndpointPathAny) Local() *NetworkInstance_ConnectionPoint_Endpoint_LocalPathAny {
	return &NetworkInstance_ConnectionPoint_Endpoint_LocalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"local"},
			map[string]interface{}{},
			n,
		),
	}
}

// Precedence (leaf): The precedence of the endpoint - the lowest precendence
// viable endpoint will be utilised as the active endpoint
// within a connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/precedence"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/config/precedence"
func (n *NetworkInstance_ConnectionPoint_EndpointPath) Precedence() *NetworkInstance_ConnectionPoint_Endpoint_PrecedencePath {
	return &NetworkInstance_ConnectionPoint_Endpoint_PrecedencePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "precedence"},
			map[string]interface{}{},
			n,
		),
	}
}

// Precedence (leaf): The precedence of the endpoint - the lowest precendence
// viable endpoint will be utilised as the active endpoint
// within a connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/precedence"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/config/precedence"
func (n *NetworkInstance_ConnectionPoint_EndpointPathAny) Precedence() *NetworkInstance_ConnectionPoint_Endpoint_PrecedencePathAny {
	return &NetworkInstance_ConnectionPoint_Endpoint_PrecedencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "precedence"},
			map[string]interface{}{},
			n,
		),
	}
}

// Remote (container): Configuration and operational state parameters
// relating to a remote interface
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "remote"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/remote"
func (n *NetworkInstance_ConnectionPoint_EndpointPath) Remote() *NetworkInstance_ConnectionPoint_Endpoint_RemotePath {
	return &NetworkInstance_ConnectionPoint_Endpoint_RemotePath{
		NodePath: ygot.NewNodePath(
			[]string{"remote"},
			map[string]interface{}{},
			n,
		),
	}
}

// Remote (container): Configuration and operational state parameters
// relating to a remote interface
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "remote"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/remote"
func (n *NetworkInstance_ConnectionPoint_EndpointPathAny) Remote() *NetworkInstance_ConnectionPoint_Endpoint_RemotePathAny {
	return &NetworkInstance_ConnectionPoint_Endpoint_RemotePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"remote"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of endpoint that is referred to by the current
// endpoint
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/type"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/config/type"
func (n *NetworkInstance_ConnectionPoint_EndpointPath) Type() *NetworkInstance_ConnectionPoint_Endpoint_TypePath {
	return &NetworkInstance_ConnectionPoint_Endpoint_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of endpoint that is referred to by the current
// endpoint
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/type"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/config/type"
func (n *NetworkInstance_ConnectionPoint_EndpointPathAny) Type() *NetworkInstance_ConnectionPoint_Endpoint_TypePathAny {
	return &NetworkInstance_ConnectionPoint_Endpoint_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Vxlan (container): Configuration and operational state parameters
// relating to a VXLAN tunnel end-point interface
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "vxlan"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/vxlan"
func (n *NetworkInstance_ConnectionPoint_EndpointPath) Vxlan() *NetworkInstance_ConnectionPoint_Endpoint_VxlanPath {
	return &NetworkInstance_ConnectionPoint_Endpoint_VxlanPath{
		NodePath: ygot.NewNodePath(
			[]string{"vxlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// Vxlan (container): Configuration and operational state parameters
// relating to a VXLAN tunnel end-point interface
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "vxlan"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/vxlan"
func (n *NetworkInstance_ConnectionPoint_EndpointPathAny) Vxlan() *NetworkInstance_ConnectionPoint_Endpoint_VxlanPathAny {
	return &NetworkInstance_ConnectionPoint_Endpoint_VxlanPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"vxlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_ConnectionPoint_Endpoint_LocalPath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_LocalPath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_LocalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_LocalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Local_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/interface YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Local_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Local_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/interface YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Local_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Local_SiteIdPath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/site-id YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Local_SiteIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Local_SiteIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/site-id YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Local_SiteIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Local_SiteLabelBlockOffsetPath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/site-label-block-offset YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Local_SiteLabelBlockOffsetPath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Local_SiteLabelBlockOffsetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/site-label-block-offset YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Local_SiteLabelBlockOffsetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Local_SiteLabelBlockSizePath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/site-label-block-size YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Local_SiteLabelBlockSizePath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Local_SiteLabelBlockSizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/site-label-block-size YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Local_SiteLabelBlockSizePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Local_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/subinterface YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Local_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Local_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/subinterface YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Local_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/interface"
func (n *NetworkInstance_ConnectionPoint_Endpoint_LocalPath) Interface() *NetworkInstance_ConnectionPoint_Endpoint_Local_InterfacePath {
	return &NetworkInstance_ConnectionPoint_Endpoint_Local_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/interface"
func (n *NetworkInstance_ConnectionPoint_Endpoint_LocalPathAny) Interface() *NetworkInstance_ConnectionPoint_Endpoint_Local_InterfacePathAny {
	return &NetworkInstance_ConnectionPoint_Endpoint_Local_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// SiteId (leaf): The VE ID as defined in RFC4761 (VPLS) or CE ID as defined in
// RFC6624 (l2vpn) to uniquely identify this endpoint (site) as part
// of the BGP discovery of remote endpoints for layer 2 services.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/site-id"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/site-id"
func (n *NetworkInstance_ConnectionPoint_Endpoint_LocalPath) SiteId() *NetworkInstance_ConnectionPoint_Endpoint_Local_SiteIdPath {
	return &NetworkInstance_ConnectionPoint_Endpoint_Local_SiteIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "site-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SiteId (leaf): The VE ID as defined in RFC4761 (VPLS) or CE ID as defined in
// RFC6624 (l2vpn) to uniquely identify this endpoint (site) as part
// of the BGP discovery of remote endpoints for layer 2 services.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/site-id"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/site-id"
func (n *NetworkInstance_ConnectionPoint_Endpoint_LocalPathAny) SiteId() *NetworkInstance_ConnectionPoint_Endpoint_Local_SiteIdPathAny {
	return &NetworkInstance_ConnectionPoint_Endpoint_Local_SiteIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "site-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SiteLabelBlockOffset (leaf): The VPLS label block offset that is signaled with the 'site-id'.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/site-label-block-offset"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/site-label-block-offset"
func (n *NetworkInstance_ConnectionPoint_Endpoint_LocalPath) SiteLabelBlockOffset() *NetworkInstance_ConnectionPoint_Endpoint_Local_SiteLabelBlockOffsetPath {
	return &NetworkInstance_ConnectionPoint_Endpoint_Local_SiteLabelBlockOffsetPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "site-label-block-offset"},
			map[string]interface{}{},
			n,
		),
	}
}

// SiteLabelBlockOffset (leaf): The VPLS label block offset that is signaled with the 'site-id'.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/site-label-block-offset"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/site-label-block-offset"
func (n *NetworkInstance_ConnectionPoint_Endpoint_LocalPathAny) SiteLabelBlockOffset() *NetworkInstance_ConnectionPoint_Endpoint_Local_SiteLabelBlockOffsetPathAny {
	return &NetworkInstance_ConnectionPoint_Endpoint_Local_SiteLabelBlockOffsetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "site-label-block-offset"},
			map[string]interface{}{},
			n,
		),
	}
}

// SiteLabelBlockSize (leaf): The VPLS label block size that is signaled with the 'site-id'.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/site-label-block-size"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/site-label-block-size"
func (n *NetworkInstance_ConnectionPoint_Endpoint_LocalPath) SiteLabelBlockSize() *NetworkInstance_ConnectionPoint_Endpoint_Local_SiteLabelBlockSizePath {
	return &NetworkInstance_ConnectionPoint_Endpoint_Local_SiteLabelBlockSizePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "site-label-block-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// SiteLabelBlockSize (leaf): The VPLS label block size that is signaled with the 'site-id'.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/site-label-block-size"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/site-label-block-size"
func (n *NetworkInstance_ConnectionPoint_Endpoint_LocalPathAny) SiteLabelBlockSize() *NetworkInstance_ConnectionPoint_Endpoint_Local_SiteLabelBlockSizePathAny {
	return &NetworkInstance_ConnectionPoint_Endpoint_Local_SiteLabelBlockSizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "site-label-block-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/subinterface"
func (n *NetworkInstance_ConnectionPoint_Endpoint_LocalPath) Subinterface() *NetworkInstance_ConnectionPoint_Endpoint_Local_SubinterfacePath {
	return &NetworkInstance_ConnectionPoint_Endpoint_Local_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/local/config/subinterface"
func (n *NetworkInstance_ConnectionPoint_Endpoint_LocalPathAny) Subinterface() *NetworkInstance_ConnectionPoint_Endpoint_Local_SubinterfacePathAny {
	return &NetworkInstance_ConnectionPoint_Endpoint_Local_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_ConnectionPoint_Endpoint_RemotePath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/remote YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_RemotePath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_RemotePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/remote YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_RemotePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Remote_RemoteSystemPath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/remote/config/remote-system YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Remote_RemoteSystemPath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Remote_RemoteSystemPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/remote/config/remote-system YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Remote_RemoteSystemPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Remote_SiteIdPath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/remote/config/site-id YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Remote_SiteIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Remote_SiteIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/remote/config/site-id YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Remote_SiteIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Remote_VirtualCircuitIdentifierPath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/remote/config/virtual-circuit-identifier YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Remote_VirtualCircuitIdentifierPath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Remote_VirtualCircuitIdentifierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/remote/config/virtual-circuit-identifier YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Remote_VirtualCircuitIdentifierPathAny struct {
	*ygot.NodePath
}

// RemoteSystem (leaf): The IP address of the device which hosts the
// remote end-point
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/remote-system"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/remote/config/remote-system"
func (n *NetworkInstance_ConnectionPoint_Endpoint_RemotePath) RemoteSystem() *NetworkInstance_ConnectionPoint_Endpoint_Remote_RemoteSystemPath {
	return &NetworkInstance_ConnectionPoint_Endpoint_Remote_RemoteSystemPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "remote-system"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteSystem (leaf): The IP address of the device which hosts the
// remote end-point
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/remote-system"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/remote/config/remote-system"
func (n *NetworkInstance_ConnectionPoint_Endpoint_RemotePathAny) RemoteSystem() *NetworkInstance_ConnectionPoint_Endpoint_Remote_RemoteSystemPathAny {
	return &NetworkInstance_ConnectionPoint_Endpoint_Remote_RemoteSystemPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "remote-system"},
			map[string]interface{}{},
			n,
		),
	}
}

// SiteId (leaf): Identifies remote sites. When BGP discovery is used this
// is the customer edge identifier
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/site-id"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/remote/config/site-id"
func (n *NetworkInstance_ConnectionPoint_Endpoint_RemotePath) SiteId() *NetworkInstance_ConnectionPoint_Endpoint_Remote_SiteIdPath {
	return &NetworkInstance_ConnectionPoint_Endpoint_Remote_SiteIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "site-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SiteId (leaf): Identifies remote sites. When BGP discovery is used this
// is the customer edge identifier
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/site-id"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/remote/config/site-id"
func (n *NetworkInstance_ConnectionPoint_Endpoint_RemotePathAny) SiteId() *NetworkInstance_ConnectionPoint_Endpoint_Remote_SiteIdPathAny {
	return &NetworkInstance_ConnectionPoint_Endpoint_Remote_SiteIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "site-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// VirtualCircuitIdentifier (leaf): The virtual-circuit identifier that identifies the
// connection at the remote end-point
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/virtual-circuit-identifier"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/remote/config/virtual-circuit-identifier"
func (n *NetworkInstance_ConnectionPoint_Endpoint_RemotePath) VirtualCircuitIdentifier() *NetworkInstance_ConnectionPoint_Endpoint_Remote_VirtualCircuitIdentifierPath {
	return &NetworkInstance_ConnectionPoint_Endpoint_Remote_VirtualCircuitIdentifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "virtual-circuit-identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// VirtualCircuitIdentifier (leaf): The virtual-circuit identifier that identifies the
// connection at the remote end-point
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/virtual-circuit-identifier"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/remote/config/virtual-circuit-identifier"
func (n *NetworkInstance_ConnectionPoint_Endpoint_RemotePathAny) VirtualCircuitIdentifier() *NetworkInstance_ConnectionPoint_Endpoint_Remote_VirtualCircuitIdentifierPathAny {
	return &NetworkInstance_ConnectionPoint_Endpoint_Remote_VirtualCircuitIdentifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "virtual-circuit-identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_ConnectionPoint_Endpoint_VxlanPath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/vxlan YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_VxlanPath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_VxlanPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/vxlan YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_VxlanPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Vxlan_DescriptionPath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/vxlan/config/description YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Vxlan_DescriptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Vxlan_DescriptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/vxlan/config/description YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Vxlan_DescriptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Vxlan_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/vxlan/config/enabled YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Vxlan_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Vxlan_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/vxlan/config/enabled YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Vxlan_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Vxlan_SourceInterfacePath represents the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/vxlan/config/source-interface YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Vxlan_SourceInterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_ConnectionPoint_Endpoint_Vxlan_SourceInterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/vxlan/config/source-interface YANG schema element.
type NetworkInstance_ConnectionPoint_Endpoint_Vxlan_SourceInterfacePathAny struct {
	*ygot.NodePath
}

// Description (leaf): Description to identify the VXLAN tunnel endpoint It
// is a unique name identifying the overlay endpoint
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/vxlan/config/description"
func (n *NetworkInstance_ConnectionPoint_Endpoint_VxlanPath) Description() *NetworkInstance_ConnectionPoint_Endpoint_Vxlan_DescriptionPath {
	return &NetworkInstance_ConnectionPoint_Endpoint_Vxlan_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): Description to identify the VXLAN tunnel endpoint It
// is a unique name identifying the overlay endpoint
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/vxlan/config/description"
func (n *NetworkInstance_ConnectionPoint_Endpoint_VxlanPathAny) Description() *NetworkInstance_ConnectionPoint_Endpoint_Vxlan_DescriptionPathAny {
	return &NetworkInstance_ConnectionPoint_Endpoint_Vxlan_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): VXLAN tunnel endpoint administrative state.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/vxlan/config/enabled"
func (n *NetworkInstance_ConnectionPoint_Endpoint_VxlanPath) Enabled() *NetworkInstance_ConnectionPoint_Endpoint_Vxlan_EnabledPath {
	return &NetworkInstance_ConnectionPoint_Endpoint_Vxlan_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): VXLAN tunnel endpoint administrative state.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/vxlan/config/enabled"
func (n *NetworkInstance_ConnectionPoint_Endpoint_VxlanPathAny) Enabled() *NetworkInstance_ConnectionPoint_Endpoint_Vxlan_EnabledPathAny {
	return &NetworkInstance_ConnectionPoint_Endpoint_Vxlan_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceInterface (leaf): Source loopback interface name
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source-interface"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/vxlan/config/source-interface"
func (n *NetworkInstance_ConnectionPoint_Endpoint_VxlanPath) SourceInterface() *NetworkInstance_ConnectionPoint_Endpoint_Vxlan_SourceInterfacePath {
	return &NetworkInstance_ConnectionPoint_Endpoint_Vxlan_SourceInterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source-interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceInterface (leaf): Source loopback interface name
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source-interface"
// Path from root: "/network-instances/network-instance/connection-points/connection-point/endpoints/endpoint/vxlan/config/source-interface"
func (n *NetworkInstance_ConnectionPoint_Endpoint_VxlanPathAny) SourceInterface() *NetworkInstance_ConnectionPoint_Endpoint_Vxlan_SourceInterfacePathAny {
	return &NetworkInstance_ConnectionPoint_Endpoint_Vxlan_SourceInterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source-interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_EncapsulationPath represents the /openconfig-network-instance/network-instances/network-instance/encapsulation YANG schema element.
type NetworkInstance_EncapsulationPath struct {
	*ygot.NodePath
}

// NetworkInstance_EncapsulationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/encapsulation YANG schema element.
type NetworkInstance_EncapsulationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Encapsulation_ControlWordPath represents the /openconfig-network-instance/network-instances/network-instance/encapsulation/config/control-word YANG schema element.
type NetworkInstance_Encapsulation_ControlWordPath struct {
	*ygot.NodePath
}

// NetworkInstance_Encapsulation_ControlWordPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/encapsulation/config/control-word YANG schema element.
type NetworkInstance_Encapsulation_ControlWordPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Encapsulation_EncapsulationTypePath represents the /openconfig-network-instance/network-instances/network-instance/encapsulation/config/encapsulation-type YANG schema element.
type NetworkInstance_Encapsulation_EncapsulationTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Encapsulation_EncapsulationTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/encapsulation/config/encapsulation-type YANG schema element.
type NetworkInstance_Encapsulation_EncapsulationTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Encapsulation_LabelAllocationModePath represents the /openconfig-network-instance/network-instances/network-instance/encapsulation/config/label-allocation-mode YANG schema element.
type NetworkInstance_Encapsulation_LabelAllocationModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Encapsulation_LabelAllocationModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/encapsulation/config/label-allocation-mode YANG schema element.
type NetworkInstance_Encapsulation_LabelAllocationModePathAny struct {
	*ygot.NodePath
}

// ControlWord (leaf): Whether the control-word should be used for the network
// instance
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/control-word"
// Path from root: "/network-instances/network-instance/encapsulation/config/control-word"
func (n *NetworkInstance_EncapsulationPath) ControlWord() *NetworkInstance_Encapsulation_ControlWordPath {
	return &NetworkInstance_Encapsulation_ControlWordPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "control-word"},
			map[string]interface{}{},
			n,
		),
	}
}

// ControlWord (leaf): Whether the control-word should be used for the network
// instance
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/control-word"
// Path from root: "/network-instances/network-instance/encapsulation/config/control-word"
func (n *NetworkInstance_EncapsulationPathAny) ControlWord() *NetworkInstance_Encapsulation_ControlWordPathAny {
	return &NetworkInstance_Encapsulation_ControlWordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "control-word"},
			map[string]interface{}{},
			n,
		),
	}
}

// EncapsulationType (leaf): The on-the-wire encapsulation that should be used when
// sending traffic from this network instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/encapsulation-type"
// Path from root: "/network-instances/network-instance/encapsulation/config/encapsulation-type"
func (n *NetworkInstance_EncapsulationPath) EncapsulationType() *NetworkInstance_Encapsulation_EncapsulationTypePath {
	return &NetworkInstance_Encapsulation_EncapsulationTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "encapsulation-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// EncapsulationType (leaf): The on-the-wire encapsulation that should be used when
// sending traffic from this network instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/encapsulation-type"
// Path from root: "/network-instances/network-instance/encapsulation/config/encapsulation-type"
func (n *NetworkInstance_EncapsulationPathAny) EncapsulationType() *NetworkInstance_Encapsulation_EncapsulationTypePathAny {
	return &NetworkInstance_Encapsulation_EncapsulationTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "encapsulation-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LabelAllocationMode (leaf): The label allocation mode to be used for L3 entries
// in the network instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/label-allocation-mode"
// Path from root: "/network-instances/network-instance/encapsulation/config/label-allocation-mode"
func (n *NetworkInstance_EncapsulationPath) LabelAllocationMode() *NetworkInstance_Encapsulation_LabelAllocationModePath {
	return &NetworkInstance_Encapsulation_LabelAllocationModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "label-allocation-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// LabelAllocationMode (leaf): The label allocation mode to be used for L3 entries
// in the network instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/label-allocation-mode"
// Path from root: "/network-instances/network-instance/encapsulation/config/label-allocation-mode"
func (n *NetworkInstance_EncapsulationPathAny) LabelAllocationMode() *NetworkInstance_Encapsulation_LabelAllocationModePathAny {
	return &NetworkInstance_Encapsulation_LabelAllocationModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "label-allocation-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_EvpnPath represents the /openconfig-network-instance/network-instances/network-instance/evpn YANG schema element.
type NetworkInstance_EvpnPath struct {
	*ygot.NodePath
}

// NetworkInstance_EvpnPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn YANG schema element.
type NetworkInstance_EvpnPathAny struct {
	*ygot.NodePath
}

// EthernetSegmentAny (list): List of Ethernet Segments.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ethernet-segments/ethernet-segment"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment"
// Name (wildcarded): string
func (n *NetworkInstance_EvpnPath) EthernetSegmentAny() *NetworkInstance_Evpn_EthernetSegmentPathAny {
	return &NetworkInstance_Evpn_EthernetSegmentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ethernet-segments", "ethernet-segment"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// EthernetSegmentAny (list): List of Ethernet Segments.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ethernet-segments/ethernet-segment"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment"
// Name (wildcarded): string
func (n *NetworkInstance_EvpnPathAny) EthernetSegmentAny() *NetworkInstance_Evpn_EthernetSegmentPathAny {
	return &NetworkInstance_Evpn_EthernetSegmentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ethernet-segments", "ethernet-segment"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// EthernetSegment (list): List of Ethernet Segments.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ethernet-segments/ethernet-segment"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment"
// Name: string
func (n *NetworkInstance_EvpnPath) EthernetSegment(Name string) *NetworkInstance_Evpn_EthernetSegmentPath {
	return &NetworkInstance_Evpn_EthernetSegmentPath{
		NodePath: ygot.NewNodePath(
			[]string{"ethernet-segments", "ethernet-segment"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// EthernetSegment (list): List of Ethernet Segments.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ethernet-segments/ethernet-segment"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment"
// Name: string
func (n *NetworkInstance_EvpnPathAny) EthernetSegment(Name string) *NetworkInstance_Evpn_EthernetSegmentPathAny {
	return &NetworkInstance_Evpn_EthernetSegmentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ethernet-segments", "ethernet-segment"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// EvpnInstanceAny (list): An EVPN instance (EVI) comprises Customer Edge devices
// (CEs) that are connected to Provider Edge devices (PEs). One
// network instance (representing a single MAC VRF) can
// participate in one or more EVPN Instances. For each EVPN instance
// in which the forwarding instance participates an
// EVPN instance needs to be created.
//
// The model supports BGP MPLS-Based Ethernet VPNs
// (RFC 7432) and  Network Virtualization Overlay Solution
// Using Ethernet VPN (RFC 8365). The use of MPLS or VXLAN
// is selected via the encapsulation container within
// EVPN instance. One use case requiring participating in
// two EVIs is the Interconnect Solution for EVPN Overlay
// networks (see draft-ietf-bess-dci-evpn-overlay-10)
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "evpn-instances/evpn-instance"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance"
// Evi (wildcarded): string
func (n *NetworkInstance_EvpnPath) EvpnInstanceAny() *NetworkInstance_Evpn_EvpnInstancePathAny {
	return &NetworkInstance_Evpn_EvpnInstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"evpn-instances", "evpn-instance"},
			map[string]interface{}{"evi": "*"},
			n,
		),
	}
}

// EvpnInstanceAny (list): An EVPN instance (EVI) comprises Customer Edge devices
// (CEs) that are connected to Provider Edge devices (PEs). One
// network instance (representing a single MAC VRF) can
// participate in one or more EVPN Instances. For each EVPN instance
// in which the forwarding instance participates an
// EVPN instance needs to be created.
//
// The model supports BGP MPLS-Based Ethernet VPNs
// (RFC 7432) and  Network Virtualization Overlay Solution
// Using Ethernet VPN (RFC 8365). The use of MPLS or VXLAN
// is selected via the encapsulation container within
// EVPN instance. One use case requiring participating in
// two EVIs is the Interconnect Solution for EVPN Overlay
// networks (see draft-ietf-bess-dci-evpn-overlay-10)
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "evpn-instances/evpn-instance"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance"
// Evi (wildcarded): string
func (n *NetworkInstance_EvpnPathAny) EvpnInstanceAny() *NetworkInstance_Evpn_EvpnInstancePathAny {
	return &NetworkInstance_Evpn_EvpnInstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"evpn-instances", "evpn-instance"},
			map[string]interface{}{"evi": "*"},
			n,
		),
	}
}

// EvpnInstance (list): An EVPN instance (EVI) comprises Customer Edge devices
// (CEs) that are connected to Provider Edge devices (PEs). One
// network instance (representing a single MAC VRF) can
// participate in one or more EVPN Instances. For each EVPN instance
// in which the forwarding instance participates an
// EVPN instance needs to be created.
//
// The model supports BGP MPLS-Based Ethernet VPNs
// (RFC 7432) and  Network Virtualization Overlay Solution
// Using Ethernet VPN (RFC 8365). The use of MPLS or VXLAN
// is selected via the encapsulation container within
// EVPN instance. One use case requiring participating in
// two EVIs is the Interconnect Solution for EVPN Overlay
// networks (see draft-ietf-bess-dci-evpn-overlay-10)
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "evpn-instances/evpn-instance"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance"
// Evi: string
func (n *NetworkInstance_EvpnPath) EvpnInstance(Evi string) *NetworkInstance_Evpn_EvpnInstancePath {
	return &NetworkInstance_Evpn_EvpnInstancePath{
		NodePath: ygot.NewNodePath(
			[]string{"evpn-instances", "evpn-instance"},
			map[string]interface{}{"evi": Evi},
			n,
		),
	}
}

// EvpnInstance (list): An EVPN instance (EVI) comprises Customer Edge devices
// (CEs) that are connected to Provider Edge devices (PEs). One
// network instance (representing a single MAC VRF) can
// participate in one or more EVPN Instances. For each EVPN instance
// in which the forwarding instance participates an
// EVPN instance needs to be created.
//
// The model supports BGP MPLS-Based Ethernet VPNs
// (RFC 7432) and  Network Virtualization Overlay Solution
// Using Ethernet VPN (RFC 8365). The use of MPLS or VXLAN
// is selected via the encapsulation container within
// EVPN instance. One use case requiring participating in
// two EVIs is the Interconnect Solution for EVPN Overlay
// networks (see draft-ietf-bess-dci-evpn-overlay-10)
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "evpn-instances/evpn-instance"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance"
// Evi: string
func (n *NetworkInstance_EvpnPathAny) EvpnInstance(Evi string) *NetworkInstance_Evpn_EvpnInstancePathAny {
	return &NetworkInstance_Evpn_EvpnInstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"evpn-instances", "evpn-instance"},
			map[string]interface{}{"evi": Evi},
			n,
		),
	}
}

// NetworkInstance_Evpn_EthernetSegmentPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment YANG schema element.
type NetworkInstance_Evpn_EthernetSegmentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegmentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment YANG schema element.
type NetworkInstance_Evpn_EthernetSegmentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_EsiPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/esi YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_EsiPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_EsiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/esi YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_EsiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_EsiTypePath represents the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/esi-type YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_EsiTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_EsiTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/esi-type YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_EsiTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/interface YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/interface YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_NamePath represents the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/name YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/name YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_NamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_RedundancyModePath represents the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/redundancy-mode YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_RedundancyModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_RedundancyModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/redundancy-mode YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_RedundancyModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/subinterface YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/subinterface YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_SubinterfacePathAny struct {
	*ygot.NodePath
}

// DfElection (container): Top container for the configuration and state parameters
// for the Designated forwarding Election
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "df-election"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election"
func (n *NetworkInstance_Evpn_EthernetSegmentPath) DfElection() *NetworkInstance_Evpn_EthernetSegment_DfElectionPath {
	return &NetworkInstance_Evpn_EthernetSegment_DfElectionPath{
		NodePath: ygot.NewNodePath(
			[]string{"df-election"},
			map[string]interface{}{},
			n,
		),
	}
}

// DfElection (container): Top container for the configuration and state parameters
// for the Designated forwarding Election
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "df-election"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election"
func (n *NetworkInstance_Evpn_EthernetSegmentPathAny) DfElection() *NetworkInstance_Evpn_EthernetSegment_DfElectionPathAny {
	return &NetworkInstance_Evpn_EthernetSegment_DfElectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"df-election"},
			map[string]interface{}{},
			n,
		),
	}
}

// Esi (leaf): Ethernet Segment Identifier (ESI) value.
// For ESI Type 0: The esi leaf value is directly configured by the operator.
// For ESI Type 1: The AUTO enum must be used.
// For ESI Type 2: The AUTO enum must be used.
// For ESI Type 3: The directly configured or AUTO enum must be used.
// For ESI Type 4: The directly configured or AUTO enum must be used.
// For ESI Type 5: The directly configured or AUTO enum must be used.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/esi"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/esi"
func (n *NetworkInstance_Evpn_EthernetSegmentPath) Esi() *NetworkInstance_Evpn_EthernetSegment_EsiPath {
	return &NetworkInstance_Evpn_EthernetSegment_EsiPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "esi"},
			map[string]interface{}{},
			n,
		),
	}
}

// Esi (leaf): Ethernet Segment Identifier (ESI) value.
// For ESI Type 0: The esi leaf value is directly configured by the operator.
// For ESI Type 1: The AUTO enum must be used.
// For ESI Type 2: The AUTO enum must be used.
// For ESI Type 3: The directly configured or AUTO enum must be used.
// For ESI Type 4: The directly configured or AUTO enum must be used.
// For ESI Type 5: The directly configured or AUTO enum must be used.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/esi"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/esi"
func (n *NetworkInstance_Evpn_EthernetSegmentPathAny) Esi() *NetworkInstance_Evpn_EthernetSegment_EsiPathAny {
	return &NetworkInstance_Evpn_EthernetSegment_EsiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "esi"},
			map[string]interface{}{},
			n,
		),
	}
}

// EsiType (leaf): ESI Type is a 1-octet field (most significant octet) that
// specifies the format of the remaining 9 octets (ESI Value).
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/esi-type"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/esi-type"
func (n *NetworkInstance_Evpn_EthernetSegmentPath) EsiType() *NetworkInstance_Evpn_EthernetSegment_EsiTypePath {
	return &NetworkInstance_Evpn_EthernetSegment_EsiTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "esi-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// EsiType (leaf): ESI Type is a 1-octet field (most significant octet) that
// specifies the format of the remaining 9 octets (ESI Value).
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/esi-type"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/esi-type"
func (n *NetworkInstance_Evpn_EthernetSegmentPathAny) EsiType() *NetworkInstance_Evpn_EthernetSegment_EsiTypePathAny {
	return &NetworkInstance_Evpn_EthernetSegment_EsiTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "esi-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/interface"
func (n *NetworkInstance_Evpn_EthernetSegmentPath) Interface() *NetworkInstance_Evpn_EthernetSegment_InterfacePath {
	return &NetworkInstance_Evpn_EthernetSegment_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/interface"
func (n *NetworkInstance_Evpn_EthernetSegmentPathAny) Interface() *NetworkInstance_Evpn_EthernetSegment_InterfacePathAny {
	return &NetworkInstance_Evpn_EthernetSegment_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Ethernet Segment name
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/name"
func (n *NetworkInstance_Evpn_EthernetSegmentPath) Name() *NetworkInstance_Evpn_EthernetSegment_NamePath {
	return &NetworkInstance_Evpn_EthernetSegment_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Ethernet Segment name
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/name"
func (n *NetworkInstance_Evpn_EthernetSegmentPathAny) Name() *NetworkInstance_Evpn_EthernetSegment_NamePathAny {
	return &NetworkInstance_Evpn_EthernetSegment_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// RedundancyMode (leaf): Multihoming options for load balancing of
// traffic in the Ethernet Segment.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/redundancy-mode"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/redundancy-mode"
func (n *NetworkInstance_Evpn_EthernetSegmentPath) RedundancyMode() *NetworkInstance_Evpn_EthernetSegment_RedundancyModePath {
	return &NetworkInstance_Evpn_EthernetSegment_RedundancyModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "redundancy-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// RedundancyMode (leaf): Multihoming options for load balancing of
// traffic in the Ethernet Segment.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/redundancy-mode"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/redundancy-mode"
func (n *NetworkInstance_Evpn_EthernetSegmentPathAny) RedundancyMode() *NetworkInstance_Evpn_EthernetSegment_RedundancyModePathAny {
	return &NetworkInstance_Evpn_EthernetSegment_RedundancyModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "redundancy-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/subinterface"
func (n *NetworkInstance_Evpn_EthernetSegmentPath) Subinterface() *NetworkInstance_Evpn_EthernetSegment_SubinterfacePath {
	return &NetworkInstance_Evpn_EthernetSegment_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/config/subinterface"
func (n *NetworkInstance_Evpn_EthernetSegmentPathAny) Subinterface() *NetworkInstance_Evpn_EthernetSegment_SubinterfacePathAny {
	return &NetworkInstance_Evpn_EthernetSegment_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Evpn_EthernetSegment_DfElectionPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_DfElectionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_DfElectionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_DfElectionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_DfElection_DfElectionMethodPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election/config/df-election-method YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_DfElection_DfElectionMethodPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_DfElection_DfElectionMethodPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election/config/df-election-method YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_DfElection_DfElectionMethodPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_DfElection_ElectionWaitTimePath represents the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election/config/election-wait-time YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_DfElection_ElectionWaitTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_DfElection_ElectionWaitTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election/config/election-wait-time YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_DfElection_ElectionWaitTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_DfElection_PreferencePath represents the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election/config/preference YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_DfElection_PreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_DfElection_PreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election/config/preference YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_DfElection_PreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_DfElection_RevertivePath represents the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election/config/revertive YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_DfElection_RevertivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EthernetSegment_DfElection_RevertivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election/config/revertive YANG schema element.
type NetworkInstance_Evpn_EthernetSegment_DfElection_RevertivePathAny struct {
	*ygot.NodePath
}

// DfElectionMethod (leaf): Select the Designated Forwarder Election (DF) election method
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/df-election-method"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election/config/df-election-method"
func (n *NetworkInstance_Evpn_EthernetSegment_DfElectionPath) DfElectionMethod() *NetworkInstance_Evpn_EthernetSegment_DfElection_DfElectionMethodPath {
	return &NetworkInstance_Evpn_EthernetSegment_DfElection_DfElectionMethodPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "df-election-method"},
			map[string]interface{}{},
			n,
		),
	}
}

// DfElectionMethod (leaf): Select the Designated Forwarder Election (DF) election method
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/df-election-method"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election/config/df-election-method"
func (n *NetworkInstance_Evpn_EthernetSegment_DfElectionPathAny) DfElectionMethod() *NetworkInstance_Evpn_EthernetSegment_DfElection_DfElectionMethodPathAny {
	return &NetworkInstance_Evpn_EthernetSegment_DfElection_DfElectionMethodPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "df-election-method"},
			map[string]interface{}{},
			n,
		),
	}
}

// ElectionWaitTime (leaf): Designated Forwarder Election wait-time. When the DF timer expires,
// the PE device selects the DF based on the highest preference value
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/election-wait-time"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election/config/election-wait-time"
func (n *NetworkInstance_Evpn_EthernetSegment_DfElectionPath) ElectionWaitTime() *NetworkInstance_Evpn_EthernetSegment_DfElection_ElectionWaitTimePath {
	return &NetworkInstance_Evpn_EthernetSegment_DfElection_ElectionWaitTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "election-wait-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// ElectionWaitTime (leaf): Designated Forwarder Election wait-time. When the DF timer expires,
// the PE device selects the DF based on the highest preference value
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/election-wait-time"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election/config/election-wait-time"
func (n *NetworkInstance_Evpn_EthernetSegment_DfElectionPathAny) ElectionWaitTime() *NetworkInstance_Evpn_EthernetSegment_DfElection_ElectionWaitTimePathAny {
	return &NetworkInstance_Evpn_EthernetSegment_DfElection_ElectionWaitTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "election-wait-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Defines a 2-octet value that indicates the PE
// preference to become the DF in the Ethernet-Segment.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/preference"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election/config/preference"
func (n *NetworkInstance_Evpn_EthernetSegment_DfElectionPath) Preference() *NetworkInstance_Evpn_EthernetSegment_DfElection_PreferencePath {
	return &NetworkInstance_Evpn_EthernetSegment_DfElection_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Defines a 2-octet value that indicates the PE
// preference to become the DF in the Ethernet-Segment.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/preference"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election/config/preference"
func (n *NetworkInstance_Evpn_EthernetSegment_DfElectionPathAny) Preference() *NetworkInstance_Evpn_EthernetSegment_DfElection_PreferencePathAny {
	return &NetworkInstance_Evpn_EthernetSegment_DfElection_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Revertive (leaf): The 'preempt' or 'revertive' behavior. This option will allow a
// non-revertive behavior in the DF election.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/revertive"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election/config/revertive"
func (n *NetworkInstance_Evpn_EthernetSegment_DfElectionPath) Revertive() *NetworkInstance_Evpn_EthernetSegment_DfElection_RevertivePath {
	return &NetworkInstance_Evpn_EthernetSegment_DfElection_RevertivePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "revertive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Revertive (leaf): The 'preempt' or 'revertive' behavior. This option will allow a
// non-revertive behavior in the DF election.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/revertive"
// Path from root: "/network-instances/network-instance/evpn/ethernet-segments/ethernet-segment/df-election/config/revertive"
func (n *NetworkInstance_Evpn_EthernetSegment_DfElectionPathAny) Revertive() *NetworkInstance_Evpn_EthernetSegment_DfElection_RevertivePathAny {
	return &NetworkInstance_Evpn_EthernetSegment_DfElection_RevertivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "revertive"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Evpn_EvpnInstancePath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance YANG schema element.
type NetworkInstance_Evpn_EvpnInstancePath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance YANG schema element.
type NetworkInstance_Evpn_EvpnInstancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_EncapsulationTypePath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/encapsulation-type YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_EncapsulationTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_EncapsulationTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/encapsulation-type YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_EncapsulationTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_EviPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/evi YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_EviPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_EviPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/evi YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_EviPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_MulticastGroupPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/multicast-group YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_MulticastGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_MulticastGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/multicast-group YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_MulticastGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_MulticastMaskPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/multicast-mask YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_MulticastMaskPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_MulticastMaskPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/multicast-mask YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_MulticastMaskPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_ReplicationModePath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/replication-mode YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_ReplicationModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_ReplicationModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/replication-mode YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_ReplicationModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_RouteDistinguisherPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/route-distinguisher YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_RouteDistinguisherPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_RouteDistinguisherPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/route-distinguisher YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_RouteDistinguisherPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_ServiceTypePath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/service-type YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_ServiceTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_ServiceTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/service-type YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_ServiceTypePathAny struct {
	*ygot.NodePath
}

// BComponentAny (list): List of B-components. The b-component learns and forwards
// traffic on the backbone in order to reduce the number of
// BGP MAC Advertisement routes by aggregating Customer/Client
// MAC (C-MAC) addresses via Provider Backbone MAC (B-MAC) address.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "pbb/b-component"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component"
// BComponentName (wildcarded): string
func (n *NetworkInstance_Evpn_EvpnInstancePath) BComponentAny() *NetworkInstance_Evpn_EvpnInstance_BComponentPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_BComponentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"pbb", "b-component"},
			map[string]interface{}{"b-component-name": "*"},
			n,
		),
	}
}

// BComponentAny (list): List of B-components. The b-component learns and forwards
// traffic on the backbone in order to reduce the number of
// BGP MAC Advertisement routes by aggregating Customer/Client
// MAC (C-MAC) addresses via Provider Backbone MAC (B-MAC) address.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "pbb/b-component"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component"
// BComponentName (wildcarded): string
func (n *NetworkInstance_Evpn_EvpnInstancePathAny) BComponentAny() *NetworkInstance_Evpn_EvpnInstance_BComponentPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_BComponentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"pbb", "b-component"},
			map[string]interface{}{"b-component-name": "*"},
			n,
		),
	}
}

// BComponent (list): List of B-components. The b-component learns and forwards
// traffic on the backbone in order to reduce the number of
// BGP MAC Advertisement routes by aggregating Customer/Client
// MAC (C-MAC) addresses via Provider Backbone MAC (B-MAC) address.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "pbb/b-component"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component"
// BComponentName: string
func (n *NetworkInstance_Evpn_EvpnInstancePath) BComponent(BComponentName string) *NetworkInstance_Evpn_EvpnInstance_BComponentPath {
	return &NetworkInstance_Evpn_EvpnInstance_BComponentPath{
		NodePath: ygot.NewNodePath(
			[]string{"pbb", "b-component"},
			map[string]interface{}{"b-component-name": BComponentName},
			n,
		),
	}
}

// BComponent (list): List of B-components. The b-component learns and forwards
// traffic on the backbone in order to reduce the number of
// BGP MAC Advertisement routes by aggregating Customer/Client
// MAC (C-MAC) addresses via Provider Backbone MAC (B-MAC) address.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "pbb/b-component"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component"
// BComponentName: string
func (n *NetworkInstance_Evpn_EvpnInstancePathAny) BComponent(BComponentName string) *NetworkInstance_Evpn_EvpnInstance_BComponentPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_BComponentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"pbb", "b-component"},
			map[string]interface{}{"b-component-name": BComponentName},
			n,
		),
	}
}

// EncapsulationType (leaf): The on-the-wire encapsulation that should be used when
// exchanging traffic from this network instance to/from
// destinations belonging to the EVI. The use of MPLS or
// VXLAN is selected using this container.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/encapsulation-type"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/encapsulation-type"
func (n *NetworkInstance_Evpn_EvpnInstancePath) EncapsulationType() *NetworkInstance_Evpn_EvpnInstance_EncapsulationTypePath {
	return &NetworkInstance_Evpn_EvpnInstance_EncapsulationTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "encapsulation-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// EncapsulationType (leaf): The on-the-wire encapsulation that should be used when
// exchanging traffic from this network instance to/from
// destinations belonging to the EVI. The use of MPLS or
// VXLAN is selected using this container.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/encapsulation-type"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/encapsulation-type"
func (n *NetworkInstance_Evpn_EvpnInstancePathAny) EncapsulationType() *NetworkInstance_Evpn_EvpnInstance_EncapsulationTypePathAny {
	return &NetworkInstance_Evpn_EvpnInstance_EncapsulationTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "encapsulation-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Evi (leaf): EVPN Instance (EVI) identifier
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/evi"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/evi"
func (n *NetworkInstance_Evpn_EvpnInstancePath) Evi() *NetworkInstance_Evpn_EvpnInstance_EviPath {
	return &NetworkInstance_Evpn_EvpnInstance_EviPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "evi"},
			map[string]interface{}{},
			n,
		),
	}
}

// Evi (leaf): EVPN Instance (EVI) identifier
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/evi"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/evi"
func (n *NetworkInstance_Evpn_EvpnInstancePathAny) Evi() *NetworkInstance_Evpn_EvpnInstance_EviPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_EviPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "evi"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportExportPolicy (container): Top container to set the import and export policies
// associated with a EVI
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "import-export-policy"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/import-export-policy"
func (n *NetworkInstance_Evpn_EvpnInstancePath) ImportExportPolicy() *NetworkInstance_Evpn_EvpnInstance_ImportExportPolicyPath {
	return &NetworkInstance_Evpn_EvpnInstance_ImportExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"import-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportExportPolicy (container): Top container to set the import and export policies
// associated with a EVI
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "import-export-policy"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/import-export-policy"
func (n *NetworkInstance_Evpn_EvpnInstancePathAny) ImportExportPolicy() *NetworkInstance_Evpn_EvpnInstance_ImportExportPolicyPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_ImportExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"import-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastGroup (leaf): Multicast group address for BUM traffic
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multicast-group"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/multicast-group"
func (n *NetworkInstance_Evpn_EvpnInstancePath) MulticastGroup() *NetworkInstance_Evpn_EvpnInstance_MulticastGroupPath {
	return &NetworkInstance_Evpn_EvpnInstance_MulticastGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multicast-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastGroup (leaf): Multicast group address for BUM traffic
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multicast-group"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/multicast-group"
func (n *NetworkInstance_Evpn_EvpnInstancePathAny) MulticastGroup() *NetworkInstance_Evpn_EvpnInstance_MulticastGroupPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_MulticastGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multicast-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastMask (leaf): Multicast group address mask
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multicast-mask"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/multicast-mask"
func (n *NetworkInstance_Evpn_EvpnInstancePath) MulticastMask() *NetworkInstance_Evpn_EvpnInstance_MulticastMaskPath {
	return &NetworkInstance_Evpn_EvpnInstance_MulticastMaskPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multicast-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastMask (leaf): Multicast group address mask
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multicast-mask"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/multicast-mask"
func (n *NetworkInstance_Evpn_EvpnInstancePathAny) MulticastMask() *NetworkInstance_Evpn_EvpnInstance_MulticastMaskPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_MulticastMaskPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multicast-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReplicationMode (leaf): Replication mode to handle BUM traffic
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/replication-mode"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/replication-mode"
func (n *NetworkInstance_Evpn_EvpnInstancePath) ReplicationMode() *NetworkInstance_Evpn_EvpnInstance_ReplicationModePath {
	return &NetworkInstance_Evpn_EvpnInstance_ReplicationModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "replication-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReplicationMode (leaf): Replication mode to handle BUM traffic
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/replication-mode"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/replication-mode"
func (n *NetworkInstance_Evpn_EvpnInstancePathAny) ReplicationMode() *NetworkInstance_Evpn_EvpnInstance_ReplicationModePathAny {
	return &NetworkInstance_Evpn_EvpnInstance_ReplicationModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "replication-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteDistinguisher (leaf): Route Distinguisher (RD) associated to the EVPN-instance.
// An RD MUST be assigned for a given EVPN-instance on a PE.
// This RD MUST be unique across all EVPN-instances on a PE.
// The route-distinguisher at this level overrides
// the route-distinguisher value defined under
// network-instance/config.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-distinguisher"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/route-distinguisher"
func (n *NetworkInstance_Evpn_EvpnInstancePath) RouteDistinguisher() *NetworkInstance_Evpn_EvpnInstance_RouteDistinguisherPath {
	return &NetworkInstance_Evpn_EvpnInstance_RouteDistinguisherPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-distinguisher"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteDistinguisher (leaf): Route Distinguisher (RD) associated to the EVPN-instance.
// An RD MUST be assigned for a given EVPN-instance on a PE.
// This RD MUST be unique across all EVPN-instances on a PE.
// The route-distinguisher at this level overrides
// the route-distinguisher value defined under
// network-instance/config.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-distinguisher"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/route-distinguisher"
func (n *NetworkInstance_Evpn_EvpnInstancePathAny) RouteDistinguisher() *NetworkInstance_Evpn_EvpnInstance_RouteDistinguisherPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_RouteDistinguisherPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-distinguisher"},
			map[string]interface{}{},
			n,
		),
	}
}

// ServiceType (leaf): Specifies the type of EVPN that is being created according
// to the values in the EVPN_TYPES identity.
// The options are VLAN-based, VLAN-Bundle or VLAN-aware.
// VLAN-Based services consists of an EVPN instance of only a
// single broadcast domain, the proper network-instance type used
// for this kind of services is L2VSI.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/service-type"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/service-type"
func (n *NetworkInstance_Evpn_EvpnInstancePath) ServiceType() *NetworkInstance_Evpn_EvpnInstance_ServiceTypePath {
	return &NetworkInstance_Evpn_EvpnInstance_ServiceTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "service-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// ServiceType (leaf): Specifies the type of EVPN that is being created according
// to the values in the EVPN_TYPES identity.
// The options are VLAN-based, VLAN-Bundle or VLAN-aware.
// VLAN-Based services consists of an EVPN instance of only a
// single broadcast domain, the proper network-instance type used
// for this kind of services is L2VSI.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/service-type"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/config/service-type"
func (n *NetworkInstance_Evpn_EvpnInstancePathAny) ServiceType() *NetworkInstance_Evpn_EvpnInstance_ServiceTypePathAny {
	return &NetworkInstance_Evpn_EvpnInstance_ServiceTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "service-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Vxlan (container): Top container related to Overlay Solution in EVPN.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "vxlan"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan"
func (n *NetworkInstance_Evpn_EvpnInstancePath) Vxlan() *NetworkInstance_Evpn_EvpnInstance_VxlanPath {
	return &NetworkInstance_Evpn_EvpnInstance_VxlanPath{
		NodePath: ygot.NewNodePath(
			[]string{"vxlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// Vxlan (container): Top container related to Overlay Solution in EVPN.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "vxlan"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan"
func (n *NetworkInstance_Evpn_EvpnInstancePathAny) Vxlan() *NetworkInstance_Evpn_EvpnInstance_VxlanPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_VxlanPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"vxlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Evpn_EvpnInstance_BComponentPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_BComponentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_BComponentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_BComponentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_BComponent_BComponentNamePath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/config/b-component-name YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_BComponent_BComponentNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_BComponent_BComponentNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/config/b-component-name YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_BComponent_BComponentNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_BComponent_BackboneSrcMacPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/config/backbone-src-mac YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_BComponent_BackboneSrcMacPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_BComponent_BackboneSrcMacPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/config/backbone-src-mac YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_BComponent_BackboneSrcMacPathAny struct {
	*ygot.NodePath
}

// BComponentName (leaf): Type of the associated b-component
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/b-component-name"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/config/b-component-name"
func (n *NetworkInstance_Evpn_EvpnInstance_BComponentPath) BComponentName() *NetworkInstance_Evpn_EvpnInstance_BComponent_BComponentNamePath {
	return &NetworkInstance_Evpn_EvpnInstance_BComponent_BComponentNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "b-component-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// BComponentName (leaf): Type of the associated b-component
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/b-component-name"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/config/b-component-name"
func (n *NetworkInstance_Evpn_EvpnInstance_BComponentPathAny) BComponentName() *NetworkInstance_Evpn_EvpnInstance_BComponent_BComponentNamePathAny {
	return &NetworkInstance_Evpn_EvpnInstance_BComponent_BComponentNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "b-component-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// BackboneSrcMac (leaf): EVPN will run independently in both components,
// the I-component MAC-VRF and B-component MAC-VRF.
// The backbone-src-mac assigns the b-component MAC.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/backbone-src-mac"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/config/backbone-src-mac"
func (n *NetworkInstance_Evpn_EvpnInstance_BComponentPath) BackboneSrcMac() *NetworkInstance_Evpn_EvpnInstance_BComponent_BackboneSrcMacPath {
	return &NetworkInstance_Evpn_EvpnInstance_BComponent_BackboneSrcMacPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "backbone-src-mac"},
			map[string]interface{}{},
			n,
		),
	}
}

// BackboneSrcMac (leaf): EVPN will run independently in both components,
// the I-component MAC-VRF and B-component MAC-VRF.
// The backbone-src-mac assigns the b-component MAC.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/backbone-src-mac"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/config/backbone-src-mac"
func (n *NetworkInstance_Evpn_EvpnInstance_BComponentPathAny) BackboneSrcMac() *NetworkInstance_Evpn_EvpnInstance_BComponent_BackboneSrcMacPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_BComponent_BackboneSrcMacPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "backbone-src-mac"},
			map[string]interface{}{},
			n,
		),
	}
}

// IComponentAny (list): list of i-components
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "i-components/i-component"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/i-components/i-component"
// ISid (wildcarded): uint32
func (n *NetworkInstance_Evpn_EvpnInstance_BComponentPath) IComponentAny() *NetworkInstance_Evpn_EvpnInstance_BComponent_IComponentPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_BComponent_IComponentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"i-components", "i-component"},
			map[string]interface{}{"i-sid": "*"},
			n,
		),
	}
}

// IComponentAny (list): list of i-components
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "i-components/i-component"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/i-components/i-component"
// ISid (wildcarded): uint32
func (n *NetworkInstance_Evpn_EvpnInstance_BComponentPathAny) IComponentAny() *NetworkInstance_Evpn_EvpnInstance_BComponent_IComponentPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_BComponent_IComponentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"i-components", "i-component"},
			map[string]interface{}{"i-sid": "*"},
			n,
		),
	}
}

// IComponent (list): list of i-components
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "i-components/i-component"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/i-components/i-component"
// ISid: uint32
func (n *NetworkInstance_Evpn_EvpnInstance_BComponentPath) IComponent(ISid uint32) *NetworkInstance_Evpn_EvpnInstance_BComponent_IComponentPath {
	return &NetworkInstance_Evpn_EvpnInstance_BComponent_IComponentPath{
		NodePath: ygot.NewNodePath(
			[]string{"i-components", "i-component"},
			map[string]interface{}{"i-sid": ISid},
			n,
		),
	}
}

// IComponent (list): list of i-components
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "i-components/i-component"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/i-components/i-component"
// ISid: uint32
func (n *NetworkInstance_Evpn_EvpnInstance_BComponentPathAny) IComponent(ISid uint32) *NetworkInstance_Evpn_EvpnInstance_BComponent_IComponentPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_BComponent_IComponentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"i-components", "i-component"},
			map[string]interface{}{"i-sid": ISid},
			n,
		),
	}
}

// NetworkInstance_Evpn_EvpnInstance_BComponent_IComponentPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/i-components/i-component YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_BComponent_IComponentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_BComponent_IComponentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/i-components/i-component YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_BComponent_IComponentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_BComponent_IComponent_ISidPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/i-components/i-component/config/i-sid YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_BComponent_IComponent_ISidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_BComponent_IComponent_ISidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/i-components/i-component/config/i-sid YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_BComponent_IComponent_ISidPathAny struct {
	*ygot.NodePath
}

// ISid (leaf): Service Instance Identifier 24 bits and global within a PBB
// network. I-SID defines the service instance that the frame should be
// mapped to.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/i-sid"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/i-components/i-component/config/i-sid"
func (n *NetworkInstance_Evpn_EvpnInstance_BComponent_IComponentPath) ISid() *NetworkInstance_Evpn_EvpnInstance_BComponent_IComponent_ISidPath {
	return &NetworkInstance_Evpn_EvpnInstance_BComponent_IComponent_ISidPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "i-sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// ISid (leaf): Service Instance Identifier 24 bits and global within a PBB
// network. I-SID defines the service instance that the frame should be
// mapped to.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/i-sid"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/pbb/b-component/i-components/i-component/config/i-sid"
func (n *NetworkInstance_Evpn_EvpnInstance_BComponent_IComponentPathAny) ISid() *NetworkInstance_Evpn_EvpnInstance_BComponent_IComponent_ISidPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_BComponent_IComponent_ISidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "i-sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Evpn_EvpnInstance_ImportExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/import-export-policy YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_ImportExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_ImportExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/import-export-policy YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_ImportExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_ImportExportPolicy_ExportRouteTargetPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/import-export-policy/config/export-route-target YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_ImportExportPolicy_ExportRouteTargetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_ImportExportPolicy_ExportRouteTargetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/import-export-policy/config/export-route-target YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_ImportExportPolicy_ExportRouteTargetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_ImportExportPolicy_ImportRouteTargetPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/import-export-policy/config/import-route-target YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_ImportExportPolicy_ImportRouteTargetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_ImportExportPolicy_ImportRouteTargetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/import-export-policy/config/import-route-target YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_ImportExportPolicy_ImportRouteTargetPathAny struct {
	*ygot.NodePath
}

// ExportRouteTarget (leaf-list): Export Route Target (RT) in the network-instance on a PE.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-route-target"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/import-export-policy/config/export-route-target"
func (n *NetworkInstance_Evpn_EvpnInstance_ImportExportPolicyPath) ExportRouteTarget() *NetworkInstance_Evpn_EvpnInstance_ImportExportPolicy_ExportRouteTargetPath {
	return &NetworkInstance_Evpn_EvpnInstance_ImportExportPolicy_ExportRouteTargetPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-route-target"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportRouteTarget (leaf-list): Export Route Target (RT) in the network-instance on a PE.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-route-target"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/import-export-policy/config/export-route-target"
func (n *NetworkInstance_Evpn_EvpnInstance_ImportExportPolicyPathAny) ExportRouteTarget() *NetworkInstance_Evpn_EvpnInstance_ImportExportPolicy_ExportRouteTargetPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_ImportExportPolicy_ExportRouteTargetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-route-target"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportRouteTarget (leaf-list): Import Route Target (RT) in the network-instance on a PE.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-route-target"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/import-export-policy/config/import-route-target"
func (n *NetworkInstance_Evpn_EvpnInstance_ImportExportPolicyPath) ImportRouteTarget() *NetworkInstance_Evpn_EvpnInstance_ImportExportPolicy_ImportRouteTargetPath {
	return &NetworkInstance_Evpn_EvpnInstance_ImportExportPolicy_ImportRouteTargetPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-route-target"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportRouteTarget (leaf-list): Import Route Target (RT) in the network-instance on a PE.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-route-target"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/import-export-policy/config/import-route-target"
func (n *NetworkInstance_Evpn_EvpnInstance_ImportExportPolicyPathAny) ImportRouteTarget() *NetworkInstance_Evpn_EvpnInstance_ImportExportPolicy_ImportRouteTargetPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_ImportExportPolicy_ImportRouteTargetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-route-target"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Evpn_EvpnInstance_VxlanPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_VxlanPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_VxlanPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_VxlanPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_HostReachabilityBgpPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/host-reachability-bgp YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_HostReachabilityBgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_HostReachabilityBgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/host-reachability-bgp YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_HostReachabilityBgpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_MulticastGroupPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/multicast-group YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_MulticastGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_MulticastGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/multicast-group YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_MulticastGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_MulticastMaskPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/multicast-mask YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_MulticastMaskPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_MulticastMaskPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/multicast-mask YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_MulticastMaskPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_OverlayEndpointPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/overlay-endpoint YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_OverlayEndpointPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_OverlayEndpointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/overlay-endpoint YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_OverlayEndpointPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_OverlayEndpointNetworkInstancePath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/overlay-endpoint-network-instance YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_OverlayEndpointNetworkInstancePath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_OverlayEndpointNetworkInstancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/overlay-endpoint-network-instance YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_OverlayEndpointNetworkInstancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_VniPath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/vni YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_VniPath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_VniPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/vni YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_VniPathAny struct {
	*ygot.NodePath
}

// AnycastSourceInterface (container): Anycast source interface references
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "anycast-source-interface"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/anycast-source-interface"
func (n *NetworkInstance_Evpn_EvpnInstance_VxlanPath) AnycastSourceInterface() *NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterfacePath {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"anycast-source-interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// AnycastSourceInterface (container): Anycast source interface references
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "anycast-source-interface"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/anycast-source-interface"
func (n *NetworkInstance_Evpn_EvpnInstance_VxlanPathAny) AnycastSourceInterface() *NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterfacePathAny {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"anycast-source-interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// HostReachabilityBgp (leaf): Enable or Disable the BGP control plane to be
// used to exchange  updates from the NVE interface
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/host-reachability-bgp"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/host-reachability-bgp"
func (n *NetworkInstance_Evpn_EvpnInstance_VxlanPath) HostReachabilityBgp() *NetworkInstance_Evpn_EvpnInstance_Vxlan_HostReachabilityBgpPath {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_HostReachabilityBgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "host-reachability-bgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// HostReachabilityBgp (leaf): Enable or Disable the BGP control plane to be
// used to exchange  updates from the NVE interface
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/host-reachability-bgp"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/host-reachability-bgp"
func (n *NetworkInstance_Evpn_EvpnInstance_VxlanPathAny) HostReachabilityBgp() *NetworkInstance_Evpn_EvpnInstance_Vxlan_HostReachabilityBgpPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_HostReachabilityBgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "host-reachability-bgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastGroup (leaf): Multicast group address for BUM traffic
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multicast-group"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/multicast-group"
func (n *NetworkInstance_Evpn_EvpnInstance_VxlanPath) MulticastGroup() *NetworkInstance_Evpn_EvpnInstance_Vxlan_MulticastGroupPath {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_MulticastGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multicast-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastGroup (leaf): Multicast group address for BUM traffic
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multicast-group"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/multicast-group"
func (n *NetworkInstance_Evpn_EvpnInstance_VxlanPathAny) MulticastGroup() *NetworkInstance_Evpn_EvpnInstance_Vxlan_MulticastGroupPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_MulticastGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multicast-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastMask (leaf): Multicast group address mask
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multicast-mask"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/multicast-mask"
func (n *NetworkInstance_Evpn_EvpnInstance_VxlanPath) MulticastMask() *NetworkInstance_Evpn_EvpnInstance_Vxlan_MulticastMaskPath {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_MulticastMaskPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multicast-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastMask (leaf): Multicast group address mask
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multicast-mask"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/multicast-mask"
func (n *NetworkInstance_Evpn_EvpnInstance_VxlanPathAny) MulticastMask() *NetworkInstance_Evpn_EvpnInstance_Vxlan_MulticastMaskPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_MulticastMaskPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multicast-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// OverlayEndpoint (leaf): Associate the EVI with an VXLAN Endpoint defined under connection
// points. The network instance to resolve the overlay-endpoint within.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/overlay-endpoint"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/overlay-endpoint"
func (n *NetworkInstance_Evpn_EvpnInstance_VxlanPath) OverlayEndpoint() *NetworkInstance_Evpn_EvpnInstance_Vxlan_OverlayEndpointPath {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_OverlayEndpointPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "overlay-endpoint"},
			map[string]interface{}{},
			n,
		),
	}
}

// OverlayEndpoint (leaf): Associate the EVI with an VXLAN Endpoint defined under connection
// points. The network instance to resolve the overlay-endpoint within.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/overlay-endpoint"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/overlay-endpoint"
func (n *NetworkInstance_Evpn_EvpnInstance_VxlanPathAny) OverlayEndpoint() *NetworkInstance_Evpn_EvpnInstance_Vxlan_OverlayEndpointPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_OverlayEndpointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "overlay-endpoint"},
			map[string]interface{}{},
			n,
		),
	}
}

// OverlayEndpointNetworkInstance (leaf): The network instance to resolve the overlay-endpoint within.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/overlay-endpoint-network-instance"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/overlay-endpoint-network-instance"
func (n *NetworkInstance_Evpn_EvpnInstance_VxlanPath) OverlayEndpointNetworkInstance() *NetworkInstance_Evpn_EvpnInstance_Vxlan_OverlayEndpointNetworkInstancePath {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_OverlayEndpointNetworkInstancePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "overlay-endpoint-network-instance"},
			map[string]interface{}{},
			n,
		),
	}
}

// OverlayEndpointNetworkInstance (leaf): The network instance to resolve the overlay-endpoint within.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/overlay-endpoint-network-instance"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/overlay-endpoint-network-instance"
func (n *NetworkInstance_Evpn_EvpnInstance_VxlanPathAny) OverlayEndpointNetworkInstance() *NetworkInstance_Evpn_EvpnInstance_Vxlan_OverlayEndpointNetworkInstancePathAny {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_OverlayEndpointNetworkInstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "overlay-endpoint-network-instance"},
			map[string]interface{}{},
			n,
		),
	}
}

// Vni (leaf): Virtual Network Identifier (VNI) associated to the EVI. This VNI is used for
// ingress and egress in the VXLAN domain.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/vni"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/vni"
func (n *NetworkInstance_Evpn_EvpnInstance_VxlanPath) Vni() *NetworkInstance_Evpn_EvpnInstance_Vxlan_VniPath {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_VniPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "vni"},
			map[string]interface{}{},
			n,
		),
	}
}

// Vni (leaf): Virtual Network Identifier (VNI) associated to the EVI. This VNI is used for
// ingress and egress in the VXLAN domain.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/vni"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/config/vni"
func (n *NetworkInstance_Evpn_EvpnInstance_VxlanPathAny) Vni() *NetworkInstance_Evpn_EvpnInstance_Vxlan_VniPathAny {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_VniPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "vni"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterfacePath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/anycast-source-interface YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/anycast-source-interface YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterface_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/anycast-source-interface/config/interface YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterface_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterface_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/anycast-source-interface/config/interface YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterface_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterface_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/anycast-source-interface/config/subinterface YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterface_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterface_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/anycast-source-interface/config/subinterface YANG schema element.
type NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterface_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/anycast-source-interface/config/interface"
func (n *NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterfacePath) Interface() *NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterface_InterfacePath {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterface_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/anycast-source-interface/config/interface"
func (n *NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterfacePathAny) Interface() *NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterface_InterfacePathAny {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterface_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/anycast-source-interface/config/subinterface"
func (n *NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterfacePath) Subinterface() *NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterface_SubinterfacePath {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterface_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/evpn/evpn-instances/evpn-instance/vxlan/anycast-source-interface/config/subinterface"
func (n *NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterfacePathAny) Subinterface() *NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterface_SubinterfacePathAny {
	return &NetworkInstance_Evpn_EvpnInstance_Vxlan_AnycastSourceInterface_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_FdbPath represents the /openconfig-network-instance/network-instances/network-instance/fdb YANG schema element.
type NetworkInstance_FdbPath struct {
	*ygot.NodePath
}

// NetworkInstance_FdbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb YANG schema element.
type NetworkInstance_FdbPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_AnycastGatewayMacPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/config/anycast-gateway-mac YANG schema element.
type NetworkInstance_Fdb_AnycastGatewayMacPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_AnycastGatewayMacPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/config/anycast-gateway-mac YANG schema element.
type NetworkInstance_Fdb_AnycastGatewayMacPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_FloodUnknownUnicastSupressionPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/config/flood-unknown-unicast-supression YANG schema element.
type NetworkInstance_Fdb_FloodUnknownUnicastSupressionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_FloodUnknownUnicastSupressionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/config/flood-unknown-unicast-supression YANG schema element.
type NetworkInstance_Fdb_FloodUnknownUnicastSupressionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacAgingTimePath represents the /openconfig-network-instance/network-instances/network-instance/fdb/config/mac-aging-time YANG schema element.
type NetworkInstance_Fdb_MacAgingTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacAgingTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/config/mac-aging-time YANG schema element.
type NetworkInstance_Fdb_MacAgingTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacLearningPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/config/mac-learning YANG schema element.
type NetworkInstance_Fdb_MacLearningPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacLearningPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/config/mac-learning YANG schema element.
type NetworkInstance_Fdb_MacLearningPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MaximumEntriesPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/config/maximum-entries YANG schema element.
type NetworkInstance_Fdb_MaximumEntriesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MaximumEntriesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/config/maximum-entries YANG schema element.
type NetworkInstance_Fdb_MaximumEntriesPathAny struct {
	*ygot.NodePath
}

// AnycastGatewayMac (leaf): Configure the anycast gateway MAC address that all VTEPs
// use for the network instance. When a VM sends an Address
// Resolution Protocol (ARP) request for the anycast gateway
// IP address in a VXLAN virtual network, the VTEP responds
// with the configured anycast MAC address.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/anycast-gateway-mac"
// Path from root: "/network-instances/network-instance/fdb/config/anycast-gateway-mac"
func (n *NetworkInstance_FdbPath) AnycastGatewayMac() *NetworkInstance_Fdb_AnycastGatewayMacPath {
	return &NetworkInstance_Fdb_AnycastGatewayMacPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "anycast-gateway-mac"},
			map[string]interface{}{},
			n,
		),
	}
}

// AnycastGatewayMac (leaf): Configure the anycast gateway MAC address that all VTEPs
// use for the network instance. When a VM sends an Address
// Resolution Protocol (ARP) request for the anycast gateway
// IP address in a VXLAN virtual network, the VTEP responds
// with the configured anycast MAC address.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/anycast-gateway-mac"
// Path from root: "/network-instances/network-instance/fdb/config/anycast-gateway-mac"
func (n *NetworkInstance_FdbPathAny) AnycastGatewayMac() *NetworkInstance_Fdb_AnycastGatewayMacPathAny {
	return &NetworkInstance_Fdb_AnycastGatewayMacPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "anycast-gateway-mac"},
			map[string]interface{}{},
			n,
		),
	}
}

// ArpProxy (container): Top Container related to ARP-Proxy
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "arp-proxy"
// Path from root: "/network-instances/network-instance/fdb/arp-proxy"
func (n *NetworkInstance_FdbPath) ArpProxy() *NetworkInstance_Fdb_ArpProxyPath {
	return &NetworkInstance_Fdb_ArpProxyPath{
		NodePath: ygot.NewNodePath(
			[]string{"arp-proxy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ArpProxy (container): Top Container related to ARP-Proxy
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "arp-proxy"
// Path from root: "/network-instances/network-instance/fdb/arp-proxy"
func (n *NetworkInstance_FdbPathAny) ArpProxy() *NetworkInstance_Fdb_ArpProxyPathAny {
	return &NetworkInstance_Fdb_ArpProxyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"arp-proxy"},
			map[string]interface{}{},
			n,
		),
	}
}

// FloodUnknownUnicastSupression (leaf): Enable (TRUE) or disable (FALSE) the Unknown Unicast Flooding
// Suppression. If the Unknown Unicast Flooding Suppression is on,
// the unicast traffic towards an unknown host will be dropped.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/flood-unknown-unicast-supression"
// Path from root: "/network-instances/network-instance/fdb/config/flood-unknown-unicast-supression"
func (n *NetworkInstance_FdbPath) FloodUnknownUnicastSupression() *NetworkInstance_Fdb_FloodUnknownUnicastSupressionPath {
	return &NetworkInstance_Fdb_FloodUnknownUnicastSupressionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "flood-unknown-unicast-supression"},
			map[string]interface{}{},
			n,
		),
	}
}

// FloodUnknownUnicastSupression (leaf): Enable (TRUE) or disable (FALSE) the Unknown Unicast Flooding
// Suppression. If the Unknown Unicast Flooding Suppression is on,
// the unicast traffic towards an unknown host will be dropped.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/flood-unknown-unicast-supression"
// Path from root: "/network-instances/network-instance/fdb/config/flood-unknown-unicast-supression"
func (n *NetworkInstance_FdbPathAny) FloodUnknownUnicastSupression() *NetworkInstance_Fdb_FloodUnknownUnicastSupressionPathAny {
	return &NetworkInstance_Fdb_FloodUnknownUnicastSupressionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "flood-unknown-unicast-supression"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacAgingTime (leaf): The number of seconds of inactivity after which the entry
// in the local FDB is timed out.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mac-aging-time"
// Path from root: "/network-instances/network-instance/fdb/config/mac-aging-time"
func (n *NetworkInstance_FdbPath) MacAgingTime() *NetworkInstance_Fdb_MacAgingTimePath {
	return &NetworkInstance_Fdb_MacAgingTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mac-aging-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacAgingTime (leaf): The number of seconds of inactivity after which the entry
// in the local FDB is timed out.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mac-aging-time"
// Path from root: "/network-instances/network-instance/fdb/config/mac-aging-time"
func (n *NetworkInstance_FdbPathAny) MacAgingTime() *NetworkInstance_Fdb_MacAgingTimePathAny {
	return &NetworkInstance_Fdb_MacAgingTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mac-aging-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacLearning (leaf): When this leaf is set to true, MAC learning is enabled for
// the network instance, such that MAC addresses are learned
// from ingress frames and added to the FDB.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mac-learning"
// Path from root: "/network-instances/network-instance/fdb/config/mac-learning"
func (n *NetworkInstance_FdbPath) MacLearning() *NetworkInstance_Fdb_MacLearningPath {
	return &NetworkInstance_Fdb_MacLearningPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mac-learning"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacLearning (leaf): When this leaf is set to true, MAC learning is enabled for
// the network instance, such that MAC addresses are learned
// from ingress frames and added to the FDB.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mac-learning"
// Path from root: "/network-instances/network-instance/fdb/config/mac-learning"
func (n *NetworkInstance_FdbPathAny) MacLearning() *NetworkInstance_Fdb_MacLearningPathAny {
	return &NetworkInstance_Fdb_MacLearningPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mac-learning"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacMobility (container): Top grouping the configuration and state data related to mac
// mobility.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mac-mobility"
// Path from root: "/network-instances/network-instance/fdb/mac-mobility"
func (n *NetworkInstance_FdbPath) MacMobility() *NetworkInstance_Fdb_MacMobilityPath {
	return &NetworkInstance_Fdb_MacMobilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"mac-mobility"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacMobility (container): Top grouping the configuration and state data related to mac
// mobility.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mac-mobility"
// Path from root: "/network-instances/network-instance/fdb/mac-mobility"
func (n *NetworkInstance_FdbPathAny) MacMobility() *NetworkInstance_Fdb_MacMobilityPathAny {
	return &NetworkInstance_Fdb_MacMobilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mac-mobility"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacTable (container): Table of learned or statically configured MAC addresses and
// corresponding VLANs in the bridge domain
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mac-table"
// Path from root: "/network-instances/network-instance/fdb/mac-table"
func (n *NetworkInstance_FdbPath) MacTable() *NetworkInstance_Fdb_MacTablePath {
	return &NetworkInstance_Fdb_MacTablePath{
		NodePath: ygot.NewNodePath(
			[]string{"mac-table"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacTable (container): Table of learned or statically configured MAC addresses and
// corresponding VLANs in the bridge domain
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mac-table"
// Path from root: "/network-instances/network-instance/fdb/mac-table"
func (n *NetworkInstance_FdbPathAny) MacTable() *NetworkInstance_Fdb_MacTablePathAny {
	return &NetworkInstance_Fdb_MacTablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mac-table"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumEntries (leaf): The maximum number of MAC address entries that should be
// accepted into the FDB
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-entries"
// Path from root: "/network-instances/network-instance/fdb/config/maximum-entries"
func (n *NetworkInstance_FdbPath) MaximumEntries() *NetworkInstance_Fdb_MaximumEntriesPath {
	return &NetworkInstance_Fdb_MaximumEntriesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-entries"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumEntries (leaf): The maximum number of MAC address entries that should be
// accepted into the FDB
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-entries"
// Path from root: "/network-instances/network-instance/fdb/config/maximum-entries"
func (n *NetworkInstance_FdbPathAny) MaximumEntries() *NetworkInstance_Fdb_MaximumEntriesPathAny {
	return &NetworkInstance_Fdb_MaximumEntriesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-entries"},
			map[string]interface{}{},
			n,
		),
	}
}

// NdProxy (container): Top Container related to ND-Proxy.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nd-proxy"
// Path from root: "/network-instances/network-instance/fdb/nd-proxy"
func (n *NetworkInstance_FdbPath) NdProxy() *NetworkInstance_Fdb_NdProxyPath {
	return &NetworkInstance_Fdb_NdProxyPath{
		NodePath: ygot.NewNodePath(
			[]string{"nd-proxy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NdProxy (container): Top Container related to ND-Proxy.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nd-proxy"
// Path from root: "/network-instances/network-instance/fdb/nd-proxy"
func (n *NetworkInstance_FdbPathAny) NdProxy() *NetworkInstance_Fdb_NdProxyPathAny {
	return &NetworkInstance_Fdb_NdProxyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"nd-proxy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Fdb_ArpProxyPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/arp-proxy YANG schema element.
type NetworkInstance_Fdb_ArpProxyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_ArpProxyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/arp-proxy YANG schema element.
type NetworkInstance_Fdb_ArpProxyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_ArpProxy_ArpSuppressionPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/arp-proxy/config/arp-suppression YANG schema element.
type NetworkInstance_Fdb_ArpProxy_ArpSuppressionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_ArpProxy_ArpSuppressionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/arp-proxy/config/arp-suppression YANG schema element.
type NetworkInstance_Fdb_ArpProxy_ArpSuppressionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_ArpProxy_DuplicateIpDetectionIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/arp-proxy/config/duplicate-ip-detection-interval YANG schema element.
type NetworkInstance_Fdb_ArpProxy_DuplicateIpDetectionIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_ArpProxy_DuplicateIpDetectionIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/arp-proxy/config/duplicate-ip-detection-interval YANG schema element.
type NetworkInstance_Fdb_ArpProxy_DuplicateIpDetectionIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_ArpProxy_EnablePath represents the /openconfig-network-instance/network-instances/network-instance/fdb/arp-proxy/config/enable YANG schema element.
type NetworkInstance_Fdb_ArpProxy_EnablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_ArpProxy_EnablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/arp-proxy/config/enable YANG schema element.
type NetworkInstance_Fdb_ArpProxy_EnablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_ArpProxy_IpMobilityThresholdPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/arp-proxy/config/ip-mobility-threshold YANG schema element.
type NetworkInstance_Fdb_ArpProxy_IpMobilityThresholdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_ArpProxy_IpMobilityThresholdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/arp-proxy/config/ip-mobility-threshold YANG schema element.
type NetworkInstance_Fdb_ArpProxy_IpMobilityThresholdPathAny struct {
	*ygot.NodePath
}

// ArpSuppression (leaf): Enable (TRUE) or disable (FALSE) ARP suppression. If true
// the  Address Resolution Protocol (ARP) queries for an
// IP address that is not on that network are suppressed.
// Address Resolution Protocol (ARP) suppression is a
// technique used to reduce the amount of ARP broadcast
// flooding within individual VXLAN segments, that is between
// VMs connected to the same logical switch.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/arp-suppression"
// Path from root: "/network-instances/network-instance/fdb/arp-proxy/config/arp-suppression"
func (n *NetworkInstance_Fdb_ArpProxyPath) ArpSuppression() *NetworkInstance_Fdb_ArpProxy_ArpSuppressionPath {
	return &NetworkInstance_Fdb_ArpProxy_ArpSuppressionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "arp-suppression"},
			map[string]interface{}{},
			n,
		),
	}
}

// ArpSuppression (leaf): Enable (TRUE) or disable (FALSE) ARP suppression. If true
// the  Address Resolution Protocol (ARP) queries for an
// IP address that is not on that network are suppressed.
// Address Resolution Protocol (ARP) suppression is a
// technique used to reduce the amount of ARP broadcast
// flooding within individual VXLAN segments, that is between
// VMs connected to the same logical switch.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/arp-suppression"
// Path from root: "/network-instances/network-instance/fdb/arp-proxy/config/arp-suppression"
func (n *NetworkInstance_Fdb_ArpProxyPathAny) ArpSuppression() *NetworkInstance_Fdb_ArpProxy_ArpSuppressionPathAny {
	return &NetworkInstance_Fdb_ArpProxy_ArpSuppressionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "arp-suppression"},
			map[string]interface{}{},
			n,
		),
	}
}

// DuplicateIpDetectionInterval (leaf): The time interval used in detecting a duplicate IP address.
// Duplicate ip detection number of host moves
// allowed within interval period
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/duplicate-ip-detection-interval"
// Path from root: "/network-instances/network-instance/fdb/arp-proxy/config/duplicate-ip-detection-interval"
func (n *NetworkInstance_Fdb_ArpProxyPath) DuplicateIpDetectionInterval() *NetworkInstance_Fdb_ArpProxy_DuplicateIpDetectionIntervalPath {
	return &NetworkInstance_Fdb_ArpProxy_DuplicateIpDetectionIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "duplicate-ip-detection-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// DuplicateIpDetectionInterval (leaf): The time interval used in detecting a duplicate IP address.
// Duplicate ip detection number of host moves
// allowed within interval period
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/duplicate-ip-detection-interval"
// Path from root: "/network-instances/network-instance/fdb/arp-proxy/config/duplicate-ip-detection-interval"
func (n *NetworkInstance_Fdb_ArpProxyPathAny) DuplicateIpDetectionInterval() *NetworkInstance_Fdb_ArpProxy_DuplicateIpDetectionIntervalPathAny {
	return &NetworkInstance_Fdb_ArpProxy_DuplicateIpDetectionIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "duplicate-ip-detection-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enable (TRUE) or disable (FALSE) ARP proxy. If true
// a proxy server on the network answers the
// Address Resolution Protocol (ARP) queries for an
// IP address that is not on that network.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable"
// Path from root: "/network-instances/network-instance/fdb/arp-proxy/config/enable"
func (n *NetworkInstance_Fdb_ArpProxyPath) Enable() *NetworkInstance_Fdb_ArpProxy_EnablePath {
	return &NetworkInstance_Fdb_ArpProxy_EnablePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enable (TRUE) or disable (FALSE) ARP proxy. If true
// a proxy server on the network answers the
// Address Resolution Protocol (ARP) queries for an
// IP address that is not on that network.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable"
// Path from root: "/network-instances/network-instance/fdb/arp-proxy/config/enable"
func (n *NetworkInstance_Fdb_ArpProxyPathAny) Enable() *NetworkInstance_Fdb_ArpProxy_EnablePathAny {
	return &NetworkInstance_Fdb_ArpProxy_EnablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpMobilityThreshold (leaf): Enable (TRUE) or disable (FALSE). It is possible for a given host
// or end-station (as defined by its IP address) to move from one
// Ethernet segment to another. The number of IP mobility events that
// are detected for a given IP address within the detection-threshold
// before it is identified as a duplicate IP address.
// Once the detection threshold is reached, updates for the IP address
// are suppressed.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ip-mobility-threshold"
// Path from root: "/network-instances/network-instance/fdb/arp-proxy/config/ip-mobility-threshold"
func (n *NetworkInstance_Fdb_ArpProxyPath) IpMobilityThreshold() *NetworkInstance_Fdb_ArpProxy_IpMobilityThresholdPath {
	return &NetworkInstance_Fdb_ArpProxy_IpMobilityThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ip-mobility-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpMobilityThreshold (leaf): Enable (TRUE) or disable (FALSE). It is possible for a given host
// or end-station (as defined by its IP address) to move from one
// Ethernet segment to another. The number of IP mobility events that
// are detected for a given IP address within the detection-threshold
// before it is identified as a duplicate IP address.
// Once the detection threshold is reached, updates for the IP address
// are suppressed.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ip-mobility-threshold"
// Path from root: "/network-instances/network-instance/fdb/arp-proxy/config/ip-mobility-threshold"
func (n *NetworkInstance_Fdb_ArpProxyPathAny) IpMobilityThreshold() *NetworkInstance_Fdb_ArpProxy_IpMobilityThresholdPathAny {
	return &NetworkInstance_Fdb_ArpProxy_IpMobilityThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ip-mobility-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Fdb_MacMobilityPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/mac-mobility YANG schema element.
type NetworkInstance_Fdb_MacMobilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacMobilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/mac-mobility YANG schema element.
type NetworkInstance_Fdb_MacMobilityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacMobility_DuplicateIpDetectionIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/mac-mobility/config/duplicate-ip-detection-interval YANG schema element.
type NetworkInstance_Fdb_MacMobility_DuplicateIpDetectionIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacMobility_DuplicateIpDetectionIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/mac-mobility/config/duplicate-ip-detection-interval YANG schema element.
type NetworkInstance_Fdb_MacMobility_DuplicateIpDetectionIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacMobility_IpMobilityThresholdPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/mac-mobility/config/ip-mobility-threshold YANG schema element.
type NetworkInstance_Fdb_MacMobility_IpMobilityThresholdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacMobility_IpMobilityThresholdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/mac-mobility/config/ip-mobility-threshold YANG schema element.
type NetworkInstance_Fdb_MacMobility_IpMobilityThresholdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacMobility_MacMobilityPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/mac-mobility/config/mac-mobility YANG schema element.
type NetworkInstance_Fdb_MacMobility_MacMobilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacMobility_MacMobilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/mac-mobility/config/mac-mobility YANG schema element.
type NetworkInstance_Fdb_MacMobility_MacMobilityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacMobility_MacMobilityThresholdPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/mac-mobility/config/mac-mobility-threshold YANG schema element.
type NetworkInstance_Fdb_MacMobility_MacMobilityThresholdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacMobility_MacMobilityThresholdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/mac-mobility/config/mac-mobility-threshold YANG schema element.
type NetworkInstance_Fdb_MacMobility_MacMobilityThresholdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacMobility_MacMobilityWindowPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/mac-mobility/config/mac-mobility-window YANG schema element.
type NetworkInstance_Fdb_MacMobility_MacMobilityWindowPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacMobility_MacMobilityWindowPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/mac-mobility/config/mac-mobility-window YANG schema element.
type NetworkInstance_Fdb_MacMobility_MacMobilityWindowPathAny struct {
	*ygot.NodePath
}

// DuplicateIpDetectionInterval (leaf): The time interval used in detecting a duplicate IP address.
// Duplicate ip detection number of host moves
// allowed within interval period
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/duplicate-ip-detection-interval"
// Path from root: "/network-instances/network-instance/fdb/mac-mobility/config/duplicate-ip-detection-interval"
func (n *NetworkInstance_Fdb_MacMobilityPath) DuplicateIpDetectionInterval() *NetworkInstance_Fdb_MacMobility_DuplicateIpDetectionIntervalPath {
	return &NetworkInstance_Fdb_MacMobility_DuplicateIpDetectionIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "duplicate-ip-detection-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// DuplicateIpDetectionInterval (leaf): The time interval used in detecting a duplicate IP address.
// Duplicate ip detection number of host moves
// allowed within interval period
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/duplicate-ip-detection-interval"
// Path from root: "/network-instances/network-instance/fdb/mac-mobility/config/duplicate-ip-detection-interval"
func (n *NetworkInstance_Fdb_MacMobilityPathAny) DuplicateIpDetectionInterval() *NetworkInstance_Fdb_MacMobility_DuplicateIpDetectionIntervalPathAny {
	return &NetworkInstance_Fdb_MacMobility_DuplicateIpDetectionIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "duplicate-ip-detection-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpMobilityThreshold (leaf): Enable (TRUE) or disable (FALSE). It is possible for a given host
// or end-station (as defined by its IP address) to move from one
// Ethernet segment to another. The number of IP mobility events that
// are detected for a given IP address within the detection-threshold
// before it is identified as a duplicate IP address.
// Once the detection threshold is reached, updates for the IP address
// are suppressed.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ip-mobility-threshold"
// Path from root: "/network-instances/network-instance/fdb/mac-mobility/config/ip-mobility-threshold"
func (n *NetworkInstance_Fdb_MacMobilityPath) IpMobilityThreshold() *NetworkInstance_Fdb_MacMobility_IpMobilityThresholdPath {
	return &NetworkInstance_Fdb_MacMobility_IpMobilityThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ip-mobility-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpMobilityThreshold (leaf): Enable (TRUE) or disable (FALSE). It is possible for a given host
// or end-station (as defined by its IP address) to move from one
// Ethernet segment to another. The number of IP mobility events that
// are detected for a given IP address within the detection-threshold
// before it is identified as a duplicate IP address.
// Once the detection threshold is reached, updates for the IP address
// are suppressed.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ip-mobility-threshold"
// Path from root: "/network-instances/network-instance/fdb/mac-mobility/config/ip-mobility-threshold"
func (n *NetworkInstance_Fdb_MacMobilityPathAny) IpMobilityThreshold() *NetworkInstance_Fdb_MacMobility_IpMobilityThresholdPathAny {
	return &NetworkInstance_Fdb_MacMobility_IpMobilityThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ip-mobility-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacMobility (leaf): Enable (TRUE) or disable (FALSE). It is possible for a given host
// or end-station (as defined by its MAC address) to move from one
// Ethernet segment to another; this is referred to as 'MAC Mobility'
// or 'MAC move. The configuration attributes includes: mac-mobility-window
// and mac-mobility-threshold
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mac-mobility"
// Path from root: "/network-instances/network-instance/fdb/mac-mobility/config/mac-mobility"
func (n *NetworkInstance_Fdb_MacMobilityPath) MacMobility() *NetworkInstance_Fdb_MacMobility_MacMobilityPath {
	return &NetworkInstance_Fdb_MacMobility_MacMobilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mac-mobility"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacMobility (leaf): Enable (TRUE) or disable (FALSE). It is possible for a given host
// or end-station (as defined by its MAC address) to move from one
// Ethernet segment to another; this is referred to as 'MAC Mobility'
// or 'MAC move. The configuration attributes includes: mac-mobility-window
// and mac-mobility-threshold
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mac-mobility"
// Path from root: "/network-instances/network-instance/fdb/mac-mobility/config/mac-mobility"
func (n *NetworkInstance_Fdb_MacMobilityPathAny) MacMobility() *NetworkInstance_Fdb_MacMobility_MacMobilityPathAny {
	return &NetworkInstance_Fdb_MacMobility_MacMobilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mac-mobility"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacMobilityThreshold (leaf): The number of MAC mobility events that are detected for a
// given MAC address within the detection-window before it is identified
// as a duplicate MAC address. Once the detection threshold is reached,
// updates for the MAC address are suppressed.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mac-mobility-threshold"
// Path from root: "/network-instances/network-instance/fdb/mac-mobility/config/mac-mobility-threshold"
func (n *NetworkInstance_Fdb_MacMobilityPath) MacMobilityThreshold() *NetworkInstance_Fdb_MacMobility_MacMobilityThresholdPath {
	return &NetworkInstance_Fdb_MacMobility_MacMobilityThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mac-mobility-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacMobilityThreshold (leaf): The number of MAC mobility events that are detected for a
// given MAC address within the detection-window before it is identified
// as a duplicate MAC address. Once the detection threshold is reached,
// updates for the MAC address are suppressed.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mac-mobility-threshold"
// Path from root: "/network-instances/network-instance/fdb/mac-mobility/config/mac-mobility-threshold"
func (n *NetworkInstance_Fdb_MacMobilityPathAny) MacMobilityThreshold() *NetworkInstance_Fdb_MacMobility_MacMobilityThresholdPathAny {
	return &NetworkInstance_Fdb_MacMobility_MacMobilityThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mac-mobility-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacMobilityWindow (leaf): The time interval used in detecting a duplicate MAC address.
// The value can be from 5 through 600 seconds.
// The default is 180 seconds
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mac-mobility-window"
// Path from root: "/network-instances/network-instance/fdb/mac-mobility/config/mac-mobility-window"
func (n *NetworkInstance_Fdb_MacMobilityPath) MacMobilityWindow() *NetworkInstance_Fdb_MacMobility_MacMobilityWindowPath {
	return &NetworkInstance_Fdb_MacMobility_MacMobilityWindowPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mac-mobility-window"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacMobilityWindow (leaf): The time interval used in detecting a duplicate MAC address.
// The value can be from 5 through 600 seconds.
// The default is 180 seconds
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mac-mobility-window"
// Path from root: "/network-instances/network-instance/fdb/mac-mobility/config/mac-mobility-window"
func (n *NetworkInstance_Fdb_MacMobilityPathAny) MacMobilityWindow() *NetworkInstance_Fdb_MacMobility_MacMobilityWindowPathAny {
	return &NetworkInstance_Fdb_MacMobility_MacMobilityWindowPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mac-mobility-window"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Fdb_MacTablePath represents the /openconfig-network-instance/network-instances/network-instance/fdb/mac-table YANG schema element.
type NetworkInstance_Fdb_MacTablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacTablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/mac-table YANG schema element.
type NetworkInstance_Fdb_MacTablePathAny struct {
	*ygot.NodePath
}

// EntryAny (list): List of learned MAC addresses
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "entries/entry"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry"
// MacAddress (wildcarded): string
// Vlan (wildcarded): uint16
func (n *NetworkInstance_Fdb_MacTablePath) EntryAny() *NetworkInstance_Fdb_MacTable_EntryPathAny {
	return &NetworkInstance_Fdb_MacTable_EntryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"entries", "entry"},
			map[string]interface{}{"mac-address": "*", "vlan": "*"},
			n,
		),
	}
}

// EntryAny (list): List of learned MAC addresses
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "entries/entry"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry"
// MacAddress (wildcarded): string
// Vlan (wildcarded): uint16
func (n *NetworkInstance_Fdb_MacTablePathAny) EntryAny() *NetworkInstance_Fdb_MacTable_EntryPathAny {
	return &NetworkInstance_Fdb_MacTable_EntryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"entries", "entry"},
			map[string]interface{}{"mac-address": "*", "vlan": "*"},
			n,
		),
	}
}

// EntryAnyVlan (list): List of learned MAC addresses
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "entries/entry"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry"
// MacAddress: string
// Vlan (wildcarded): uint16
func (n *NetworkInstance_Fdb_MacTablePath) EntryAnyVlan(MacAddress string) *NetworkInstance_Fdb_MacTable_EntryPathAny {
	return &NetworkInstance_Fdb_MacTable_EntryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"entries", "entry"},
			map[string]interface{}{"mac-address": MacAddress, "vlan": "*"},
			n,
		),
	}
}

// EntryAnyVlan (list): List of learned MAC addresses
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "entries/entry"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry"
// MacAddress: string
// Vlan (wildcarded): uint16
func (n *NetworkInstance_Fdb_MacTablePathAny) EntryAnyVlan(MacAddress string) *NetworkInstance_Fdb_MacTable_EntryPathAny {
	return &NetworkInstance_Fdb_MacTable_EntryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"entries", "entry"},
			map[string]interface{}{"mac-address": MacAddress, "vlan": "*"},
			n,
		),
	}
}

// EntryAnyMacAddress (list): List of learned MAC addresses
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "entries/entry"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry"
// MacAddress (wildcarded): string
// Vlan: uint16
func (n *NetworkInstance_Fdb_MacTablePath) EntryAnyMacAddress(Vlan uint16) *NetworkInstance_Fdb_MacTable_EntryPathAny {
	return &NetworkInstance_Fdb_MacTable_EntryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"entries", "entry"},
			map[string]interface{}{"mac-address": "*", "vlan": Vlan},
			n,
		),
	}
}

// EntryAnyMacAddress (list): List of learned MAC addresses
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "entries/entry"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry"
// MacAddress (wildcarded): string
// Vlan: uint16
func (n *NetworkInstance_Fdb_MacTablePathAny) EntryAnyMacAddress(Vlan uint16) *NetworkInstance_Fdb_MacTable_EntryPathAny {
	return &NetworkInstance_Fdb_MacTable_EntryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"entries", "entry"},
			map[string]interface{}{"mac-address": "*", "vlan": Vlan},
			n,
		),
	}
}

// Entry (list): List of learned MAC addresses
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "entries/entry"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry"
// MacAddress: string
// Vlan: uint16
func (n *NetworkInstance_Fdb_MacTablePath) Entry(MacAddress string, Vlan uint16) *NetworkInstance_Fdb_MacTable_EntryPath {
	return &NetworkInstance_Fdb_MacTable_EntryPath{
		NodePath: ygot.NewNodePath(
			[]string{"entries", "entry"},
			map[string]interface{}{"mac-address": MacAddress, "vlan": Vlan},
			n,
		),
	}
}

// Entry (list): List of learned MAC addresses
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "entries/entry"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry"
// MacAddress: string
// Vlan: uint16
func (n *NetworkInstance_Fdb_MacTablePathAny) Entry(MacAddress string, Vlan uint16) *NetworkInstance_Fdb_MacTable_EntryPathAny {
	return &NetworkInstance_Fdb_MacTable_EntryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"entries", "entry"},
			map[string]interface{}{"mac-address": MacAddress, "vlan": Vlan},
			n,
		),
	}
}

// NetworkInstance_Fdb_MacTable_EntryPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/mac-table/entries/entry YANG schema element.
type NetworkInstance_Fdb_MacTable_EntryPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacTable_EntryPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/mac-table/entries/entry YANG schema element.
type NetworkInstance_Fdb_MacTable_EntryPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacTable_Entry_MacAddressPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/mac-table/entries/entry/config/mac-address YANG schema element.
type NetworkInstance_Fdb_MacTable_Entry_MacAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacTable_Entry_MacAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/mac-table/entries/entry/config/mac-address YANG schema element.
type NetworkInstance_Fdb_MacTable_Entry_MacAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacTable_Entry_VlanPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/mac-table/entries/entry/config/vlan YANG schema element.
type NetworkInstance_Fdb_MacTable_Entry_VlanPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacTable_Entry_VlanPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/mac-table/entries/entry/config/vlan YANG schema element.
type NetworkInstance_Fdb_MacTable_Entry_VlanPathAny struct {
	*ygot.NodePath
}

// Interface (container): Reference to the base and/or subinterface for the
// MAC table entry
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry/interface"
func (n *NetworkInstance_Fdb_MacTable_EntryPath) Interface() *NetworkInstance_Fdb_MacTable_Entry_InterfacePath {
	return &NetworkInstance_Fdb_MacTable_Entry_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (container): Reference to the base and/or subinterface for the
// MAC table entry
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry/interface"
func (n *NetworkInstance_Fdb_MacTable_EntryPathAny) Interface() *NetworkInstance_Fdb_MacTable_Entry_InterfacePathAny {
	return &NetworkInstance_Fdb_MacTable_Entry_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacAddress (leaf): MAC address for the dynamic or static MAC table
// entry
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mac-address"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry/config/mac-address"
func (n *NetworkInstance_Fdb_MacTable_EntryPath) MacAddress() *NetworkInstance_Fdb_MacTable_Entry_MacAddressPath {
	return &NetworkInstance_Fdb_MacTable_Entry_MacAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mac-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacAddress (leaf): MAC address for the dynamic or static MAC table
// entry
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mac-address"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry/config/mac-address"
func (n *NetworkInstance_Fdb_MacTable_EntryPathAny) MacAddress() *NetworkInstance_Fdb_MacTable_Entry_MacAddressPathAny {
	return &NetworkInstance_Fdb_MacTable_Entry_MacAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mac-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Vlan (leaf): VLAN on which the MAC address is present. The same MAC
// address may be seen on multiple VLANs in some cases.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/vlan"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry/config/vlan"
func (n *NetworkInstance_Fdb_MacTable_EntryPath) Vlan() *NetworkInstance_Fdb_MacTable_Entry_VlanPath {
	return &NetworkInstance_Fdb_MacTable_Entry_VlanPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "vlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// Vlan (leaf): VLAN on which the MAC address is present. The same MAC
// address may be seen on multiple VLANs in some cases.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/vlan"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry/config/vlan"
func (n *NetworkInstance_Fdb_MacTable_EntryPathAny) Vlan() *NetworkInstance_Fdb_MacTable_Entry_VlanPathAny {
	return &NetworkInstance_Fdb_MacTable_Entry_VlanPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "vlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Fdb_MacTable_Entry_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/fdb/mac-table/entries/entry/interface YANG schema element.
type NetworkInstance_Fdb_MacTable_Entry_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacTable_Entry_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/mac-table/entries/entry/interface YANG schema element.
type NetworkInstance_Fdb_MacTable_Entry_InterfacePathAny struct {
	*ygot.NodePath
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry/interface/interface-ref"
func (n *NetworkInstance_Fdb_MacTable_Entry_InterfacePath) InterfaceRef() *NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRefPath {
	return &NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry/interface/interface-ref"
func (n *NetworkInstance_Fdb_MacTable_Entry_InterfacePathAny) InterfaceRef() *NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/mac-table/entries/entry/interface/interface-ref YANG schema element.
type NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/mac-table/entries/entry/interface/interface-ref YANG schema element.
type NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/fdb/mac-table/entries/entry/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/mac-table/entries/entry/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/fdb/mac-table/entries/entry/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/mac-table/entries/entry/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry/interface/interface-ref/config/interface"
func (n *NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRefPath) Interface() *NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry/interface/interface-ref/config/interface"
func (n *NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/fdb/mac-table/entries/entry/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Fdb_MacTable_Entry_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Fdb_NdProxyPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/nd-proxy YANG schema element.
type NetworkInstance_Fdb_NdProxyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_NdProxyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/nd-proxy YANG schema element.
type NetworkInstance_Fdb_NdProxyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_NdProxy_DuplicateIpDetectionIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/nd-proxy/config/duplicate-ip-detection-interval YANG schema element.
type NetworkInstance_Fdb_NdProxy_DuplicateIpDetectionIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_NdProxy_DuplicateIpDetectionIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/nd-proxy/config/duplicate-ip-detection-interval YANG schema element.
type NetworkInstance_Fdb_NdProxy_DuplicateIpDetectionIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_NdProxy_EnablePath represents the /openconfig-network-instance/network-instances/network-instance/fdb/nd-proxy/config/enable YANG schema element.
type NetworkInstance_Fdb_NdProxy_EnablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_NdProxy_EnablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/nd-proxy/config/enable YANG schema element.
type NetworkInstance_Fdb_NdProxy_EnablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_NdProxy_IpMobilityThresholdPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/nd-proxy/config/ip-mobility-threshold YANG schema element.
type NetworkInstance_Fdb_NdProxy_IpMobilityThresholdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_NdProxy_IpMobilityThresholdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/nd-proxy/config/ip-mobility-threshold YANG schema element.
type NetworkInstance_Fdb_NdProxy_IpMobilityThresholdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_NdProxy_NdSuppressionPath represents the /openconfig-network-instance/network-instances/network-instance/fdb/nd-proxy/config/nd-suppression YANG schema element.
type NetworkInstance_Fdb_NdProxy_NdSuppressionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Fdb_NdProxy_NdSuppressionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/fdb/nd-proxy/config/nd-suppression YANG schema element.
type NetworkInstance_Fdb_NdProxy_NdSuppressionPathAny struct {
	*ygot.NodePath
}

// DuplicateIpDetectionInterval (leaf): The time interval used in detecting a duplicate IP address.
// Duplicate ip detection number of host moves
// allowed within interval period
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/duplicate-ip-detection-interval"
// Path from root: "/network-instances/network-instance/fdb/nd-proxy/config/duplicate-ip-detection-interval"
func (n *NetworkInstance_Fdb_NdProxyPath) DuplicateIpDetectionInterval() *NetworkInstance_Fdb_NdProxy_DuplicateIpDetectionIntervalPath {
	return &NetworkInstance_Fdb_NdProxy_DuplicateIpDetectionIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "duplicate-ip-detection-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// DuplicateIpDetectionInterval (leaf): The time interval used in detecting a duplicate IP address.
// Duplicate ip detection number of host moves
// allowed within interval period
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/duplicate-ip-detection-interval"
// Path from root: "/network-instances/network-instance/fdb/nd-proxy/config/duplicate-ip-detection-interval"
func (n *NetworkInstance_Fdb_NdProxyPathAny) DuplicateIpDetectionInterval() *NetworkInstance_Fdb_NdProxy_DuplicateIpDetectionIntervalPathAny {
	return &NetworkInstance_Fdb_NdProxy_DuplicateIpDetectionIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "duplicate-ip-detection-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enable (TRUE) or disable (FALSE) Neighbor Discovery (ND)
// proxy. If true a proxy server on the network answers the
// NDP packets for an IP address that is not on that network.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable"
// Path from root: "/network-instances/network-instance/fdb/nd-proxy/config/enable"
func (n *NetworkInstance_Fdb_NdProxyPath) Enable() *NetworkInstance_Fdb_NdProxy_EnablePath {
	return &NetworkInstance_Fdb_NdProxy_EnablePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enable (TRUE) or disable (FALSE) Neighbor Discovery (ND)
// proxy. If true a proxy server on the network answers the
// NDP packets for an IP address that is not on that network.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable"
// Path from root: "/network-instances/network-instance/fdb/nd-proxy/config/enable"
func (n *NetworkInstance_Fdb_NdProxyPathAny) Enable() *NetworkInstance_Fdb_NdProxy_EnablePathAny {
	return &NetworkInstance_Fdb_NdProxy_EnablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpMobilityThreshold (leaf): Enable (TRUE) or disable (FALSE). It is possible for a given host
// or end-station (as defined by its IP address) to move from one
// Ethernet segment to another. The number of IP mobility events that
// are detected for a given IP address within the detection-threshold
// before it is identified as a duplicate IP address.
// Once the detection threshold is reached, updates for the IP address
// are suppressed.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ip-mobility-threshold"
// Path from root: "/network-instances/network-instance/fdb/nd-proxy/config/ip-mobility-threshold"
func (n *NetworkInstance_Fdb_NdProxyPath) IpMobilityThreshold() *NetworkInstance_Fdb_NdProxy_IpMobilityThresholdPath {
	return &NetworkInstance_Fdb_NdProxy_IpMobilityThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ip-mobility-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpMobilityThreshold (leaf): Enable (TRUE) or disable (FALSE). It is possible for a given host
// or end-station (as defined by its IP address) to move from one
// Ethernet segment to another. The number of IP mobility events that
// are detected for a given IP address within the detection-threshold
// before it is identified as a duplicate IP address.
// Once the detection threshold is reached, updates for the IP address
// are suppressed.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ip-mobility-threshold"
// Path from root: "/network-instances/network-instance/fdb/nd-proxy/config/ip-mobility-threshold"
func (n *NetworkInstance_Fdb_NdProxyPathAny) IpMobilityThreshold() *NetworkInstance_Fdb_NdProxy_IpMobilityThresholdPathAny {
	return &NetworkInstance_Fdb_NdProxy_IpMobilityThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ip-mobility-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// NdSuppression (leaf): Enable (TRUE) or disable (FALSE) Neighbor Discovery suppression.
// If true the NDP queries for an IP address that is not on that
// network are suppressed. NDP suppression is a
// technique used to reduce the amount of NDP Packets
// flooding within individual VXLAN segments, that is between
// VMs connected to the same logical switch.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/nd-suppression"
// Path from root: "/network-instances/network-instance/fdb/nd-proxy/config/nd-suppression"
func (n *NetworkInstance_Fdb_NdProxyPath) NdSuppression() *NetworkInstance_Fdb_NdProxy_NdSuppressionPath {
	return &NetworkInstance_Fdb_NdProxy_NdSuppressionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "nd-suppression"},
			map[string]interface{}{},
			n,
		),
	}
}

// NdSuppression (leaf): Enable (TRUE) or disable (FALSE) Neighbor Discovery suppression.
// If true the NDP queries for an IP address that is not on that
// network are suppressed. NDP suppression is a
// technique used to reduce the amount of NDP Packets
// flooding within individual VXLAN segments, that is between
// VMs connected to the same logical switch.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/nd-suppression"
// Path from root: "/network-instances/network-instance/fdb/nd-proxy/config/nd-suppression"
func (n *NetworkInstance_Fdb_NdProxyPathAny) NdSuppression() *NetworkInstance_Fdb_NdProxy_NdSuppressionPathAny {
	return &NetworkInstance_Fdb_NdProxy_NdSuppressionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "nd-suppression"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_InterInstancePoliciesPath represents the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies YANG schema element.
type NetworkInstance_InterInstancePoliciesPath struct {
	*ygot.NodePath
}

// NetworkInstance_InterInstancePoliciesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies YANG schema element.
type NetworkInstance_InterInstancePoliciesPathAny struct {
	*ygot.NodePath
}

// ApplyPolicy (container): Anchor point for routing policies in the model.
// Import and export policies are with respect to the local
// routing table, i.e., export (send) and import (receive),
// depending on the context.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "apply-policy"
// Path from root: "/network-instances/network-instance/inter-instance-policies/apply-policy"
func (n *NetworkInstance_InterInstancePoliciesPath) ApplyPolicy() *NetworkInstance_InterInstancePolicies_ApplyPolicyPath {
	return &NetworkInstance_InterInstancePolicies_ApplyPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"apply-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ApplyPolicy (container): Anchor point for routing policies in the model.
// Import and export policies are with respect to the local
// routing table, i.e., export (send) and import (receive),
// depending on the context.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "apply-policy"
// Path from root: "/network-instances/network-instance/inter-instance-policies/apply-policy"
func (n *NetworkInstance_InterInstancePoliciesPathAny) ApplyPolicy() *NetworkInstance_InterInstancePolicies_ApplyPolicyPathAny {
	return &NetworkInstance_InterInstancePolicies_ApplyPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"apply-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportExportPolicy (container): Top container to set the import and export policies
// associated with a EVI
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "import-export-policy"
// Path from root: "/network-instances/network-instance/inter-instance-policies/import-export-policy"
func (n *NetworkInstance_InterInstancePoliciesPath) ImportExportPolicy() *NetworkInstance_InterInstancePolicies_ImportExportPolicyPath {
	return &NetworkInstance_InterInstancePolicies_ImportExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"import-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportExportPolicy (container): Top container to set the import and export policies
// associated with a EVI
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "import-export-policy"
// Path from root: "/network-instances/network-instance/inter-instance-policies/import-export-policy"
func (n *NetworkInstance_InterInstancePoliciesPathAny) ImportExportPolicy() *NetworkInstance_InterInstancePolicies_ImportExportPolicyPathAny {
	return &NetworkInstance_InterInstancePolicies_ImportExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"import-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_InterInstancePolicies_ApplyPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies/apply-policy YANG schema element.
type NetworkInstance_InterInstancePolicies_ApplyPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_InterInstancePolicies_ApplyPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies/apply-policy YANG schema element.
type NetworkInstance_InterInstancePolicies_ApplyPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_InterInstancePolicies_ApplyPolicy_DefaultExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies/apply-policy/config/default-export-policy YANG schema element.
type NetworkInstance_InterInstancePolicies_ApplyPolicy_DefaultExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_InterInstancePolicies_ApplyPolicy_DefaultExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies/apply-policy/config/default-export-policy YANG schema element.
type NetworkInstance_InterInstancePolicies_ApplyPolicy_DefaultExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_InterInstancePolicies_ApplyPolicy_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies/apply-policy/config/default-import-policy YANG schema element.
type NetworkInstance_InterInstancePolicies_ApplyPolicy_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_InterInstancePolicies_ApplyPolicy_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies/apply-policy/config/default-import-policy YANG schema element.
type NetworkInstance_InterInstancePolicies_ApplyPolicy_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_InterInstancePolicies_ApplyPolicy_ExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies/apply-policy/config/export-policy YANG schema element.
type NetworkInstance_InterInstancePolicies_ApplyPolicy_ExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_InterInstancePolicies_ApplyPolicy_ExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies/apply-policy/config/export-policy YANG schema element.
type NetworkInstance_InterInstancePolicies_ApplyPolicy_ExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_InterInstancePolicies_ApplyPolicy_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies/apply-policy/config/import-policy YANG schema element.
type NetworkInstance_InterInstancePolicies_ApplyPolicy_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_InterInstancePolicies_ApplyPolicy_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies/apply-policy/config/import-policy YANG schema element.
type NetworkInstance_InterInstancePolicies_ApplyPolicy_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// DefaultExportPolicy (leaf): explicitly set a default policy if no policy definition
// in the export policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-export-policy"
// Path from root: "/network-instances/network-instance/inter-instance-policies/apply-policy/config/default-export-policy"
func (n *NetworkInstance_InterInstancePolicies_ApplyPolicyPath) DefaultExportPolicy() *NetworkInstance_InterInstancePolicies_ApplyPolicy_DefaultExportPolicyPath {
	return &NetworkInstance_InterInstancePolicies_ApplyPolicy_DefaultExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultExportPolicy (leaf): explicitly set a default policy if no policy definition
// in the export policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-export-policy"
// Path from root: "/network-instances/network-instance/inter-instance-policies/apply-policy/config/default-export-policy"
func (n *NetworkInstance_InterInstancePolicies_ApplyPolicyPathAny) DefaultExportPolicy() *NetworkInstance_InterInstancePolicies_ApplyPolicy_DefaultExportPolicyPathAny {
	return &NetworkInstance_InterInstancePolicies_ApplyPolicy_DefaultExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/inter-instance-policies/apply-policy/config/default-import-policy"
func (n *NetworkInstance_InterInstancePolicies_ApplyPolicyPath) DefaultImportPolicy() *NetworkInstance_InterInstancePolicies_ApplyPolicy_DefaultImportPolicyPath {
	return &NetworkInstance_InterInstancePolicies_ApplyPolicy_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/inter-instance-policies/apply-policy/config/default-import-policy"
func (n *NetworkInstance_InterInstancePolicies_ApplyPolicyPathAny) DefaultImportPolicy() *NetworkInstance_InterInstancePolicies_ApplyPolicy_DefaultImportPolicyPathAny {
	return &NetworkInstance_InterInstancePolicies_ApplyPolicy_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportPolicy (leaf-list): list of policy names in sequence to be applied on
// sending a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-policy"
// Path from root: "/network-instances/network-instance/inter-instance-policies/apply-policy/config/export-policy"
func (n *NetworkInstance_InterInstancePolicies_ApplyPolicyPath) ExportPolicy() *NetworkInstance_InterInstancePolicies_ApplyPolicy_ExportPolicyPath {
	return &NetworkInstance_InterInstancePolicies_ApplyPolicy_ExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportPolicy (leaf-list): list of policy names in sequence to be applied on
// sending a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-policy"
// Path from root: "/network-instances/network-instance/inter-instance-policies/apply-policy/config/export-policy"
func (n *NetworkInstance_InterInstancePolicies_ApplyPolicyPathAny) ExportPolicy() *NetworkInstance_InterInstancePolicies_ApplyPolicy_ExportPolicyPathAny {
	return &NetworkInstance_InterInstancePolicies_ApplyPolicy_ExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/inter-instance-policies/apply-policy/config/import-policy"
func (n *NetworkInstance_InterInstancePolicies_ApplyPolicyPath) ImportPolicy() *NetworkInstance_InterInstancePolicies_ApplyPolicy_ImportPolicyPath {
	return &NetworkInstance_InterInstancePolicies_ApplyPolicy_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/inter-instance-policies/apply-policy/config/import-policy"
func (n *NetworkInstance_InterInstancePolicies_ApplyPolicyPathAny) ImportPolicy() *NetworkInstance_InterInstancePolicies_ApplyPolicy_ImportPolicyPathAny {
	return &NetworkInstance_InterInstancePolicies_ApplyPolicy_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_InterInstancePolicies_ImportExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies/import-export-policy YANG schema element.
type NetworkInstance_InterInstancePolicies_ImportExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_InterInstancePolicies_ImportExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies/import-export-policy YANG schema element.
type NetworkInstance_InterInstancePolicies_ImportExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_InterInstancePolicies_ImportExportPolicy_ExportRouteTargetPath represents the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies/import-export-policy/config/export-route-target YANG schema element.
type NetworkInstance_InterInstancePolicies_ImportExportPolicy_ExportRouteTargetPath struct {
	*ygot.NodePath
}

// NetworkInstance_InterInstancePolicies_ImportExportPolicy_ExportRouteTargetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies/import-export-policy/config/export-route-target YANG schema element.
type NetworkInstance_InterInstancePolicies_ImportExportPolicy_ExportRouteTargetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_InterInstancePolicies_ImportExportPolicy_ImportRouteTargetPath represents the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies/import-export-policy/config/import-route-target YANG schema element.
type NetworkInstance_InterInstancePolicies_ImportExportPolicy_ImportRouteTargetPath struct {
	*ygot.NodePath
}

// NetworkInstance_InterInstancePolicies_ImportExportPolicy_ImportRouteTargetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/inter-instance-policies/import-export-policy/config/import-route-target YANG schema element.
type NetworkInstance_InterInstancePolicies_ImportExportPolicy_ImportRouteTargetPathAny struct {
	*ygot.NodePath
}

// ExportRouteTarget (leaf-list): Export Route Target (RT) in the network-instance on a PE.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-route-target"
// Path from root: "/network-instances/network-instance/inter-instance-policies/import-export-policy/config/export-route-target"
func (n *NetworkInstance_InterInstancePolicies_ImportExportPolicyPath) ExportRouteTarget() *NetworkInstance_InterInstancePolicies_ImportExportPolicy_ExportRouteTargetPath {
	return &NetworkInstance_InterInstancePolicies_ImportExportPolicy_ExportRouteTargetPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-route-target"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportRouteTarget (leaf-list): Export Route Target (RT) in the network-instance on a PE.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-route-target"
// Path from root: "/network-instances/network-instance/inter-instance-policies/import-export-policy/config/export-route-target"
func (n *NetworkInstance_InterInstancePolicies_ImportExportPolicyPathAny) ExportRouteTarget() *NetworkInstance_InterInstancePolicies_ImportExportPolicy_ExportRouteTargetPathAny {
	return &NetworkInstance_InterInstancePolicies_ImportExportPolicy_ExportRouteTargetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-route-target"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportRouteTarget (leaf-list): Import Route Target (RT) in the network-instance on a PE.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-route-target"
// Path from root: "/network-instances/network-instance/inter-instance-policies/import-export-policy/config/import-route-target"
func (n *NetworkInstance_InterInstancePolicies_ImportExportPolicyPath) ImportRouteTarget() *NetworkInstance_InterInstancePolicies_ImportExportPolicy_ImportRouteTargetPath {
	return &NetworkInstance_InterInstancePolicies_ImportExportPolicy_ImportRouteTargetPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-route-target"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportRouteTarget (leaf-list): Import Route Target (RT) in the network-instance on a PE.
// ----------------------------------------
// Defining module: "openconfig-evpn"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-route-target"
// Path from root: "/network-instances/network-instance/inter-instance-policies/import-export-policy/config/import-route-target"
func (n *NetworkInstance_InterInstancePolicies_ImportExportPolicyPathAny) ImportRouteTarget() *NetworkInstance_InterInstancePolicies_ImportExportPolicy_ImportRouteTargetPathAny {
	return &NetworkInstance_InterInstancePolicies_ImportExportPolicy_ImportRouteTargetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-route-target"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/interfaces/interface YANG schema element.
type NetworkInstance_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/interfaces/interface YANG schema element.
type NetworkInstance_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Interface_AssociatedAddressFamiliesPath represents the /openconfig-network-instance/network-instances/network-instance/interfaces/interface/config/associated-address-families YANG schema element.
type NetworkInstance_Interface_AssociatedAddressFamiliesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Interface_AssociatedAddressFamiliesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/interfaces/interface/config/associated-address-families YANG schema element.
type NetworkInstance_Interface_AssociatedAddressFamiliesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Interface_IdPath represents the /openconfig-network-instance/network-instances/network-instance/interfaces/interface/config/id YANG schema element.
type NetworkInstance_Interface_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Interface_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/interfaces/interface/config/id YANG schema element.
type NetworkInstance_Interface_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Interface_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/interfaces/interface/config/interface YANG schema element.
type NetworkInstance_Interface_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Interface_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/interfaces/interface/config/interface YANG schema element.
type NetworkInstance_Interface_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Interface_IrbAnycastGatewayPath represents the /openconfig-network-instance/network-instances/network-instance/interfaces/interface/config/irb-anycast-gateway YANG schema element.
type NetworkInstance_Interface_IrbAnycastGatewayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Interface_IrbAnycastGatewayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/interfaces/interface/config/irb-anycast-gateway YANG schema element.
type NetworkInstance_Interface_IrbAnycastGatewayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Interface_MacPinningPath represents the /openconfig-network-instance/network-instances/network-instance/interfaces/interface/config/mac-pinning YANG schema element.
type NetworkInstance_Interface_MacPinningPath struct {
	*ygot.NodePath
}

// NetworkInstance_Interface_MacPinningPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/interfaces/interface/config/mac-pinning YANG schema element.
type NetworkInstance_Interface_MacPinningPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Interface_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/interfaces/interface/config/subinterface YANG schema element.
type NetworkInstance_Interface_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Interface_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/interfaces/interface/config/subinterface YANG schema element.
type NetworkInstance_Interface_SubinterfacePathAny struct {
	*ygot.NodePath
}

// AssociatedAddressFamilies (leaf-list): The address families on the subinterface which are to be
// associated with this network instance. When this leaf-list
// is empty and the network instance requires Layer 3 information
// the address families for which the network instance is
// enabled should be imported. If the value of this leaf-list
// is specified then the association MUST only be made for
// those address families that are included in the list.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/associated-address-families"
// Path from root: "/network-instances/network-instance/interfaces/interface/config/associated-address-families"
func (n *NetworkInstance_InterfacePath) AssociatedAddressFamilies() *NetworkInstance_Interface_AssociatedAddressFamiliesPath {
	return &NetworkInstance_Interface_AssociatedAddressFamiliesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "associated-address-families"},
			map[string]interface{}{},
			n,
		),
	}
}

// AssociatedAddressFamilies (leaf-list): The address families on the subinterface which are to be
// associated with this network instance. When this leaf-list
// is empty and the network instance requires Layer 3 information
// the address families for which the network instance is
// enabled should be imported. If the value of this leaf-list
// is specified then the association MUST only be made for
// those address families that are included in the list.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/associated-address-families"
// Path from root: "/network-instances/network-instance/interfaces/interface/config/associated-address-families"
func (n *NetworkInstance_InterfacePathAny) AssociatedAddressFamilies() *NetworkInstance_Interface_AssociatedAddressFamiliesPathAny {
	return &NetworkInstance_Interface_AssociatedAddressFamiliesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "associated-address-families"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): A unique identifier for this interface - this is expressed
// as a free-text string
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/id"
// Path from root: "/network-instances/network-instance/interfaces/interface/config/id"
func (n *NetworkInstance_InterfacePath) Id() *NetworkInstance_Interface_IdPath {
	return &NetworkInstance_Interface_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): A unique identifier for this interface - this is expressed
// as a free-text string
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/id"
// Path from root: "/network-instances/network-instance/interfaces/interface/config/id"
func (n *NetworkInstance_InterfacePathAny) Id() *NetworkInstance_Interface_IdPathAny {
	return &NetworkInstance_Interface_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/interfaces/interface/config/interface"
func (n *NetworkInstance_InterfacePath) Interface() *NetworkInstance_Interface_InterfacePath {
	return &NetworkInstance_Interface_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/interfaces/interface/config/interface"
func (n *NetworkInstance_InterfacePathAny) Interface() *NetworkInstance_Interface_InterfacePathAny {
	return &NetworkInstance_Interface_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// IrbAnycastGateway (leaf): Associate VLAN SVI with anycast Gateway.
// The SVI is the layer3 interface for the mac-vrf
// when the SVI is being used as the first hop default gw.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/irb-anycast-gateway"
// Path from root: "/network-instances/network-instance/interfaces/interface/config/irb-anycast-gateway"
func (n *NetworkInstance_InterfacePath) IrbAnycastGateway() *NetworkInstance_Interface_IrbAnycastGatewayPath {
	return &NetworkInstance_Interface_IrbAnycastGatewayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "irb-anycast-gateway"},
			map[string]interface{}{},
			n,
		),
	}
}

// IrbAnycastGateway (leaf): Associate VLAN SVI with anycast Gateway.
// The SVI is the layer3 interface for the mac-vrf
// when the SVI is being used as the first hop default gw.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/irb-anycast-gateway"
// Path from root: "/network-instances/network-instance/interfaces/interface/config/irb-anycast-gateway"
func (n *NetworkInstance_InterfacePathAny) IrbAnycastGateway() *NetworkInstance_Interface_IrbAnycastGatewayPathAny {
	return &NetworkInstance_Interface_IrbAnycastGatewayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "irb-anycast-gateway"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacPinning (leaf): Enable (TRUE) or disable (FALSE). There are scenarios in which
// it is desired to configure some MAC addresses as static so
// that they are not subjected to MAC moves. If you enable MAC pinning
// on a CE interface, that MAC address cannot be moved to any
// other CE interface
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mac-pinning"
// Path from root: "/network-instances/network-instance/interfaces/interface/config/mac-pinning"
func (n *NetworkInstance_InterfacePath) MacPinning() *NetworkInstance_Interface_MacPinningPath {
	return &NetworkInstance_Interface_MacPinningPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mac-pinning"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacPinning (leaf): Enable (TRUE) or disable (FALSE). There are scenarios in which
// it is desired to configure some MAC addresses as static so
// that they are not subjected to MAC moves. If you enable MAC pinning
// on a CE interface, that MAC address cannot be moved to any
// other CE interface
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mac-pinning"
// Path from root: "/network-instances/network-instance/interfaces/interface/config/mac-pinning"
func (n *NetworkInstance_InterfacePathAny) MacPinning() *NetworkInstance_Interface_MacPinningPathAny {
	return &NetworkInstance_Interface_MacPinningPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mac-pinning"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/interfaces/interface/config/subinterface"
func (n *NetworkInstance_InterfacePath) Subinterface() *NetworkInstance_Interface_SubinterfacePath {
	return &NetworkInstance_Interface_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/interfaces/interface/config/subinterface"
func (n *NetworkInstance_InterfacePathAny) Subinterface() *NetworkInstance_Interface_SubinterfacePathAny {
	return &NetworkInstance_Interface_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls YANG schema element.
type NetworkInstance_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls YANG schema element.
type NetworkInstance_MplsPathAny struct {
	*ygot.NodePath
}

// Global (container): general mpls configuration applicable to any
// type of LSP and signaling protocol - label ranges,
// entropy label supportmay be added here
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/mpls/global"
func (n *NetworkInstance_MplsPath) Global() *NetworkInstance_Mpls_GlobalPath {
	return &NetworkInstance_Mpls_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): general mpls configuration applicable to any
// type of LSP and signaling protocol - label ranges,
// entropy label supportmay be added here
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/mpls/global"
func (n *NetworkInstance_MplsPathAny) Global() *NetworkInstance_Mpls_GlobalPathAny {
	return &NetworkInstance_Mpls_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): List of TE interfaces
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-interface-attributes/interface"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_MplsPath) InterfaceAny() *NetworkInstance_Mpls_InterfacePathAny {
	return &NetworkInstance_Mpls_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-interface-attributes", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): List of TE interfaces
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-interface-attributes/interface"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_MplsPathAny) InterfaceAny() *NetworkInstance_Mpls_InterfacePathAny {
	return &NetworkInstance_Mpls_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-interface-attributes", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): List of TE interfaces
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-interface-attributes/interface"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface"
// InterfaceId: string
func (n *NetworkInstance_MplsPath) Interface(InterfaceId string) *NetworkInstance_Mpls_InterfacePath {
	return &NetworkInstance_Mpls_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"te-interface-attributes", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): List of TE interfaces
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-interface-attributes/interface"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface"
// InterfaceId: string
func (n *NetworkInstance_MplsPathAny) Interface(InterfaceId string) *NetworkInstance_Mpls_InterfacePathAny {
	return &NetworkInstance_Mpls_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-interface-attributes", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Lsps (container): LSP definitions and configuration
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsps"
// Path from root: "/network-instances/network-instance/mpls/lsps"
func (n *NetworkInstance_MplsPath) Lsps() *NetworkInstance_Mpls_LspsPath {
	return &NetworkInstance_Mpls_LspsPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsps"},
			map[string]interface{}{},
			n,
		),
	}
}

// Lsps (container): LSP definitions and configuration
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsps"
// Path from root: "/network-instances/network-instance/mpls/lsps"
func (n *NetworkInstance_MplsPathAny) Lsps() *NetworkInstance_Mpls_LspsPathAny {
	return &NetworkInstance_Mpls_LspsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsps"},
			map[string]interface{}{},
			n,
		),
	}
}

// SignalingProtocols (container): top-level signaling protocol configuration
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "signaling-protocols"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols"
func (n *NetworkInstance_MplsPath) SignalingProtocols() *NetworkInstance_Mpls_SignalingProtocolsPath {
	return &NetworkInstance_Mpls_SignalingProtocolsPath{
		NodePath: ygot.NewNodePath(
			[]string{"signaling-protocols"},
			map[string]interface{}{},
			n,
		),
	}
}

// SignalingProtocols (container): top-level signaling protocol configuration
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "signaling-protocols"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols"
func (n *NetworkInstance_MplsPathAny) SignalingProtocols() *NetworkInstance_Mpls_SignalingProtocolsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocolsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"signaling-protocols"},
			map[string]interface{}{},
			n,
		),
	}
}

// TeGlobalAttributes (container): traffic-engineering global attributes
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-global-attributes"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes"
func (n *NetworkInstance_MplsPath) TeGlobalAttributes() *NetworkInstance_Mpls_TeGlobalAttributesPath {
	return &NetworkInstance_Mpls_TeGlobalAttributesPath{
		NodePath: ygot.NewNodePath(
			[]string{"te-global-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// TeGlobalAttributes (container): traffic-engineering global attributes
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-global-attributes"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes"
func (n *NetworkInstance_MplsPathAny) TeGlobalAttributes() *NetworkInstance_Mpls_TeGlobalAttributesPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-global-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/global YANG schema element.
type NetworkInstance_Mpls_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/global YANG schema element.
type NetworkInstance_Mpls_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_NullLabelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/global/config/null-label YANG schema element.
type NetworkInstance_Mpls_Global_NullLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_NullLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/global/config/null-label YANG schema element.
type NetworkInstance_Mpls_Global_NullLabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_PwEncapsulationPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/global/config/pw-encapsulation YANG schema element.
type NetworkInstance_Mpls_Global_PwEncapsulationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_PwEncapsulationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/global/config/pw-encapsulation YANG schema element.
type NetworkInstance_Mpls_Global_PwEncapsulationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_TtlPropagationPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/global/config/ttl-propagation YANG schema element.
type NetworkInstance_Mpls_Global_TtlPropagationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_TtlPropagationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/global/config/ttl-propagation YANG schema element.
type NetworkInstance_Mpls_Global_TtlPropagationPathAny struct {
	*ygot.NodePath
}

// InterfaceAny (list): List of TE interfaces
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-attributes/interface"
// Path from root: "/network-instances/network-instance/mpls/global/interface-attributes/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Mpls_GlobalPath) InterfaceAny() *NetworkInstance_Mpls_Global_InterfacePathAny {
	return &NetworkInstance_Mpls_Global_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-attributes", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): List of TE interfaces
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-attributes/interface"
// Path from root: "/network-instances/network-instance/mpls/global/interface-attributes/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Mpls_GlobalPathAny) InterfaceAny() *NetworkInstance_Mpls_Global_InterfacePathAny {
	return &NetworkInstance_Mpls_Global_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-attributes", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): List of TE interfaces
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-attributes/interface"
// Path from root: "/network-instances/network-instance/mpls/global/interface-attributes/interface"
// InterfaceId: string
func (n *NetworkInstance_Mpls_GlobalPath) Interface(InterfaceId string) *NetworkInstance_Mpls_Global_InterfacePath {
	return &NetworkInstance_Mpls_Global_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-attributes", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): List of TE interfaces
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-attributes/interface"
// Path from root: "/network-instances/network-instance/mpls/global/interface-attributes/interface"
// InterfaceId: string
func (n *NetworkInstance_Mpls_GlobalPathAny) Interface(InterfaceId string) *NetworkInstance_Mpls_Global_InterfacePathAny {
	return &NetworkInstance_Mpls_Global_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-attributes", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// NullLabel (leaf): The null-label type used, implicit or explicit
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/null-label"
// Path from root: "/network-instances/network-instance/mpls/global/config/null-label"
func (n *NetworkInstance_Mpls_GlobalPath) NullLabel() *NetworkInstance_Mpls_Global_NullLabelPath {
	return &NetworkInstance_Mpls_Global_NullLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "null-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// NullLabel (leaf): The null-label type used, implicit or explicit
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/null-label"
// Path from root: "/network-instances/network-instance/mpls/global/config/null-label"
func (n *NetworkInstance_Mpls_GlobalPathAny) NullLabel() *NetworkInstance_Mpls_Global_NullLabelPathAny {
	return &NetworkInstance_Mpls_Global_NullLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "null-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// PwEncapsulation (leaf): The PDU type to use with pseudowires.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/pw-encapsulation"
// Path from root: "/network-instances/network-instance/mpls/global/config/pw-encapsulation"
func (n *NetworkInstance_Mpls_GlobalPath) PwEncapsulation() *NetworkInstance_Mpls_Global_PwEncapsulationPath {
	return &NetworkInstance_Mpls_Global_PwEncapsulationPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "pw-encapsulation"},
			map[string]interface{}{},
			n,
		),
	}
}

// PwEncapsulation (leaf): The PDU type to use with pseudowires.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/pw-encapsulation"
// Path from root: "/network-instances/network-instance/mpls/global/config/pw-encapsulation"
func (n *NetworkInstance_Mpls_GlobalPathAny) PwEncapsulation() *NetworkInstance_Mpls_Global_PwEncapsulationPathAny {
	return &NetworkInstance_Mpls_Global_PwEncapsulationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "pw-encapsulation"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReservedLabelBlockAny (list): A range of labels starting with the start-label up to and including
// the end label that should be allocated for use by a specific protocol.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reserved-label-blocks/reserved-label-block"
// Path from root: "/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block"
// LocalId (wildcarded): string
func (n *NetworkInstance_Mpls_GlobalPath) ReservedLabelBlockAny() *NetworkInstance_Mpls_Global_ReservedLabelBlockPathAny {
	return &NetworkInstance_Mpls_Global_ReservedLabelBlockPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reserved-label-blocks", "reserved-label-block"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// ReservedLabelBlockAny (list): A range of labels starting with the start-label up to and including
// the end label that should be allocated for use by a specific protocol.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reserved-label-blocks/reserved-label-block"
// Path from root: "/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block"
// LocalId (wildcarded): string
func (n *NetworkInstance_Mpls_GlobalPathAny) ReservedLabelBlockAny() *NetworkInstance_Mpls_Global_ReservedLabelBlockPathAny {
	return &NetworkInstance_Mpls_Global_ReservedLabelBlockPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reserved-label-blocks", "reserved-label-block"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// ReservedLabelBlock (list): A range of labels starting with the start-label up to and including
// the end label that should be allocated for use by a specific protocol.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reserved-label-blocks/reserved-label-block"
// Path from root: "/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block"
// LocalId: string
func (n *NetworkInstance_Mpls_GlobalPath) ReservedLabelBlock(LocalId string) *NetworkInstance_Mpls_Global_ReservedLabelBlockPath {
	return &NetworkInstance_Mpls_Global_ReservedLabelBlockPath{
		NodePath: ygot.NewNodePath(
			[]string{"reserved-label-blocks", "reserved-label-block"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// ReservedLabelBlock (list): A range of labels starting with the start-label up to and including
// the end label that should be allocated for use by a specific protocol.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reserved-label-blocks/reserved-label-block"
// Path from root: "/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block"
// LocalId: string
func (n *NetworkInstance_Mpls_GlobalPathAny) ReservedLabelBlock(LocalId string) *NetworkInstance_Mpls_Global_ReservedLabelBlockPathAny {
	return &NetworkInstance_Mpls_Global_ReservedLabelBlockPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reserved-label-blocks", "reserved-label-block"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// TtlPropagation (leaf): Enables TTL propagation across the MPLS domain.
// When ttl-propagation is set to true, the IP TTL
// is copied into the MPLS header TTL when pushing
// a label to an IP packet. If false, the IP TTL is
// not copied into the MPLS header TTL and, therefore,
// the IP TTL is not updated in the MPLS domain.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ttl-propagation"
// Path from root: "/network-instances/network-instance/mpls/global/config/ttl-propagation"
func (n *NetworkInstance_Mpls_GlobalPath) TtlPropagation() *NetworkInstance_Mpls_Global_TtlPropagationPath {
	return &NetworkInstance_Mpls_Global_TtlPropagationPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ttl-propagation"},
			map[string]interface{}{},
			n,
		),
	}
}

// TtlPropagation (leaf): Enables TTL propagation across the MPLS domain.
// When ttl-propagation is set to true, the IP TTL
// is copied into the MPLS header TTL when pushing
// a label to an IP packet. If false, the IP TTL is
// not copied into the MPLS header TTL and, therefore,
// the IP TTL is not updated in the MPLS domain.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ttl-propagation"
// Path from root: "/network-instances/network-instance/mpls/global/config/ttl-propagation"
func (n *NetworkInstance_Mpls_GlobalPathAny) TtlPropagation() *NetworkInstance_Mpls_Global_TtlPropagationPathAny {
	return &NetworkInstance_Mpls_Global_TtlPropagationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ttl-propagation"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Global_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/global/interface-attributes/interface YANG schema element.
type NetworkInstance_Mpls_Global_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/global/interface-attributes/interface YANG schema element.
type NetworkInstance_Mpls_Global_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/global/interface-attributes/interface/config/interface-id YANG schema element.
type NetworkInstance_Mpls_Global_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/global/interface-attributes/interface/config/interface-id YANG schema element.
type NetworkInstance_Mpls_Global_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_Interface_MplsEnabledPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/global/interface-attributes/interface/config/mpls-enabled YANG schema element.
type NetworkInstance_Mpls_Global_Interface_MplsEnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_Interface_MplsEnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/global/interface-attributes/interface/config/mpls-enabled YANG schema element.
type NetworkInstance_Mpls_Global_Interface_MplsEnabledPathAny struct {
	*ygot.NodePath
}

// InterfaceId (leaf): Indentifier for the MPLS interface
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/mpls/global/interface-attributes/interface/config/interface-id"
func (n *NetworkInstance_Mpls_Global_InterfacePath) InterfaceId() *NetworkInstance_Mpls_Global_Interface_InterfaceIdPath {
	return &NetworkInstance_Mpls_Global_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Indentifier for the MPLS interface
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/mpls/global/interface-attributes/interface/config/interface-id"
func (n *NetworkInstance_Mpls_Global_InterfacePathAny) InterfaceId() *NetworkInstance_Mpls_Global_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Mpls_Global_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/global/interface-attributes/interface/interface-ref"
func (n *NetworkInstance_Mpls_Global_InterfacePath) InterfaceRef() *NetworkInstance_Mpls_Global_Interface_InterfaceRefPath {
	return &NetworkInstance_Mpls_Global_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/global/interface-attributes/interface/interface-ref"
func (n *NetworkInstance_Mpls_Global_InterfacePathAny) InterfaceRef() *NetworkInstance_Mpls_Global_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Mpls_Global_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsEnabled (leaf): Enable MPLS forwarding on this interface
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mpls-enabled"
// Path from root: "/network-instances/network-instance/mpls/global/interface-attributes/interface/config/mpls-enabled"
func (n *NetworkInstance_Mpls_Global_InterfacePath) MplsEnabled() *NetworkInstance_Mpls_Global_Interface_MplsEnabledPath {
	return &NetworkInstance_Mpls_Global_Interface_MplsEnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mpls-enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsEnabled (leaf): Enable MPLS forwarding on this interface
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mpls-enabled"
// Path from root: "/network-instances/network-instance/mpls/global/interface-attributes/interface/config/mpls-enabled"
func (n *NetworkInstance_Mpls_Global_InterfacePathAny) MplsEnabled() *NetworkInstance_Mpls_Global_Interface_MplsEnabledPathAny {
	return &NetworkInstance_Mpls_Global_Interface_MplsEnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mpls-enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Global_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/global/interface-attributes/interface/interface-ref YANG schema element.
type NetworkInstance_Mpls_Global_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/global/interface-attributes/interface/interface-ref YANG schema element.
type NetworkInstance_Mpls_Global_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/global/interface-attributes/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Mpls_Global_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/global/interface-attributes/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Mpls_Global_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/global/interface-attributes/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Mpls_Global_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/global/interface-attributes/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Mpls_Global_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/mpls/global/interface-attributes/interface/interface-ref/config/interface"
func (n *NetworkInstance_Mpls_Global_Interface_InterfaceRefPath) Interface() *NetworkInstance_Mpls_Global_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Mpls_Global_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/mpls/global/interface-attributes/interface/interface-ref/config/interface"
func (n *NetworkInstance_Mpls_Global_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Mpls_Global_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Mpls_Global_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/mpls/global/interface-attributes/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Mpls_Global_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Mpls_Global_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Mpls_Global_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/mpls/global/interface-attributes/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Mpls_Global_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Mpls_Global_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Mpls_Global_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Global_ReservedLabelBlockPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block YANG schema element.
type NetworkInstance_Mpls_Global_ReservedLabelBlockPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_ReservedLabelBlockPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block YANG schema element.
type NetworkInstance_Mpls_Global_ReservedLabelBlockPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_ReservedLabelBlock_LocalIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/local-id YANG schema element.
type NetworkInstance_Mpls_Global_ReservedLabelBlock_LocalIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_ReservedLabelBlock_LocalIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/local-id YANG schema element.
type NetworkInstance_Mpls_Global_ReservedLabelBlock_LocalIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_ReservedLabelBlock_LowerBoundPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/lower-bound YANG schema element.
type NetworkInstance_Mpls_Global_ReservedLabelBlock_LowerBoundPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_ReservedLabelBlock_LowerBoundPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/lower-bound YANG schema element.
type NetworkInstance_Mpls_Global_ReservedLabelBlock_LowerBoundPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_ReservedLabelBlock_UpperBoundPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/upper-bound YANG schema element.
type NetworkInstance_Mpls_Global_ReservedLabelBlock_UpperBoundPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Global_ReservedLabelBlock_UpperBoundPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/upper-bound YANG schema element.
type NetworkInstance_Mpls_Global_ReservedLabelBlock_UpperBoundPathAny struct {
	*ygot.NodePath
}

// LocalId (leaf): A local identifier for the global label block allocation.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-id"
// Path from root: "/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/local-id"
func (n *NetworkInstance_Mpls_Global_ReservedLabelBlockPath) LocalId() *NetworkInstance_Mpls_Global_ReservedLabelBlock_LocalIdPath {
	return &NetworkInstance_Mpls_Global_ReservedLabelBlock_LocalIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): A local identifier for the global label block allocation.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-id"
// Path from root: "/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/local-id"
func (n *NetworkInstance_Mpls_Global_ReservedLabelBlockPathAny) LocalId() *NetworkInstance_Mpls_Global_ReservedLabelBlock_LocalIdPathAny {
	return &NetworkInstance_Mpls_Global_ReservedLabelBlock_LocalIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LowerBound (leaf): Lower bound of the global label block. The block is defined to include
// this label.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lower-bound"
// Path from root: "/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/lower-bound"
func (n *NetworkInstance_Mpls_Global_ReservedLabelBlockPath) LowerBound() *NetworkInstance_Mpls_Global_ReservedLabelBlock_LowerBoundPath {
	return &NetworkInstance_Mpls_Global_ReservedLabelBlock_LowerBoundPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lower-bound"},
			map[string]interface{}{},
			n,
		),
	}
}

// LowerBound (leaf): Lower bound of the global label block. The block is defined to include
// this label.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lower-bound"
// Path from root: "/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/lower-bound"
func (n *NetworkInstance_Mpls_Global_ReservedLabelBlockPathAny) LowerBound() *NetworkInstance_Mpls_Global_ReservedLabelBlock_LowerBoundPathAny {
	return &NetworkInstance_Mpls_Global_ReservedLabelBlock_LowerBoundPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lower-bound"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpperBound (leaf): Upper bound for the global label block. The block is defined to include
// this label.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/upper-bound"
// Path from root: "/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/upper-bound"
func (n *NetworkInstance_Mpls_Global_ReservedLabelBlockPath) UpperBound() *NetworkInstance_Mpls_Global_ReservedLabelBlock_UpperBoundPath {
	return &NetworkInstance_Mpls_Global_ReservedLabelBlock_UpperBoundPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "upper-bound"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpperBound (leaf): Upper bound for the global label block. The block is defined to include
// this label.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/upper-bound"
// Path from root: "/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/upper-bound"
func (n *NetworkInstance_Mpls_Global_ReservedLabelBlockPathAny) UpperBound() *NetworkInstance_Mpls_Global_ReservedLabelBlock_UpperBoundPathAny {
	return &NetworkInstance_Mpls_Global_ReservedLabelBlock_UpperBoundPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "upper-bound"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface YANG schema element.
type NetworkInstance_Mpls_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface YANG schema element.
type NetworkInstance_Mpls_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/config/admin-group YANG schema element.
type NetworkInstance_Mpls_Interface_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/config/admin-group YANG schema element.
type NetworkInstance_Mpls_Interface_AdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/config/interface-id YANG schema element.
type NetworkInstance_Mpls_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/config/interface-id YANG schema element.
type NetworkInstance_Mpls_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_SrlgMembershipPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/config/srlg-membership YANG schema element.
type NetworkInstance_Mpls_Interface_SrlgMembershipPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_SrlgMembershipPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/config/srlg-membership YANG schema element.
type NetworkInstance_Mpls_Interface_SrlgMembershipPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_TeMetricPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/config/te-metric YANG schema element.
type NetworkInstance_Mpls_Interface_TeMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_TeMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/config/te-metric YANG schema element.
type NetworkInstance_Mpls_Interface_TeMetricPathAny struct {
	*ygot.NodePath
}

// AdminGroup (leaf-list): list of admin groups (by name) on the interface
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/admin-group"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/config/admin-group"
func (n *NetworkInstance_Mpls_InterfacePath) AdminGroup() *NetworkInstance_Mpls_Interface_AdminGroupPath {
	return &NetworkInstance_Mpls_Interface_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroup (leaf-list): list of admin groups (by name) on the interface
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/admin-group"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/config/admin-group"
func (n *NetworkInstance_Mpls_InterfacePathAny) AdminGroup() *NetworkInstance_Mpls_Interface_AdminGroupPathAny {
	return &NetworkInstance_Mpls_Interface_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpFloodingBandwidth (container): Interface bandwidth change percentages
// that trigger update events into the IGP traffic
// engineering database (TED)
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-flooding-bandwidth"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth"
func (n *NetworkInstance_Mpls_InterfacePath) IgpFloodingBandwidth() *NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPath {
	return &NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-flooding-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpFloodingBandwidth (container): Interface bandwidth change percentages
// that trigger update events into the IGP traffic
// engineering database (TED)
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-flooding-bandwidth"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth"
func (n *NetworkInstance_Mpls_InterfacePathAny) IgpFloodingBandwidth() *NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPathAny {
	return &NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-flooding-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Id of the interface
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/config/interface-id"
func (n *NetworkInstance_Mpls_InterfacePath) InterfaceId() *NetworkInstance_Mpls_Interface_InterfaceIdPath {
	return &NetworkInstance_Mpls_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Id of the interface
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/config/interface-id"
func (n *NetworkInstance_Mpls_InterfacePathAny) InterfaceId() *NetworkInstance_Mpls_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Mpls_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/interface-ref"
func (n *NetworkInstance_Mpls_InterfacePath) InterfaceRef() *NetworkInstance_Mpls_Interface_InterfaceRefPath {
	return &NetworkInstance_Mpls_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/interface-ref"
func (n *NetworkInstance_Mpls_InterfacePathAny) InterfaceRef() *NetworkInstance_Mpls_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Mpls_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrlgMembership (leaf-list): list of references to named shared risk link groups that the
// interface belongs to.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/srlg-membership"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/config/srlg-membership"
func (n *NetworkInstance_Mpls_InterfacePath) SrlgMembership() *NetworkInstance_Mpls_Interface_SrlgMembershipPath {
	return &NetworkInstance_Mpls_Interface_SrlgMembershipPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "srlg-membership"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrlgMembership (leaf-list): list of references to named shared risk link groups that the
// interface belongs to.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/srlg-membership"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/config/srlg-membership"
func (n *NetworkInstance_Mpls_InterfacePathAny) SrlgMembership() *NetworkInstance_Mpls_Interface_SrlgMembershipPathAny {
	return &NetworkInstance_Mpls_Interface_SrlgMembershipPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "srlg-membership"},
			map[string]interface{}{},
			n,
		),
	}
}

// TeMetric (leaf): TE specific metric for the link
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/te-metric"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/config/te-metric"
func (n *NetworkInstance_Mpls_InterfacePath) TeMetric() *NetworkInstance_Mpls_Interface_TeMetricPath {
	return &NetworkInstance_Mpls_Interface_TeMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "te-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// TeMetric (leaf): TE specific metric for the link
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/te-metric"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/config/te-metric"
func (n *NetworkInstance_Mpls_InterfacePathAny) TeMetric() *NetworkInstance_Mpls_Interface_TeMetricPathAny {
	return &NetworkInstance_Mpls_Interface_TeMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "te-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth YANG schema element.
type NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth YANG schema element.
type NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_DeltaPercentagePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/delta-percentage YANG schema element.
type NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_DeltaPercentagePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_DeltaPercentagePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/delta-percentage YANG schema element.
type NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_DeltaPercentagePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_DownThresholdsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/down-thresholds YANG schema element.
type NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_DownThresholdsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_DownThresholdsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/down-thresholds YANG schema element.
type NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_DownThresholdsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_ThresholdSpecificationPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/threshold-specification YANG schema element.
type NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_ThresholdSpecificationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_ThresholdSpecificationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/threshold-specification YANG schema element.
type NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_ThresholdSpecificationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_ThresholdTypePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/threshold-type YANG schema element.
type NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_ThresholdTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_ThresholdTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/threshold-type YANG schema element.
type NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_ThresholdTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_UpDownThresholdsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/up-down-thresholds YANG schema element.
type NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_UpDownThresholdsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_UpDownThresholdsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/up-down-thresholds YANG schema element.
type NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_UpDownThresholdsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_UpThresholdsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/up-thresholds YANG schema element.
type NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_UpThresholdsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_UpThresholdsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/up-thresholds YANG schema element.
type NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_UpThresholdsPathAny struct {
	*ygot.NodePath
}

// DeltaPercentage (leaf): The percentage of the maximum-reservable-bandwidth
// considered as the delta that results in an IGP update
// being flooded
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/delta-percentage"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/delta-percentage"
func (n *NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPath) DeltaPercentage() *NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_DeltaPercentagePath {
	return &NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_DeltaPercentagePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "delta-percentage"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeltaPercentage (leaf): The percentage of the maximum-reservable-bandwidth
// considered as the delta that results in an IGP update
// being flooded
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/delta-percentage"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/delta-percentage"
func (n *NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPathAny) DeltaPercentage() *NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_DeltaPercentagePathAny {
	return &NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_DeltaPercentagePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "delta-percentage"},
			map[string]interface{}{},
			n,
		),
	}
}

// DownThresholds (leaf-list): The thresholds (expressed as a percentage of the maximum
// reservable bandwidth) at which bandwidth updates are to be
// triggered when the bandwidth is decreasing.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/down-thresholds"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/down-thresholds"
func (n *NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPath) DownThresholds() *NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_DownThresholdsPath {
	return &NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_DownThresholdsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "down-thresholds"},
			map[string]interface{}{},
			n,
		),
	}
}

// DownThresholds (leaf-list): The thresholds (expressed as a percentage of the maximum
// reservable bandwidth) at which bandwidth updates are to be
// triggered when the bandwidth is decreasing.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/down-thresholds"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/down-thresholds"
func (n *NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPathAny) DownThresholds() *NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_DownThresholdsPathAny {
	return &NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_DownThresholdsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "down-thresholds"},
			map[string]interface{}{},
			n,
		),
	}
}

// ThresholdSpecification (leaf): This value specifies whether a single set of threshold
// values should be used for both increasing and decreasing
// bandwidth when determining whether to trigger updated
// bandwidth values to be flooded in the IGP TE extensions.
// MIRRORED-UP-DOWN indicates that a single value (or set of
// values) should be used for both increasing and decreasing
// values, where SEPARATE-UP-DOWN specifies that the increasing
// and decreasing values will be separately specified
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/threshold-specification"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/threshold-specification"
func (n *NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPath) ThresholdSpecification() *NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_ThresholdSpecificationPath {
	return &NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_ThresholdSpecificationPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "threshold-specification"},
			map[string]interface{}{},
			n,
		),
	}
}

// ThresholdSpecification (leaf): This value specifies whether a single set of threshold
// values should be used for both increasing and decreasing
// bandwidth when determining whether to trigger updated
// bandwidth values to be flooded in the IGP TE extensions.
// MIRRORED-UP-DOWN indicates that a single value (or set of
// values) should be used for both increasing and decreasing
// values, where SEPARATE-UP-DOWN specifies that the increasing
// and decreasing values will be separately specified
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/threshold-specification"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/threshold-specification"
func (n *NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPathAny) ThresholdSpecification() *NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_ThresholdSpecificationPathAny {
	return &NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_ThresholdSpecificationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "threshold-specification"},
			map[string]interface{}{},
			n,
		),
	}
}

// ThresholdType (leaf): The type of threshold that should be used to specify the
// values at which bandwidth is flooded. DELTA indicates that
// the local system should flood IGP updates when a change in
// reserved bandwidth >= the specified delta occurs on the
// interface. Where THRESHOLD_CROSSED is specified, the local
// system should trigger an update (and hence flood) the
// reserved bandwidth when the reserved bandwidth changes such
// that it crosses, or becomes equal to one of the threshold
// values
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/threshold-type"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/threshold-type"
func (n *NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPath) ThresholdType() *NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_ThresholdTypePath {
	return &NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_ThresholdTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "threshold-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// ThresholdType (leaf): The type of threshold that should be used to specify the
// values at which bandwidth is flooded. DELTA indicates that
// the local system should flood IGP updates when a change in
// reserved bandwidth >= the specified delta occurs on the
// interface. Where THRESHOLD_CROSSED is specified, the local
// system should trigger an update (and hence flood) the
// reserved bandwidth when the reserved bandwidth changes such
// that it crosses, or becomes equal to one of the threshold
// values
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/threshold-type"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/threshold-type"
func (n *NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPathAny) ThresholdType() *NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_ThresholdTypePathAny {
	return &NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_ThresholdTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "threshold-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpDownThresholds (leaf-list): The thresholds (expressed as a percentage of the maximum
// reservable bandwidth of the interface) at which bandwidth
// updates are flooded - used both when the bandwidth is
// increasing and decreasing
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/up-down-thresholds"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/up-down-thresholds"
func (n *NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPath) UpDownThresholds() *NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_UpDownThresholdsPath {
	return &NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_UpDownThresholdsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "up-down-thresholds"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpDownThresholds (leaf-list): The thresholds (expressed as a percentage of the maximum
// reservable bandwidth of the interface) at which bandwidth
// updates are flooded - used both when the bandwidth is
// increasing and decreasing
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/up-down-thresholds"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/up-down-thresholds"
func (n *NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPathAny) UpDownThresholds() *NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_UpDownThresholdsPathAny {
	return &NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_UpDownThresholdsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "up-down-thresholds"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpThresholds (leaf-list): The thresholds (expressed as a percentage of the maximum
// reservable bandwidth) at which bandwidth updates are to be
// triggered when the bandwidth is increasing.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/up-thresholds"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/up-thresholds"
func (n *NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPath) UpThresholds() *NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_UpThresholdsPath {
	return &NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_UpThresholdsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "up-thresholds"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpThresholds (leaf-list): The thresholds (expressed as a percentage of the maximum
// reservable bandwidth) at which bandwidth updates are to be
// triggered when the bandwidth is increasing.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/up-thresholds"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/igp-flooding-bandwidth/config/up-thresholds"
func (n *NetworkInstance_Mpls_Interface_IgpFloodingBandwidthPathAny) UpThresholds() *NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_UpThresholdsPathAny {
	return &NetworkInstance_Mpls_Interface_IgpFloodingBandwidth_UpThresholdsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "up-thresholds"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/interface-ref YANG schema element.
type NetworkInstance_Mpls_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/interface-ref YANG schema element.
type NetworkInstance_Mpls_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Mpls_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Mpls_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Mpls_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-interface-attributes/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Mpls_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/interface-ref/config/interface"
func (n *NetworkInstance_Mpls_Interface_InterfaceRefPath) Interface() *NetworkInstance_Mpls_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Mpls_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/interface-ref/config/interface"
func (n *NetworkInstance_Mpls_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Mpls_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Mpls_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Mpls_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Mpls_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Mpls_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/mpls/te-interface-attributes/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Mpls_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Mpls_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Mpls_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_LspsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps YANG schema element.
type NetworkInstance_Mpls_LspsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_LspsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps YANG schema element.
type NetworkInstance_Mpls_LspsPathAny struct {
	*ygot.NodePath
}

// ConstrainedPath (container): traffic-engineered LSPs supporting different
// path computation and signaling methods
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constrained-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path"
func (n *NetworkInstance_Mpls_LspsPath) ConstrainedPath() *NetworkInstance_Mpls_Lsps_ConstrainedPathPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPathPath{
		NodePath: ygot.NewNodePath(
			[]string{"constrained-path"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConstrainedPath (container): traffic-engineered LSPs supporting different
// path computation and signaling methods
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constrained-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path"
func (n *NetworkInstance_Mpls_LspsPathAny) ConstrainedPath() *NetworkInstance_Mpls_Lsps_ConstrainedPathPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constrained-path"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaticLspAny (list): list of defined static LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-lsps/static-lsp"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp"
// Name (wildcarded): string
func (n *NetworkInstance_Mpls_LspsPath) StaticLspAny() *NetworkInstance_Mpls_Lsps_StaticLspPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-lsps", "static-lsp"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// StaticLspAny (list): list of defined static LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-lsps/static-lsp"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp"
// Name (wildcarded): string
func (n *NetworkInstance_Mpls_LspsPathAny) StaticLspAny() *NetworkInstance_Mpls_Lsps_StaticLspPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-lsps", "static-lsp"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// StaticLsp (list): list of defined static LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-lsps/static-lsp"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp"
// Name: string
func (n *NetworkInstance_Mpls_LspsPath) StaticLsp(Name string) *NetworkInstance_Mpls_Lsps_StaticLspPath {
	return &NetworkInstance_Mpls_Lsps_StaticLspPath{
		NodePath: ygot.NewNodePath(
			[]string{"static-lsps", "static-lsp"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// StaticLsp (list): list of defined static LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-lsps/static-lsp"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp"
// Name: string
func (n *NetworkInstance_Mpls_LspsPathAny) StaticLsp(Name string) *NetworkInstance_Mpls_Lsps_StaticLspPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-lsps", "static-lsp"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// UnconstrainedPath (container): LSPs that use the IGP-determined path, i.e., non
// traffic-engineered, or non constrained-path
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unconstrained-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/unconstrained-path"
func (n *NetworkInstance_Mpls_LspsPath) UnconstrainedPath() *NetworkInstance_Mpls_Lsps_UnconstrainedPathPath {
	return &NetworkInstance_Mpls_Lsps_UnconstrainedPathPath{
		NodePath: ygot.NewNodePath(
			[]string{"unconstrained-path"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnconstrainedPath (container): LSPs that use the IGP-determined path, i.e., non
// traffic-engineered, or non constrained-path
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unconstrained-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/unconstrained-path"
func (n *NetworkInstance_Mpls_LspsPathAny) UnconstrainedPath() *NetworkInstance_Mpls_Lsps_UnconstrainedPathPathAny {
	return &NetworkInstance_Mpls_Lsps_UnconstrainedPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unconstrained-path"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPathPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPathPathAny struct {
	*ygot.NodePath
}

// NamedExplicitPathAny (list): A list of explicit paths
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "named-explicit-paths/named-explicit-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path"
// Name (wildcarded): string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPathPath) NamedExplicitPathAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"named-explicit-paths", "named-explicit-path"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// NamedExplicitPathAny (list): A list of explicit paths
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "named-explicit-paths/named-explicit-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path"
// Name (wildcarded): string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPathPathAny) NamedExplicitPathAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"named-explicit-paths", "named-explicit-path"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// NamedExplicitPath (list): A list of explicit paths
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "named-explicit-paths/named-explicit-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path"
// Name: string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPathPath) NamedExplicitPath(Name string) *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPath{
		NodePath: ygot.NewNodePath(
			[]string{"named-explicit-paths", "named-explicit-path"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// NamedExplicitPath (list): A list of explicit paths
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "named-explicit-paths/named-explicit-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path"
// Name: string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPathPathAny) NamedExplicitPath(Name string) *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"named-explicit-paths", "named-explicit-path"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// TunnelAny (list): List of TE tunnels. This list contains only the LSPs that the
// current device originates (i.e., for which it is the head-end).
// Where the signaling protocol utilised for an LSP allows a mid-point
// or tail device to be aware of the LSP (e.g., RSVP-TE), then the
// associated sessions are maintained per protocol
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tunnels/tunnel"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel"
// Name (wildcarded): string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPathPath) TunnelAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tunnels", "tunnel"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// TunnelAny (list): List of TE tunnels. This list contains only the LSPs that the
// current device originates (i.e., for which it is the head-end).
// Where the signaling protocol utilised for an LSP allows a mid-point
// or tail device to be aware of the LSP (e.g., RSVP-TE), then the
// associated sessions are maintained per protocol
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tunnels/tunnel"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel"
// Name (wildcarded): string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPathPathAny) TunnelAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tunnels", "tunnel"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Tunnel (list): List of TE tunnels. This list contains only the LSPs that the
// current device originates (i.e., for which it is the head-end).
// Where the signaling protocol utilised for an LSP allows a mid-point
// or tail device to be aware of the LSP (e.g., RSVP-TE), then the
// associated sessions are maintained per protocol
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tunnels/tunnel"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel"
// Name: string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPathPath) Tunnel(Name string) *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath{
		NodePath: ygot.NewNodePath(
			[]string{"tunnels", "tunnel"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Tunnel (list): List of TE tunnels. This list contains only the LSPs that the
// current device originates (i.e., for which it is the head-end).
// Where the signaling protocol utilised for an LSP allows a mid-point
// or tail device to be aware of the LSP (e.g., RSVP-TE), then the
// associated sessions are maintained per protocol
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tunnels/tunnel"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel"
// Name: string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPathPathAny) Tunnel(Name string) *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tunnels", "tunnel"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_NamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/config/name YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/config/name YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_NamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_SidProtectionRequiredPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/config/sid-protection-required YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_SidProtectionRequiredPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_SidProtectionRequiredPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/config/sid-protection-required YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_SidProtectionRequiredPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_SidSelectionModePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/config/sid-selection-mode YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_SidSelectionModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_SidSelectionModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/config/sid-selection-mode YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_SidSelectionModePathAny struct {
	*ygot.NodePath
}

// ExplicitRouteObjectAny (list): List of explicit route objects
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "explicit-route-objects/explicit-route-object"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object"
// Index (wildcarded): uint8
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPath) ExplicitRouteObjectAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"explicit-route-objects", "explicit-route-object"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// ExplicitRouteObjectAny (list): List of explicit route objects
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "explicit-route-objects/explicit-route-object"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object"
// Index (wildcarded): uint8
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPathAny) ExplicitRouteObjectAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"explicit-route-objects", "explicit-route-object"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// ExplicitRouteObject (list): List of explicit route objects
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "explicit-route-objects/explicit-route-object"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object"
// Index: uint8
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPath) ExplicitRouteObject(Index uint8) *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPath{
		NodePath: ygot.NewNodePath(
			[]string{"explicit-route-objects", "explicit-route-object"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// ExplicitRouteObject (list): List of explicit route objects
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "explicit-route-objects/explicit-route-object"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object"
// Index: uint8
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPathAny) ExplicitRouteObject(Index uint8) *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"explicit-route-objects", "explicit-route-object"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Name (leaf): A string name that uniquely identifies an explicit
// path
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/config/name"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPath) Name() *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_NamePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): A string name that uniquely identifies an explicit
// path
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/config/name"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPathAny) Name() *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_NamePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidProtectionRequired (leaf): When this value is set to true, only SIDs that are
// protected are to be selected by the calculating method
// when the explicit path is instantiated by a SR-TE LSP.
// ----------------------------------------
// Defining module: "openconfig-mpls-sr"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/sid-protection-required"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/config/sid-protection-required"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPath) SidProtectionRequired() *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_SidProtectionRequiredPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_SidProtectionRequiredPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "sid-protection-required"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidProtectionRequired (leaf): When this value is set to true, only SIDs that are
// protected are to be selected by the calculating method
// when the explicit path is instantiated by a SR-TE LSP.
// ----------------------------------------
// Defining module: "openconfig-mpls-sr"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/sid-protection-required"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/config/sid-protection-required"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPathAny) SidProtectionRequired() *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_SidProtectionRequiredPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_SidProtectionRequiredPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "sid-protection-required"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidSelectionMode (leaf): The restrictions placed on the SIDs to be selected by the
// calculation method for the explicit path when it is
// instantiated for a SR-TE LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-sr"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/sid-selection-mode"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/config/sid-selection-mode"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPath) SidSelectionMode() *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_SidSelectionModePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_SidSelectionModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "sid-selection-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidSelectionMode (leaf): The restrictions placed on the SIDs to be selected by the
// calculation method for the explicit path when it is
// instantiated for a SR-TE LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-sr"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/sid-selection-mode"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/config/sid-selection-mode"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPathPathAny) SidSelectionMode() *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_SidSelectionModePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_SidSelectionModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "sid-selection-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object/config/address YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object/config/address YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_HopTypePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object/config/hop-type YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_HopTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_HopTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object/config/hop-type YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_HopTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object/config/index YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object/config/index YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_IndexPathAny struct {
	*ygot.NodePath
}

// Address (leaf): router hop for the LSP path
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/address"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object/config/address"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPath) Address() *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_AddressPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): router hop for the LSP path
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/address"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object/config/address"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPathAny) Address() *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_AddressPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// HopType (leaf): strict or loose hop
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hop-type"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object/config/hop-type"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPath) HopType() *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_HopTypePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_HopTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hop-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// HopType (leaf): strict or loose hop
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hop-type"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object/config/hop-type"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPathAny) HopType() *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_HopTypePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_HopTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hop-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): Index of this explicit route object to express
// the order of hops in the path
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/index"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object/config/index"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPath) Index() *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_IndexPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): Index of this explicit route object to express
// the order of hops in the path
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/index"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object/config/index"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObjectPathAny) Index() *NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_IndexPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_AdminStatusPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/admin-status YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_AdminStatusPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_AdminStatusPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/admin-status YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_AdminStatusPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_DescriptionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/description YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_DescriptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_DescriptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/description YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_DescriptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_HoldPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/hold-priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_HoldPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_HoldPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/hold-priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_HoldPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/metric YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/metric YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_MetricTypePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/metric-type YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_MetricTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_MetricTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/metric-type YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_MetricTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_NamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/name YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/name YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_NamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_PreferencePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/preference YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_PreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_PreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/preference YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_PreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ProtectionStyleRequestedPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/protection-style-requested YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ProtectionStyleRequestedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ProtectionStyleRequestedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/protection-style-requested YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ProtectionStyleRequestedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ReoptimizeTimerPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/reoptimize-timer YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ReoptimizeTimerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ReoptimizeTimerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/reoptimize-timer YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ReoptimizeTimerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SetupPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/setup-priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SetupPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SetupPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/setup-priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SetupPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ShortcutEligiblePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/shortcut-eligible YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ShortcutEligiblePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ShortcutEligiblePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/shortcut-eligible YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ShortcutEligiblePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SignalingProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/signaling-protocol YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SignalingProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SignalingProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/signaling-protocol YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SignalingProtocolPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SoftPreemptionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/soft-preemption YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SoftPreemptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SoftPreemptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/soft-preemption YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SoftPreemptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SourcePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/source YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SourcePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SourcePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/source YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SourcePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_TypePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/type YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/type YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_TypePathAny struct {
	*ygot.NodePath
}

// AdminStatus (leaf): TE tunnel administrative state.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/admin-status"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/admin-status"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath) AdminStatus() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_AdminStatusPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_AdminStatusPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "admin-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminStatus (leaf): TE tunnel administrative state.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/admin-status"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/admin-status"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny) AdminStatus() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_AdminStatusPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_AdminStatusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "admin-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (container): Bandwidth configuration for TE LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath) Bandwidth() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_BandwidthPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (container): Bandwidth configuration for TE LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny) Bandwidth() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_BandwidthPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): optional text description for the tunnel
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/description"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath) Description() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_DescriptionPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): optional text description for the tunnel
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/description"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny) Description() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_DescriptionPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldPriority (leaf): preemption priority once the LSP is established,
// lower is higher priority; default 0 indicates other LSPs
// will not preempt the LSPs once established
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hold-priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/hold-priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath) HoldPriority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_HoldPriorityPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_HoldPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hold-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldPriority (leaf): preemption priority once the LSP is established,
// lower is higher priority; default 0 indicates other LSPs
// will not preempt the LSPs once established
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hold-priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/hold-priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny) HoldPriority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_HoldPriorityPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_HoldPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hold-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The value of the metric that should be specified. The value
// supplied in this leaf is used in conjunction with the metric
// type to determine the value of the metric used by the system.
// Where the metric-type is set to LSP_METRIC_ABSOLUTE - the
// value of this leaf is used directly; where it is set to
// LSP_METRIC_RELATIVE, the relevant (positive or negative)
// offset is used to formulate the metric; where metric-type
// is LSP_METRIC_INHERITED, the value of this leaf is not
// utilised
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/metric"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath) Metric() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_MetricPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The value of the metric that should be specified. The value
// supplied in this leaf is used in conjunction with the metric
// type to determine the value of the metric used by the system.
// Where the metric-type is set to LSP_METRIC_ABSOLUTE - the
// value of this leaf is used directly; where it is set to
// LSP_METRIC_RELATIVE, the relevant (positive or negative)
// offset is used to formulate the metric; where metric-type
// is LSP_METRIC_INHERITED, the value of this leaf is not
// utilised
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/metric"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny) Metric() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_MetricPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricType (leaf): The type of metric specification that should be used to set
// the LSP(s) metric
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric-type"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/metric-type"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath) MetricType() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_MetricTypePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_MetricTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricType (leaf): The type of metric specification that should be used to set
// the LSP(s) metric
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric-type"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/metric-type"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny) MetricType() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_MetricTypePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_MetricTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The tunnel name
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/name"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath) Name() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_NamePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The tunnel name
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/name"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny) Name() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_NamePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// P2PTunnelAttributes (container): Parameters related to LSPs of type P2P
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "p2p-tunnel-attributes"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath) P2PTunnelAttributes() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPath{
		NodePath: ygot.NewNodePath(
			[]string{"p2p-tunnel-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// P2PTunnelAttributes (container): Parameters related to LSPs of type P2P
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "p2p-tunnel-attributes"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny) P2PTunnelAttributes() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"p2p-tunnel-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Specifies a preference for this tunnel.
// A lower number signifies a better preference
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/preference"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/preference"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath) Preference() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_PreferencePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Specifies a preference for this tunnel.
// A lower number signifies a better preference
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/preference"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/preference"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny) Preference() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_PreferencePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtectionStyleRequested (leaf): style of mpls frr protection desired: can be
// link, link-node or unprotected.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/protection-style-requested"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/protection-style-requested"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath) ProtectionStyleRequested() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ProtectionStyleRequestedPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ProtectionStyleRequestedPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "protection-style-requested"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtectionStyleRequested (leaf): style of mpls frr protection desired: can be
// link, link-node or unprotected.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/protection-style-requested"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/protection-style-requested"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny) ProtectionStyleRequested() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ProtectionStyleRequestedPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ProtectionStyleRequestedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "protection-style-requested"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReoptimizeTimer (leaf): frequency of reoptimization of
// a traffic engineered LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/reoptimize-timer"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/reoptimize-timer"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath) ReoptimizeTimer() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ReoptimizeTimerPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ReoptimizeTimerPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "reoptimize-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReoptimizeTimer (leaf): frequency of reoptimization of
// a traffic engineered LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/reoptimize-timer"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/reoptimize-timer"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny) ReoptimizeTimer() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ReoptimizeTimerPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ReoptimizeTimerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "reoptimize-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetupPriority (leaf): RSVP-TE preemption priority during LSP setup, lower is
// higher priority; default 7 indicates that LSP will not
// preempt established LSPs during setup
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/setup-priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/setup-priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath) SetupPriority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SetupPriorityPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SetupPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "setup-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetupPriority (leaf): RSVP-TE preemption priority during LSP setup, lower is
// higher priority; default 7 indicates that LSP will not
// preempt established LSPs during setup
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/setup-priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/setup-priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny) SetupPriority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SetupPriorityPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "setup-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// ShortcutEligible (leaf): Whether this LSP is considered to be eligible for us as a
// shortcut in the IGP. In the case that this leaf is set to
// true, the IGP SPF calculation uses the metric specified to
// determine whether traffic should be carried over this LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/shortcut-eligible"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/shortcut-eligible"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath) ShortcutEligible() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ShortcutEligiblePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ShortcutEligiblePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "shortcut-eligible"},
			map[string]interface{}{},
			n,
		),
	}
}

// ShortcutEligible (leaf): Whether this LSP is considered to be eligible for us as a
// shortcut in the IGP. In the case that this leaf is set to
// true, the IGP SPF calculation uses the metric specified to
// determine whether traffic should be carried over this LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/shortcut-eligible"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/shortcut-eligible"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny) ShortcutEligible() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ShortcutEligiblePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_ShortcutEligiblePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "shortcut-eligible"},
			map[string]interface{}{},
			n,
		),
	}
}

// SignalingProtocol (leaf): Signaling protocol used to set up this tunnel
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/signaling-protocol"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/signaling-protocol"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath) SignalingProtocol() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SignalingProtocolPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SignalingProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "signaling-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// SignalingProtocol (leaf): Signaling protocol used to set up this tunnel
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/signaling-protocol"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/signaling-protocol"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny) SignalingProtocol() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SignalingProtocolPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SignalingProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "signaling-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftPreemption (leaf): Enables RSVP soft-preemption on this LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/soft-preemption"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/soft-preemption"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath) SoftPreemption() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SoftPreemptionPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SoftPreemptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "soft-preemption"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftPreemption (leaf): Enables RSVP soft-preemption on this LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/soft-preemption"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/soft-preemption"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny) SoftPreemption() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SoftPreemptionPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SoftPreemptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "soft-preemption"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): RSVP-TE tunnel source address
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/source"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath) Source() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SourcePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): RSVP-TE tunnel source address
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/source"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny) Source() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SourcePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Tunnel type, p2p or p2mp
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/type"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/type"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPath) Type() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_TypePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Tunnel type, p2p or p2mp
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/type"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/config/type"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_TunnelPathAny) Type() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_TypePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_SetBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/config/set-bandwidth YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_SetBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_SetBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/config/set-bandwidth YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_SetBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_SpecificationTypePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/config/specification-type YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_SpecificationTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_SpecificationTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/config/specification-type YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_SpecificationTypePathAny struct {
	*ygot.NodePath
}

// AutoBandwidth (container): Parameters related to auto-bandwidth
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "auto-bandwidth"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_BandwidthPath) AutoBandwidth() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"auto-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// AutoBandwidth (container): Parameters related to auto-bandwidth
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "auto-bandwidth"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_BandwidthPathAny) AutoBandwidth() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"auto-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetBandwidth (leaf): set bandwidth explicitly, e.g., using
// offline calculation
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set-bandwidth"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/config/set-bandwidth"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_BandwidthPath) SetBandwidth() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_SetBandwidthPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_SetBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetBandwidth (leaf): set bandwidth explicitly, e.g., using
// offline calculation
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set-bandwidth"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/config/set-bandwidth"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_BandwidthPathAny) SetBandwidth() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_SetBandwidthPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_SetBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpecificationType (leaf): The method used for settign the bandwidth, either explicitly
// specified or configured
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/specification-type"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/config/specification-type"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_BandwidthPath) SpecificationType() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_SpecificationTypePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_SpecificationTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "specification-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpecificationType (leaf): The method used for settign the bandwidth, either explicitly
// specified or configured
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/specification-type"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/config/specification-type"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_BandwidthPathAny) SpecificationType() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_SpecificationTypePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_SpecificationTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "specification-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_AdjustIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/adjust-interval YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_AdjustIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_AdjustIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/adjust-interval YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_AdjustIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_AdjustThresholdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/adjust-threshold YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_AdjustThresholdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_AdjustThresholdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/adjust-threshold YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_AdjustThresholdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/enabled YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/enabled YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_MaxBwPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/max-bw YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_MaxBwPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_MaxBwPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/max-bw YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_MaxBwPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_MinBwPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/min-bw YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_MinBwPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_MinBwPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/min-bw YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_MinBwPathAny struct {
	*ygot.NodePath
}

// AdjustInterval (leaf): time in seconds between adjustments to
// LSP bandwidth
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/adjust-interval"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/adjust-interval"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPath) AdjustInterval() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_AdjustIntervalPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_AdjustIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "adjust-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjustInterval (leaf): time in seconds between adjustments to
// LSP bandwidth
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/adjust-interval"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/adjust-interval"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPathAny) AdjustInterval() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_AdjustIntervalPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_AdjustIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "adjust-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjustThreshold (leaf): percentage difference between the LSP's
// specified bandwidth and its current bandwidth
// allocation -- if the difference is greater than the
// specified percentage, auto-bandwidth adjustment is
// triggered
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/adjust-threshold"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/adjust-threshold"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPath) AdjustThreshold() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_AdjustThresholdPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_AdjustThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "adjust-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjustThreshold (leaf): percentage difference between the LSP's
// specified bandwidth and its current bandwidth
// allocation -- if the difference is greater than the
// specified percentage, auto-bandwidth adjustment is
// triggered
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/adjust-threshold"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/adjust-threshold"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPathAny) AdjustThreshold() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_AdjustThresholdPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_AdjustThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "adjust-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): enables mpls auto-bandwidth on the
// lsp
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/enabled"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPath) Enabled() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_EnabledPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): enables mpls auto-bandwidth on the
// lsp
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/enabled"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPathAny) Enabled() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_EnabledPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxBw (leaf): set the maximum bandwidth in Kbps for an
// auto-bandwidth LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-bw"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/max-bw"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPath) MaxBw() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_MaxBwPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_MaxBwPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-bw"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxBw (leaf): set the maximum bandwidth in Kbps for an
// auto-bandwidth LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-bw"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/max-bw"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPathAny) MaxBw() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_MaxBwPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_MaxBwPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-bw"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinBw (leaf): set the minimum bandwidth in Kbps for an
// auto-bandwidth LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/min-bw"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/min-bw"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPath) MinBw() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_MinBwPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_MinBwPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "min-bw"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinBw (leaf): set the minimum bandwidth in Kbps for an
// auto-bandwidth LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/min-bw"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/config/min-bw"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPathAny) MinBw() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_MinBwPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_MinBwPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "min-bw"},
			map[string]interface{}{},
			n,
		),
	}
}

// Overflow (container): configuration of MPLS overflow bandwidth
// adjustement for the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "overflow"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/overflow"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPath) Overflow() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_OverflowPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_OverflowPath{
		NodePath: ygot.NewNodePath(
			[]string{"overflow"},
			map[string]interface{}{},
			n,
		),
	}
}

// Overflow (container): configuration of MPLS overflow bandwidth
// adjustement for the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "overflow"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/overflow"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPathAny) Overflow() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_OverflowPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_OverflowPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"overflow"},
			map[string]interface{}{},
			n,
		),
	}
}

// Underflow (container): configuration of MPLS underflow bandwidth
// adjustement for the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "underflow"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/underflow"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPath) Underflow() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_UnderflowPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_UnderflowPath{
		NodePath: ygot.NewNodePath(
			[]string{"underflow"},
			map[string]interface{}{},
			n,
		),
	}
}

// Underflow (container): configuration of MPLS underflow bandwidth
// adjustement for the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "underflow"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/underflow"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidthPathAny) Underflow() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_UnderflowPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_UnderflowPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"underflow"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_OverflowPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/overflow YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_OverflowPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_OverflowPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/overflow YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_OverflowPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/overflow/config/enabled YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/overflow/config/enabled YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_OverflowThresholdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/overflow/config/overflow-threshold YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_OverflowThresholdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_OverflowThresholdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/overflow/config/overflow-threshold YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_OverflowThresholdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_TriggerEventCountPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/overflow/config/trigger-event-count YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_TriggerEventCountPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_TriggerEventCountPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/overflow/config/trigger-event-count YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_TriggerEventCountPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): enables mpls lsp bandwidth overflow
// adjustment on the lsp
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/overflow/config/enabled"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_OverflowPath) Enabled() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_EnabledPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): enables mpls lsp bandwidth overflow
// adjustment on the lsp
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/overflow/config/enabled"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_OverflowPathAny) Enabled() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_EnabledPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// OverflowThreshold (leaf): bandwidth percentage change to trigger
// an overflow event
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/overflow-threshold"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/overflow/config/overflow-threshold"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_OverflowPath) OverflowThreshold() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_OverflowThresholdPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_OverflowThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "overflow-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// OverflowThreshold (leaf): bandwidth percentage change to trigger
// an overflow event
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/overflow-threshold"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/overflow/config/overflow-threshold"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_OverflowPathAny) OverflowThreshold() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_OverflowThresholdPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_OverflowThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "overflow-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// TriggerEventCount (leaf): number of consecutive overflow sample
// events needed to trigger an overflow adjustment
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/trigger-event-count"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/overflow/config/trigger-event-count"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_OverflowPath) TriggerEventCount() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_TriggerEventCountPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_TriggerEventCountPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "trigger-event-count"},
			map[string]interface{}{},
			n,
		),
	}
}

// TriggerEventCount (leaf): number of consecutive overflow sample
// events needed to trigger an overflow adjustment
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/trigger-event-count"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/overflow/config/trigger-event-count"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_OverflowPathAny) TriggerEventCount() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_TriggerEventCountPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow_TriggerEventCountPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "trigger-event-count"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_UnderflowPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/underflow YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_UnderflowPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_UnderflowPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/underflow YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_UnderflowPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/underflow/config/enabled YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/underflow/config/enabled YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_TriggerEventCountPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/underflow/config/trigger-event-count YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_TriggerEventCountPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_TriggerEventCountPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/underflow/config/trigger-event-count YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_TriggerEventCountPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_UnderflowThresholdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/underflow/config/underflow-threshold YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_UnderflowThresholdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_UnderflowThresholdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/underflow/config/underflow-threshold YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_UnderflowThresholdPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): enables bandwidth underflow
// adjustment on the lsp
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/underflow/config/enabled"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_UnderflowPath) Enabled() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_EnabledPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): enables bandwidth underflow
// adjustment on the lsp
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/underflow/config/enabled"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_UnderflowPathAny) Enabled() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_EnabledPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// TriggerEventCount (leaf): number of consecutive underflow sample
// events needed to trigger an underflow adjustment
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/trigger-event-count"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/underflow/config/trigger-event-count"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_UnderflowPath) TriggerEventCount() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_TriggerEventCountPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_TriggerEventCountPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "trigger-event-count"},
			map[string]interface{}{},
			n,
		),
	}
}

// TriggerEventCount (leaf): number of consecutive underflow sample
// events needed to trigger an underflow adjustment
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/trigger-event-count"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/underflow/config/trigger-event-count"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_UnderflowPathAny) TriggerEventCount() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_TriggerEventCountPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_TriggerEventCountPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "trigger-event-count"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnderflowThreshold (leaf): bandwidth percentage change to trigger
// and underflow event
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/underflow-threshold"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/underflow/config/underflow-threshold"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_UnderflowPath) UnderflowThreshold() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_UnderflowThresholdPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_UnderflowThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "underflow-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnderflowThreshold (leaf): bandwidth percentage change to trigger
// and underflow event
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/underflow-threshold"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/underflow/config/underflow-threshold"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_UnderflowPathAny) UnderflowThreshold() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_UnderflowThresholdPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow_UnderflowThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "underflow-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_DestinationPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/config/destination YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_DestinationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_DestinationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/config/destination YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_DestinationPathAny struct {
	*ygot.NodePath
}

// Destination (leaf): P2P tunnel destination address
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/destination"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/config/destination"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPath) Destination() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_DestinationPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_DestinationPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "destination"},
			map[string]interface{}{},
			n,
		),
	}
}

// Destination (leaf): P2P tunnel destination address
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/destination"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/config/destination"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPathAny) Destination() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_DestinationPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_DestinationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "destination"},
			map[string]interface{}{},
			n,
		),
	}
}

// P2PPrimaryPathAny (list): List of p2p primary paths for a tunnel
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "p2p-primary-path/p2p-primary-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path"
// Name (wildcarded): string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPath) P2PPrimaryPathAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"p2p-primary-path", "p2p-primary-path"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// P2PPrimaryPathAny (list): List of p2p primary paths for a tunnel
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "p2p-primary-path/p2p-primary-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path"
// Name (wildcarded): string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPathAny) P2PPrimaryPathAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"p2p-primary-path", "p2p-primary-path"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// P2PPrimaryPath (list): List of p2p primary paths for a tunnel
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "p2p-primary-path/p2p-primary-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path"
// Name: string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPath) P2PPrimaryPath(Name string) *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath{
		NodePath: ygot.NewNodePath(
			[]string{"p2p-primary-path", "p2p-primary-path"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// P2PPrimaryPath (list): List of p2p primary paths for a tunnel
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "p2p-primary-path/p2p-primary-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path"
// Name: string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPathAny) P2PPrimaryPath(Name string) *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"p2p-primary-path", "p2p-primary-path"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// P2PSecondaryPathAny (list): List of p2p primary paths for a tunnel
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "p2p-secondary-paths/p2p-secondary-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path"
// Name (wildcarded): string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPath) P2PSecondaryPathAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"p2p-secondary-paths", "p2p-secondary-path"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// P2PSecondaryPathAny (list): List of p2p primary paths for a tunnel
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "p2p-secondary-paths/p2p-secondary-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path"
// Name (wildcarded): string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPathAny) P2PSecondaryPathAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"p2p-secondary-paths", "p2p-secondary-path"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// P2PSecondaryPath (list): List of p2p primary paths for a tunnel
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "p2p-secondary-paths/p2p-secondary-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path"
// Name: string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPath) P2PSecondaryPath(Name string) *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath{
		NodePath: ygot.NewNodePath(
			[]string{"p2p-secondary-paths", "p2p-secondary-path"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// P2PSecondaryPath (list): List of p2p primary paths for a tunnel
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "p2p-secondary-paths/p2p-secondary-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path"
// Name: string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributesPathAny) P2PSecondaryPath(Name string) *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"p2p-secondary-paths", "p2p-secondary-path"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CspfTiebreakerPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/cspf-tiebreaker YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CspfTiebreakerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CspfTiebreakerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/cspf-tiebreaker YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CspfTiebreakerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_ExplicitPathNamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/explicit-path-name YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_ExplicitPathNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_ExplicitPathNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/explicit-path-name YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_ExplicitPathNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_HoldPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/hold-priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_HoldPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_HoldPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/hold-priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_HoldPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_NamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/name YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/name YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_NamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathComputationMethodPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/path-computation-method YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathComputationMethodPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathComputationMethodPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/path-computation-method YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathComputationMethodPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathComputationServerPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/path-computation-server YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathComputationServerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathComputationServerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/path-computation-server YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathComputationServerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PreferencePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/preference YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/preference YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_RetryTimerPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/retry-timer YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_RetryTimerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_RetryTimerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/retry-timer YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_RetryTimerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_SetupPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/setup-priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_SetupPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_SetupPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/setup-priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_SetupPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_UseCspfPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/use-cspf YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_UseCspfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_UseCspfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/use-cspf YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_UseCspfPathAny struct {
	*ygot.NodePath
}

// AdminGroups (container): Top-level container for include/exclude constraints for
// link affinities
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-groups"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath) AdminGroups() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"admin-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroups (container): Top-level container for include/exclude constraints for
// link affinities
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-groups"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny) AdminGroups() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"admin-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// CandidateSecondaryPathAny (list): List of secondary paths which may be utilised when the
// current primary path is in use
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "candidate-secondary-paths/candidate-secondary-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path"
// SecondaryPath (wildcarded): string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath) CandidateSecondaryPathAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"candidate-secondary-paths", "candidate-secondary-path"},
			map[string]interface{}{"secondary-path": "*"},
			n,
		),
	}
}

// CandidateSecondaryPathAny (list): List of secondary paths which may be utilised when the
// current primary path is in use
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "candidate-secondary-paths/candidate-secondary-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path"
// SecondaryPath (wildcarded): string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny) CandidateSecondaryPathAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"candidate-secondary-paths", "candidate-secondary-path"},
			map[string]interface{}{"secondary-path": "*"},
			n,
		),
	}
}

// CandidateSecondaryPath (list): List of secondary paths which may be utilised when the
// current primary path is in use
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "candidate-secondary-paths/candidate-secondary-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path"
// SecondaryPath: string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath) CandidateSecondaryPath(SecondaryPath string) *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPath{
		NodePath: ygot.NewNodePath(
			[]string{"candidate-secondary-paths", "candidate-secondary-path"},
			map[string]interface{}{"secondary-path": SecondaryPath},
			n,
		),
	}
}

// CandidateSecondaryPath (list): List of secondary paths which may be utilised when the
// current primary path is in use
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "candidate-secondary-paths/candidate-secondary-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path"
// SecondaryPath: string
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny) CandidateSecondaryPath(SecondaryPath string) *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"candidate-secondary-paths", "candidate-secondary-path"},
			map[string]interface{}{"secondary-path": SecondaryPath},
			n,
		),
	}
}

// CspfTiebreaker (leaf): Determine the tie-breaking method to choose between
// equally desirable paths during CSFP computation
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/cspf-tiebreaker"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/cspf-tiebreaker"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath) CspfTiebreaker() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CspfTiebreakerPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CspfTiebreakerPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "cspf-tiebreaker"},
			map[string]interface{}{},
			n,
		),
	}
}

// CspfTiebreaker (leaf): Determine the tie-breaking method to choose between
// equally desirable paths during CSFP computation
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/cspf-tiebreaker"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/cspf-tiebreaker"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny) CspfTiebreaker() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CspfTiebreakerPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CspfTiebreakerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "cspf-tiebreaker"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExplicitPathName (leaf): reference to a defined path
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/explicit-path-name"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/explicit-path-name"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath) ExplicitPathName() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_ExplicitPathNamePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_ExplicitPathNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "explicit-path-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExplicitPathName (leaf): reference to a defined path
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/explicit-path-name"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/explicit-path-name"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny) ExplicitPathName() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_ExplicitPathNamePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_ExplicitPathNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "explicit-path-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldPriority (leaf): preemption priority once the LSP is established,
// lower is higher priority; default 0 indicates other LSPs
// will not preempt the LSPs once established
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hold-priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/hold-priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath) HoldPriority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_HoldPriorityPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_HoldPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hold-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldPriority (leaf): preemption priority once the LSP is established,
// lower is higher priority; default 0 indicates other LSPs
// will not preempt the LSPs once established
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hold-priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/hold-priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny) HoldPriority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_HoldPriorityPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_HoldPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hold-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Path name
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/name"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath) Name() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_NamePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Path name
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/name"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny) Name() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_NamePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathComputationMethod (leaf): The method used for computing the path, either
// locally computed, queried from a server or not
// computed at all (explicitly configured).
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/path-computation-method"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/path-computation-method"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath) PathComputationMethod() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathComputationMethodPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathComputationMethodPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "path-computation-method"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathComputationMethod (leaf): The method used for computing the path, either
// locally computed, queried from a server or not
// computed at all (explicitly configured).
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/path-computation-method"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/path-computation-method"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny) PathComputationMethod() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathComputationMethodPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathComputationMethodPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "path-computation-method"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathComputationServer (leaf): Address of the external path computation
// server
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/path-computation-server"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/path-computation-server"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath) PathComputationServer() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathComputationServerPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathComputationServerPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "path-computation-server"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathComputationServer (leaf): Address of the external path computation
// server
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/path-computation-server"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/path-computation-server"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny) PathComputationServer() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathComputationServerPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathComputationServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "path-computation-server"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathMetricBoundConstraintAny (list): A list of metric bounds that are applied as constraints to the LSP.
// It act as a logical AND, hence all of them must be satisfied.
// If not, it will return an error.
// Constraints within this list may be applicable to either
// the local CSPF process (where data is available to the local device)
// or be communicated to a PCE for calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-metric-bound-constraints/path-metric-bound-constraint"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint"
// Type (wildcarded): oc.E_MplsTypes_PATH_METRIC_TYPE
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath) PathMetricBoundConstraintAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-metric-bound-constraints", "path-metric-bound-constraint"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// PathMetricBoundConstraintAny (list): A list of metric bounds that are applied as constraints to the LSP.
// It act as a logical AND, hence all of them must be satisfied.
// If not, it will return an error.
// Constraints within this list may be applicable to either
// the local CSPF process (where data is available to the local device)
// or be communicated to a PCE for calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-metric-bound-constraints/path-metric-bound-constraint"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint"
// Type (wildcarded): oc.E_MplsTypes_PATH_METRIC_TYPE
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny) PathMetricBoundConstraintAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-metric-bound-constraints", "path-metric-bound-constraint"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// PathMetricBoundConstraint (list): A list of metric bounds that are applied as constraints to the LSP.
// It act as a logical AND, hence all of them must be satisfied.
// If not, it will return an error.
// Constraints within this list may be applicable to either
// the local CSPF process (where data is available to the local device)
// or be communicated to a PCE for calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-metric-bound-constraints/path-metric-bound-constraint"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint"
// Type: oc.E_MplsTypes_PATH_METRIC_TYPE
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath) PathMetricBoundConstraint(Type oc.E_MplsTypes_PATH_METRIC_TYPE) *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPath{
		NodePath: ygot.NewNodePath(
			[]string{"path-metric-bound-constraints", "path-metric-bound-constraint"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// PathMetricBoundConstraint (list): A list of metric bounds that are applied as constraints to the LSP.
// It act as a logical AND, hence all of them must be satisfied.
// If not, it will return an error.
// Constraints within this list may be applicable to either
// the local CSPF process (where data is available to the local device)
// or be communicated to a PCE for calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-metric-bound-constraints/path-metric-bound-constraint"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint"
// Type: oc.E_MplsTypes_PATH_METRIC_TYPE
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny) PathMetricBoundConstraint(Type oc.E_MplsTypes_PATH_METRIC_TYPE) *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-metric-bound-constraints", "path-metric-bound-constraint"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Preference (leaf): Specifies a preference for this path. The lower the
// number higher the preference
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/preference"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/preference"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath) Preference() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PreferencePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Specifies a preference for this path. The lower the
// number higher the preference
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/preference"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/preference"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny) Preference() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PreferencePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetryTimer (leaf): sets the time between attempts to establish the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/retry-timer"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/retry-timer"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath) RetryTimer() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_RetryTimerPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_RetryTimerPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "retry-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetryTimer (leaf): sets the time between attempts to establish the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/retry-timer"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/retry-timer"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny) RetryTimer() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_RetryTimerPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_RetryTimerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "retry-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetupPriority (leaf): RSVP-TE preemption priority during LSP setup, lower is
// higher priority; default 7 indicates that LSP will not
// preempt established LSPs during setup
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/setup-priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/setup-priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath) SetupPriority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_SetupPriorityPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_SetupPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "setup-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetupPriority (leaf): RSVP-TE preemption priority during LSP setup, lower is
// higher priority; default 7 indicates that LSP will not
// preempt established LSPs during setup
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/setup-priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/setup-priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny) SetupPriority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_SetupPriorityPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "setup-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseCspf (leaf): Flag to enable CSPF for locally computed LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/use-cspf"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/use-cspf"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPath) UseCspf() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_UseCspfPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_UseCspfPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "use-cspf"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseCspf (leaf): Flag to enable CSPF for locally computed LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/use-cspf"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/config/use-cspf"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPathPathAny) UseCspf() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_UseCspfPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_UseCspfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "use-cspf"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_ExcludeGroupPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/config/exclude-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_ExcludeGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_ExcludeGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/config/exclude-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_ExcludeGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAllGroupPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/config/include-all-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAllGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAllGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/config/include-all-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAllGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAnyGroupPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/config/include-any-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAnyGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAnyGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/config/include-any-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAnyGroupPathAny struct {
	*ygot.NodePath
}

// ExcludeGroup (leaf-list): list of references to named admin-groups to exclude in
// path calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/exclude-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/config/exclude-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPath) ExcludeGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_ExcludeGroupPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_ExcludeGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "exclude-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExcludeGroup (leaf-list): list of references to named admin-groups to exclude in
// path calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/exclude-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/config/exclude-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPathAny) ExcludeGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_ExcludeGroupPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_ExcludeGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "exclude-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncludeAllGroup (leaf-list): list of references to named admin-groups of which all must
// be included
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/include-all-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/config/include-all-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPath) IncludeAllGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAllGroupPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAllGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "include-all-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncludeAllGroup (leaf-list): list of references to named admin-groups of which all must
// be included
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/include-all-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/config/include-all-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPathAny) IncludeAllGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAllGroupPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAllGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "include-all-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncludeAnyGroup (leaf-list): list of references to named admin-groups of which one must
// be included
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/include-any-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/config/include-any-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPath) IncludeAnyGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAnyGroupPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAnyGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "include-any-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncludeAnyGroup (leaf-list): list of references to named admin-groups of which one must
// be included
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/include-any-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/config/include-any-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPathAny) IncludeAnyGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAnyGroupPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAnyGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "include-any-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/config/priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/config/priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_PriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_SecondaryPathPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/config/secondary-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_SecondaryPathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_SecondaryPathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/config/secondary-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_SecondaryPathPathAny struct {
	*ygot.NodePath
}

// Priority (leaf): The priority of the specified secondary path option. Higher
// priority options are less preferable - such that a secondary
// path reference with a priority of 0 is the most preferred
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/config/priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPath) Priority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_PriorityPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The priority of the specified secondary path option. Higher
// priority options are less preferable - such that a secondary
// path reference with a priority of 0 is the most preferred
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/config/priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPathAny) Priority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_PriorityPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// SecondaryPath (leaf): A reference to the secondary path that should be utilised
// when the containing primary path option is in use
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/secondary-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/config/secondary-path"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPath) SecondaryPath() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_SecondaryPathPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_SecondaryPathPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "secondary-path"},
			map[string]interface{}{},
			n,
		),
	}
}

// SecondaryPath (leaf): A reference to the secondary path that should be utilised
// when the containing primary path option is in use
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/secondary-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/config/secondary-path"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPathAny) SecondaryPath() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_SecondaryPathPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_SecondaryPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "secondary-path"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_MetricUpperBoundPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint/config/metric-upper-bound YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_MetricUpperBoundPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_MetricUpperBoundPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint/config/metric-upper-bound YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_MetricUpperBoundPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_TypePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint/config/type YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint/config/type YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_TypePathAny struct {
	*ygot.NodePath
}

// MetricUpperBound (leaf): Upper bound on end-to-end path metric. A zero indicate
// an unbounded upper limit for the specific metric-type.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric-upper-bound"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint/config/metric-upper-bound"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPath) MetricUpperBound() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_MetricUpperBoundPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_MetricUpperBoundPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric-upper-bound"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricUpperBound (leaf): Upper bound on end-to-end path metric. A zero indicate
// an unbounded upper limit for the specific metric-type.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric-upper-bound"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint/config/metric-upper-bound"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPathAny) MetricUpperBound() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_MetricUpperBoundPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_MetricUpperBoundPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric-upper-bound"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Identifies an entry in the list of metric-types
// bound for the TE path.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/type"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint/config/type"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPath) Type() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_TypePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Identifies an entry in the list of metric-types
// bound for the TE path.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/type"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint/config/type"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPathAny) Type() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_TypePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfTiebreakerPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/cspf-tiebreaker YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfTiebreakerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfTiebreakerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/cspf-tiebreaker YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfTiebreakerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_ExplicitPathNamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/explicit-path-name YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_ExplicitPathNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_ExplicitPathNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/explicit-path-name YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_ExplicitPathNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_HoldPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/hold-priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_HoldPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_HoldPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/hold-priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_HoldPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_NamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/name YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/name YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_NamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationMethodPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/path-computation-method YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationMethodPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationMethodPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/path-computation-method YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationMethodPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationServerPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/path-computation-server YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationServerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationServerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/path-computation-server YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationServerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PreferencePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/preference YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/preference YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_RetryTimerPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/retry-timer YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_RetryTimerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_RetryTimerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/retry-timer YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_RetryTimerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SetupPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/setup-priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SetupPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SetupPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/setup-priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SetupPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_UseCspfPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/use-cspf YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_UseCspfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_UseCspfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/use-cspf YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_UseCspfPathAny struct {
	*ygot.NodePath
}

// AdminGroups (container): Top-level container for include/exclude constraints for
// link affinities
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-groups"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) AdminGroups() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"admin-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroups (container): Top-level container for include/exclude constraints for
// link affinities
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-groups"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) AdminGroups() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"admin-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// CspfTiebreaker (leaf): Determine the tie-breaking method to choose between
// equally desirable paths during CSFP computation
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/cspf-tiebreaker"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/cspf-tiebreaker"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) CspfTiebreaker() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfTiebreakerPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfTiebreakerPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "cspf-tiebreaker"},
			map[string]interface{}{},
			n,
		),
	}
}

// CspfTiebreaker (leaf): Determine the tie-breaking method to choose between
// equally desirable paths during CSFP computation
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/cspf-tiebreaker"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/cspf-tiebreaker"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) CspfTiebreaker() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfTiebreakerPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfTiebreakerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "cspf-tiebreaker"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExplicitPathName (leaf): reference to a defined path
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/explicit-path-name"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/explicit-path-name"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) ExplicitPathName() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_ExplicitPathNamePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_ExplicitPathNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "explicit-path-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExplicitPathName (leaf): reference to a defined path
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/explicit-path-name"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/explicit-path-name"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) ExplicitPathName() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_ExplicitPathNamePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_ExplicitPathNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "explicit-path-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldPriority (leaf): preemption priority once the LSP is established,
// lower is higher priority; default 0 indicates other LSPs
// will not preempt the LSPs once established
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hold-priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/hold-priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) HoldPriority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_HoldPriorityPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_HoldPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hold-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldPriority (leaf): preemption priority once the LSP is established,
// lower is higher priority; default 0 indicates other LSPs
// will not preempt the LSPs once established
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hold-priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/hold-priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) HoldPriority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_HoldPriorityPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_HoldPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hold-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Path name
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/name"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) Name() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_NamePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Path name
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/name"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) Name() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_NamePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathComputationMethod (leaf): The method used for computing the path, either
// locally computed, queried from a server or not
// computed at all (explicitly configured).
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/path-computation-method"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/path-computation-method"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) PathComputationMethod() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationMethodPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationMethodPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "path-computation-method"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathComputationMethod (leaf): The method used for computing the path, either
// locally computed, queried from a server or not
// computed at all (explicitly configured).
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/path-computation-method"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/path-computation-method"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) PathComputationMethod() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationMethodPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationMethodPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "path-computation-method"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathComputationServer (leaf): Address of the external path computation
// server
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/path-computation-server"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/path-computation-server"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) PathComputationServer() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationServerPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationServerPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "path-computation-server"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathComputationServer (leaf): Address of the external path computation
// server
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/path-computation-server"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/path-computation-server"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) PathComputationServer() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationServerPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "path-computation-server"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathMetricBoundConstraintAny (list): A list of metric bounds that are applied as constraints to the LSP.
// It act as a logical AND, hence all of them must be satisfied.
// If not, it will return an error.
// Constraints within this list may be applicable to either
// the local CSPF process (where data is available to the local device)
// or be communicated to a PCE for calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-metric-bound-constraints/path-metric-bound-constraint"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint"
// Type (wildcarded): oc.E_MplsTypes_PATH_METRIC_TYPE
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) PathMetricBoundConstraintAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-metric-bound-constraints", "path-metric-bound-constraint"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// PathMetricBoundConstraintAny (list): A list of metric bounds that are applied as constraints to the LSP.
// It act as a logical AND, hence all of them must be satisfied.
// If not, it will return an error.
// Constraints within this list may be applicable to either
// the local CSPF process (where data is available to the local device)
// or be communicated to a PCE for calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-metric-bound-constraints/path-metric-bound-constraint"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint"
// Type (wildcarded): oc.E_MplsTypes_PATH_METRIC_TYPE
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) PathMetricBoundConstraintAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-metric-bound-constraints", "path-metric-bound-constraint"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// PathMetricBoundConstraint (list): A list of metric bounds that are applied as constraints to the LSP.
// It act as a logical AND, hence all of them must be satisfied.
// If not, it will return an error.
// Constraints within this list may be applicable to either
// the local CSPF process (where data is available to the local device)
// or be communicated to a PCE for calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-metric-bound-constraints/path-metric-bound-constraint"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint"
// Type: oc.E_MplsTypes_PATH_METRIC_TYPE
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) PathMetricBoundConstraint(Type oc.E_MplsTypes_PATH_METRIC_TYPE) *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPath{
		NodePath: ygot.NewNodePath(
			[]string{"path-metric-bound-constraints", "path-metric-bound-constraint"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// PathMetricBoundConstraint (list): A list of metric bounds that are applied as constraints to the LSP.
// It act as a logical AND, hence all of them must be satisfied.
// If not, it will return an error.
// Constraints within this list may be applicable to either
// the local CSPF process (where data is available to the local device)
// or be communicated to a PCE for calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-metric-bound-constraints/path-metric-bound-constraint"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint"
// Type: oc.E_MplsTypes_PATH_METRIC_TYPE
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) PathMetricBoundConstraint(Type oc.E_MplsTypes_PATH_METRIC_TYPE) *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-metric-bound-constraints", "path-metric-bound-constraint"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Preference (leaf): Specifies a preference for this path. The lower the
// number higher the preference
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/preference"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/preference"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) Preference() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PreferencePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Specifies a preference for this path. The lower the
// number higher the preference
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/preference"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/preference"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) Preference() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PreferencePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetryTimer (leaf): sets the time between attempts to establish the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/retry-timer"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/retry-timer"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) RetryTimer() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_RetryTimerPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_RetryTimerPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "retry-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetryTimer (leaf): sets the time between attempts to establish the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/retry-timer"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/retry-timer"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) RetryTimer() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_RetryTimerPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_RetryTimerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "retry-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetupPriority (leaf): RSVP-TE preemption priority during LSP setup, lower is
// higher priority; default 7 indicates that LSP will not
// preempt established LSPs during setup
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/setup-priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/setup-priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) SetupPriority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SetupPriorityPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SetupPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "setup-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetupPriority (leaf): RSVP-TE preemption priority during LSP setup, lower is
// higher priority; default 7 indicates that LSP will not
// preempt established LSPs during setup
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/setup-priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/setup-priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) SetupPriority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SetupPriorityPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "setup-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseCspf (leaf): Flag to enable CSPF for locally computed LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/use-cspf"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/use-cspf"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) UseCspf() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_UseCspfPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_UseCspfPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "use-cspf"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseCspf (leaf): Flag to enable CSPF for locally computed LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/use-cspf"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/config/use-cspf"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) UseCspf() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_UseCspfPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_UseCspfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "use-cspf"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_ExcludeGroupPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/config/exclude-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_ExcludeGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_ExcludeGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/config/exclude-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_ExcludeGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAllGroupPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/config/include-all-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAllGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAllGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/config/include-all-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAllGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAnyGroupPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/config/include-any-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAnyGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAnyGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/config/include-any-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAnyGroupPathAny struct {
	*ygot.NodePath
}

// ExcludeGroup (leaf-list): list of references to named admin-groups to exclude in
// path calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/exclude-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/config/exclude-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPath) ExcludeGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_ExcludeGroupPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_ExcludeGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "exclude-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExcludeGroup (leaf-list): list of references to named admin-groups to exclude in
// path calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/exclude-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/config/exclude-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPathAny) ExcludeGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_ExcludeGroupPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_ExcludeGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "exclude-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncludeAllGroup (leaf-list): list of references to named admin-groups of which all must
// be included
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/include-all-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/config/include-all-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPath) IncludeAllGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAllGroupPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAllGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "include-all-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncludeAllGroup (leaf-list): list of references to named admin-groups of which all must
// be included
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/include-all-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/config/include-all-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPathAny) IncludeAllGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAllGroupPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAllGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "include-all-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncludeAnyGroup (leaf-list): list of references to named admin-groups of which one must
// be included
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/include-any-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/config/include-any-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPath) IncludeAnyGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAnyGroupPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAnyGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "include-any-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncludeAnyGroup (leaf-list): list of references to named admin-groups of which one must
// be included
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/include-any-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/config/include-any-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPathAny) IncludeAnyGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAnyGroupPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAnyGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "include-any-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_MetricUpperBoundPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint/config/metric-upper-bound YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_MetricUpperBoundPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_MetricUpperBoundPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint/config/metric-upper-bound YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_MetricUpperBoundPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_TypePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint/config/type YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint/config/type YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_TypePathAny struct {
	*ygot.NodePath
}

// MetricUpperBound (leaf): Upper bound on end-to-end path metric. A zero indicate
// an unbounded upper limit for the specific metric-type.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric-upper-bound"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint/config/metric-upper-bound"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPath) MetricUpperBound() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_MetricUpperBoundPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_MetricUpperBoundPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric-upper-bound"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricUpperBound (leaf): Upper bound on end-to-end path metric. A zero indicate
// an unbounded upper limit for the specific metric-type.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric-upper-bound"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint/config/metric-upper-bound"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny) MetricUpperBound() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_MetricUpperBoundPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_MetricUpperBoundPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric-upper-bound"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Identifies an entry in the list of metric-types
// bound for the TE path.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/type"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint/config/type"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPath) Type() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_TypePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Identifies an entry in the list of metric-types
// bound for the TE path.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/type"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint/config/type"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny) Type() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_TypePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_StaticLspPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_NamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/config/name YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/config/name YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_NamePathAny struct {
	*ygot.NodePath
}

// Egress (container): Static LSPs for which the router is an
//
//	egress node
//
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "egress"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress"
func (n *NetworkInstance_Mpls_Lsps_StaticLspPath) Egress() *NetworkInstance_Mpls_Lsps_StaticLsp_EgressPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_EgressPath{
		NodePath: ygot.NewNodePath(
			[]string{"egress"},
			map[string]interface{}{},
			n,
		),
	}
}

// Egress (container): Static LSPs for which the router is an
//
//	egress node
//
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "egress"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress"
func (n *NetworkInstance_Mpls_Lsps_StaticLspPathAny) Egress() *NetworkInstance_Mpls_Lsps_StaticLsp_EgressPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_EgressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"egress"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ingress (container): Static LSPs for which the router is an
//
//	ingress node
//
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ingress"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress"
func (n *NetworkInstance_Mpls_Lsps_StaticLspPath) Ingress() *NetworkInstance_Mpls_Lsps_StaticLsp_IngressPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_IngressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ingress"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ingress (container): Static LSPs for which the router is an
//
//	ingress node
//
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ingress"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress"
func (n *NetworkInstance_Mpls_Lsps_StaticLspPathAny) Ingress() *NetworkInstance_Mpls_Lsps_StaticLsp_IngressPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_IngressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ingress"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): name to identify the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/config/name"
func (n *NetworkInstance_Mpls_Lsps_StaticLspPath) Name() *NetworkInstance_Mpls_Lsps_StaticLsp_NamePath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): name to identify the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/config/name"
func (n *NetworkInstance_Mpls_Lsps_StaticLspPathAny) Name() *NetworkInstance_Mpls_Lsps_StaticLsp_NamePathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transit (container): Static LSPs for which the router is an
//
//	transit node
//
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transit"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit"
func (n *NetworkInstance_Mpls_Lsps_StaticLspPath) Transit() *NetworkInstance_Mpls_Lsps_StaticLsp_TransitPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_TransitPath{
		NodePath: ygot.NewNodePath(
			[]string{"transit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transit (container): Static LSPs for which the router is an
//
//	transit node
//
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transit"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit"
func (n *NetworkInstance_Mpls_Lsps_StaticLspPathAny) Transit() *NetworkInstance_Mpls_Lsps_StaticLsp_TransitPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_TransitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"transit"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_StaticLsp_EgressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_EgressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_EgressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_EgressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Egress_IncomingLabelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/incoming-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Egress_IncomingLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Egress_IncomingLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/incoming-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Egress_IncomingLabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Egress_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/next-hop YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Egress_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Egress_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/next-hop YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Egress_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Egress_PushLabelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/push-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Egress_PushLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Egress_PushLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/push-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Egress_PushLabelPathAny struct {
	*ygot.NodePath
}

// IncomingLabel (leaf): label value on the incoming packet
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/incoming-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/incoming-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_EgressPath) IncomingLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Egress_IncomingLabelPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Egress_IncomingLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "incoming-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncomingLabel (leaf): label value on the incoming packet
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/incoming-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/incoming-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_EgressPathAny) IncomingLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Egress_IncomingLabelPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Egress_IncomingLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "incoming-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): next hop IP address for the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/next-hop"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/next-hop"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_EgressPath) NextHop() *NetworkInstance_Mpls_Lsps_StaticLsp_Egress_NextHopPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Egress_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): next hop IP address for the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/next-hop"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/next-hop"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_EgressPathAny) NextHop() *NetworkInstance_Mpls_Lsps_StaticLsp_Egress_NextHopPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Egress_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushLabel (leaf): label value to push at the current hop for the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/push-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/push-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_EgressPath) PushLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Egress_PushLabelPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Egress_PushLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "push-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushLabel (leaf): label value to push at the current hop for the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/push-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/push-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_EgressPathAny) PushLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Egress_PushLabelPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Egress_PushLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "push-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_StaticLsp_IngressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_IngressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_IngressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_IngressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_IncomingLabelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/incoming-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_IncomingLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_IncomingLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/incoming-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_IncomingLabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/next-hop YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/next-hop YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_PushLabelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/push-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_PushLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_PushLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/push-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_PushLabelPathAny struct {
	*ygot.NodePath
}

// IncomingLabel (leaf): label value on the incoming packet
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/incoming-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/incoming-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_IngressPath) IncomingLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_IncomingLabelPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_IncomingLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "incoming-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncomingLabel (leaf): label value on the incoming packet
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/incoming-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/incoming-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_IngressPathAny) IncomingLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_IncomingLabelPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_IncomingLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "incoming-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): next hop IP address for the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/next-hop"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/next-hop"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_IngressPath) NextHop() *NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_NextHopPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): next hop IP address for the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/next-hop"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/next-hop"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_IngressPathAny) NextHop() *NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_NextHopPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushLabel (leaf): label value to push at the current hop for the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/push-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/push-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_IngressPath) PushLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_PushLabelPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_PushLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "push-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushLabel (leaf): label value to push at the current hop for the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/push-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/push-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_IngressPathAny) PushLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_PushLabelPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_PushLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "push-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_StaticLsp_TransitPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_TransitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_TransitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_TransitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Transit_IncomingLabelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/incoming-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Transit_IncomingLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Transit_IncomingLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/incoming-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Transit_IncomingLabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Transit_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/next-hop YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Transit_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Transit_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/next-hop YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Transit_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Transit_PushLabelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/push-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Transit_PushLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Transit_PushLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/push-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Transit_PushLabelPathAny struct {
	*ygot.NodePath
}

// IncomingLabel (leaf): label value on the incoming packet
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/incoming-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/incoming-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_TransitPath) IncomingLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Transit_IncomingLabelPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Transit_IncomingLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "incoming-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncomingLabel (leaf): label value on the incoming packet
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/incoming-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/incoming-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_TransitPathAny) IncomingLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Transit_IncomingLabelPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Transit_IncomingLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "incoming-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): next hop IP address for the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/next-hop"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/next-hop"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_TransitPath) NextHop() *NetworkInstance_Mpls_Lsps_StaticLsp_Transit_NextHopPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Transit_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): next hop IP address for the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/next-hop"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/next-hop"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_TransitPathAny) NextHop() *NetworkInstance_Mpls_Lsps_StaticLsp_Transit_NextHopPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Transit_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushLabel (leaf): label value to push at the current hop for the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/push-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/push-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_TransitPath) PushLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Transit_PushLabelPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Transit_PushLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "push-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushLabel (leaf): label value to push at the current hop for the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/push-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/push-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_TransitPathAny) PushLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Transit_PushLabelPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Transit_PushLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "push-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_UnconstrainedPathPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/unconstrained-path YANG schema element.
type NetworkInstance_Mpls_Lsps_UnconstrainedPathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_UnconstrainedPathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/unconstrained-path YANG schema element.
type NetworkInstance_Mpls_Lsps_UnconstrainedPathPathAny struct {
	*ygot.NodePath
}

// PathSetupProtocol (container): select and configure the signaling method for
//
//	the LSP
//
// ----------------------------------------
// Defining module: "openconfig-mpls-igp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-setup-protocol"
// Path from root: "/network-instances/network-instance/mpls/lsps/unconstrained-path/path-setup-protocol"
func (n *NetworkInstance_Mpls_Lsps_UnconstrainedPathPath) PathSetupProtocol() *NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPath {
	return &NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"path-setup-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathSetupProtocol (container): select and configure the signaling method for
//
//	the LSP
//
// ----------------------------------------
// Defining module: "openconfig-mpls-igp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-setup-protocol"
// Path from root: "/network-instances/network-instance/mpls/lsps/unconstrained-path/path-setup-protocol"
func (n *NetworkInstance_Mpls_Lsps_UnconstrainedPathPathAny) PathSetupProtocol() *NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPathAny {
	return &NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-setup-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/unconstrained-path/path-setup-protocol YANG schema element.
type NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/unconstrained-path/path-setup-protocol YANG schema element.
type NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPathAny struct {
	*ygot.NodePath
}

// Ldp (container): LDP signaling setup for IGP-congruent LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ldp"
// Path from root: "/network-instances/network-instance/mpls/lsps/unconstrained-path/path-setup-protocol/ldp"
func (n *NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPath) Ldp() *NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_LdpPath {
	return &NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_LdpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ldp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ldp (container): LDP signaling setup for IGP-congruent LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ldp"
// Path from root: "/network-instances/network-instance/mpls/lsps/unconstrained-path/path-setup-protocol/ldp"
func (n *NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPathAny) Ldp() *NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_LdpPathAny {
	return &NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_LdpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ldp"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_LdpPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/unconstrained-path/path-setup-protocol/ldp YANG schema element.
type NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_LdpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_LdpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/unconstrained-path/path-setup-protocol/ldp YANG schema element.
type NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_LdpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocolsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols YANG schema element.
type NetworkInstance_Mpls_SignalingProtocolsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocolsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols YANG schema element.
type NetworkInstance_Mpls_SignalingProtocolsPathAny struct {
	*ygot.NodePath
}

// Ldp (container): LDP global signaling configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ldp"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp"
func (n *NetworkInstance_Mpls_SignalingProtocolsPath) Ldp() *NetworkInstance_Mpls_SignalingProtocols_LdpPath {
	return &NetworkInstance_Mpls_SignalingProtocols_LdpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ldp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ldp (container): LDP global signaling configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ldp"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp"
func (n *NetworkInstance_Mpls_SignalingProtocolsPathAny) Ldp() *NetworkInstance_Mpls_SignalingProtocols_LdpPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_LdpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ldp"},
			map[string]interface{}{},
			n,
		),
	}
}

// RsvpTe (container): RSVP-TE global signaling protocol configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rsvp-te"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te"
func (n *NetworkInstance_Mpls_SignalingProtocolsPath) RsvpTe() *NetworkInstance_Mpls_SignalingProtocols_RsvpTePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTePath{
		NodePath: ygot.NewNodePath(
			[]string{"rsvp-te"},
			map[string]interface{}{},
			n,
		),
	}
}

// RsvpTe (container): RSVP-TE global signaling protocol configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rsvp-te"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te"
func (n *NetworkInstance_Mpls_SignalingProtocolsPathAny) RsvpTe() *NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rsvp-te"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): MPLS-specific Segment Routing configuration and operational state
// parameters
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing"
func (n *NetworkInstance_Mpls_SignalingProtocolsPath) SegmentRouting() *NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): MPLS-specific Segment Routing configuration and operational state
// parameters
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing"
func (n *NetworkInstance_Mpls_SignalingProtocolsPathAny) SegmentRouting() *NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_LdpPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_LdpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_LdpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_LdpPathAny struct {
	*ygot.NodePath
}

// Global (container): Platform wide LDP configuration and state
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global"
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPath) Global() *NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): Platform wide LDP configuration and state
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global"
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPathAny) Global() *NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAttributes (container): Container including attributes for LDP-enabled
// interfaces
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-attributes"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes"
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPath) InterfaceAttributes() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAttributes (container): Container including attributes for LDP-enabled
// interfaces
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-attributes"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes"
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPathAny) InterfaceAttributes() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAny (list): List of LDP neighbors and their attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor"
// LsrId (wildcarded): string
// LabelSpaceId (wildcarded): uint16
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPath) NeighborAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"lsr-id": "*", "label-space-id": "*"},
			n,
		),
	}
}

// NeighborAny (list): List of LDP neighbors and their attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor"
// LsrId (wildcarded): string
// LabelSpaceId (wildcarded): uint16
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPathAny) NeighborAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"lsr-id": "*", "label-space-id": "*"},
			n,
		),
	}
}

// NeighborAnyLabelSpaceId (list): List of LDP neighbors and their attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor"
// LsrId: string
// LabelSpaceId (wildcarded): uint16
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPath) NeighborAnyLabelSpaceId(LsrId string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"lsr-id": LsrId, "label-space-id": "*"},
			n,
		),
	}
}

// NeighborAnyLabelSpaceId (list): List of LDP neighbors and their attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor"
// LsrId: string
// LabelSpaceId (wildcarded): uint16
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPathAny) NeighborAnyLabelSpaceId(LsrId string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"lsr-id": LsrId, "label-space-id": "*"},
			n,
		),
	}
}

// NeighborAnyLsrId (list): List of LDP neighbors and their attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor"
// LsrId (wildcarded): string
// LabelSpaceId: uint16
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPath) NeighborAnyLsrId(LabelSpaceId uint16) *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"lsr-id": "*", "label-space-id": LabelSpaceId},
			n,
		),
	}
}

// NeighborAnyLsrId (list): List of LDP neighbors and their attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor"
// LsrId (wildcarded): string
// LabelSpaceId: uint16
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPathAny) NeighborAnyLsrId(LabelSpaceId uint16) *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"lsr-id": "*", "label-space-id": LabelSpaceId},
			n,
		),
	}
}

// Neighbor (list): List of LDP neighbors and their attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor"
// LsrId: string
// LabelSpaceId: uint16
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPath) Neighbor(LsrId string, LabelSpaceId uint16) *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"lsr-id": LsrId, "label-space-id": LabelSpaceId},
			n,
		),
	}
}

// Neighbor (list): List of LDP neighbors and their attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor"
// LsrId: string
// LabelSpaceId: uint16
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPathAny) Neighbor(LsrId string, LabelSpaceId uint16) *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"lsr-id": LsrId, "label-space-id": LabelSpaceId},
			n,
		),
	}
}

// Targeted (container): Top container for targeted LDP state and configuration
// attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targeted"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted"
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPath) Targeted() *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath{
		NodePath: ygot.NewNodePath(
			[]string{"targeted"},
			map[string]interface{}{},
			n,
		),
	}
}

// Targeted (container): Top container for targeted LDP state and configuration
// attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targeted"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted"
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPathAny) Targeted() *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"targeted"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_LsrIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/config/lsr-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_LsrIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_LsrIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/config/lsr-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_LsrIdPathAny struct {
	*ygot.NodePath
}

// Authentication (container): Global LDP authentication
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPath) Authentication() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): Global LDP authentication
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPathAny) Authentication() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Top container for LDP graceful-restart attributes
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPath) GracefulRestart() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Top container for LDP graceful-restart attributes
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPathAny) GracefulRestart() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsrId (leaf): Global label switch router identifier
// configuration.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsr-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/config/lsr-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPath) LsrId() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_LsrIdPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_LsrIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsr-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsrId (leaf): Global label switch router identifier
// configuration.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsr-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/config/lsr-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPathAny) LsrId() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_LsrIdPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_LsrIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsr-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_AuthenticationKeyPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication/config/authentication-key YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_AuthenticationKeyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_AuthenticationKeyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication/config/authentication-key YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_AuthenticationKeyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_EnablePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication/config/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_EnablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_EnablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication/config/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_EnablePathAny struct {
	*ygot.NodePath
}

// AuthenticationKey (leaf): authenticate LDP signaling
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-key"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication/config/authentication-key"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPath) AuthenticationKey() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_AuthenticationKeyPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_AuthenticationKeyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationKey (leaf): authenticate LDP signaling
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-key"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication/config/authentication-key"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPathAny) AuthenticationKey() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_AuthenticationKeyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_AuthenticationKeyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables LDP authentication on the node.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication/config/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPath) Enable() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_EnablePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_EnablePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables LDP authentication on the node.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication/config/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPathAny) Enable() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_EnablePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_EnablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ForwardingHoldtimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/forwarding-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ForwardingHoldtimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ForwardingHoldtimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/forwarding-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ForwardingHoldtimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_HelperEnablePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/helper-enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_HelperEnablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_HelperEnablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/helper-enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_HelperEnablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ReconnectTimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/reconnect-time YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ReconnectTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ReconnectTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/reconnect-time YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ReconnectTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_RecoveryTimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/recovery-time YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_RecoveryTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_RecoveryTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/recovery-time YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_RecoveryTimePathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/enabled"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath) Enabled() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_EnabledPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/enabled"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny) Enabled() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingHoldtime (leaf): Time that defines the interval for keeping the
// node in recovery mode.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/forwarding-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/forwarding-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath) ForwardingHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ForwardingHoldtimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ForwardingHoldtimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "forwarding-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingHoldtime (leaf): Time that defines the interval for keeping the
// node in recovery mode.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/forwarding-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/forwarding-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny) ForwardingHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ForwardingHoldtimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ForwardingHoldtimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "forwarding-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperEnable (leaf): Enables the graceful restart helper for LDP.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/helper-enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath) HelperEnable() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_HelperEnablePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_HelperEnablePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperEnable (leaf): Enables the graceful restart helper for LDP.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/helper-enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny) HelperEnable() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_HelperEnablePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_HelperEnablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReconnectTime (leaf): Interval for which the remote LDP peers
// will wait for the local node to reconnect after a
// failure
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/reconnect-time"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/reconnect-time"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath) ReconnectTime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ReconnectTimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ReconnectTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "reconnect-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReconnectTime (leaf): Interval for which the remote LDP peers
// will wait for the local node to reconnect after a
// failure
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/reconnect-time"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/reconnect-time"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny) ReconnectTime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ReconnectTimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ReconnectTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "reconnect-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RecoveryTime (leaf): Interval used to specify the time for the remote
// peer to maintain the MPLS forwarding state after
// the local node has succesfully reconnected
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/recovery-time"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/recovery-time"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath) RecoveryTime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_RecoveryTimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_RecoveryTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "recovery-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RecoveryTime (leaf): Interval used to specify the time for the remote
// peer to maintain the MPLS forwarding state after
// the local node has succesfully reconnected
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/recovery-time"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/config/recovery-time"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny) RecoveryTime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_RecoveryTimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_RecoveryTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "recovery-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloHoldtimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/config/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloHoldtimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloHoldtimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/config/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloHoldtimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/config/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/config/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// HelloHoldtime (leaf): Defines the time for which a neighbor adjacency will
// be kept by the router while it waits for a new link
// Hello message.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/config/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPath) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloHoldtimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloHoldtimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloHoldtime (leaf): Defines the time for which a neighbor adjacency will
// be kept by the router while it waits for a new link
// Hello message.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/config/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPathAny) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloHoldtimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloHoldtimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Defines the interval for sending Hello messages on
// each link LDP adjacency.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/config/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPath) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloIntervalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Defines the interval for sending Hello messages on
// each link LDP adjacency.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/config/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPathAny) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloIntervalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): list of per-interface LDP configurations
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPath) InterfaceAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): list of per-interface LDP configurations
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPathAny) InterfaceAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): list of per-interface LDP configurations
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPath) Interface(InterfaceId string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): list of per-interface LDP configurations
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPathAny) Interface(InterfaceId string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloHoldtimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/config/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloHoldtimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloHoldtimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/config/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloHoldtimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/config/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/config/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// AddressFamilyAny (list): List for attributes related to address-families for LDP.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "address-families/address-family"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family"
// AfiName (wildcarded): oc.E_MplsLdp_MplsLdpAfi
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath) AddressFamilyAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"address-families", "address-family"},
			map[string]interface{}{"afi-name": "*"},
			n,
		),
	}
}

// AddressFamilyAny (list): List for attributes related to address-families for LDP.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "address-families/address-family"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family"
// AfiName (wildcarded): oc.E_MplsLdp_MplsLdpAfi
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny) AddressFamilyAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"address-families", "address-family"},
			map[string]interface{}{"afi-name": "*"},
			n,
		),
	}
}

// AddressFamily (list): List for attributes related to address-families for LDP.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "address-families/address-family"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family"
// AfiName: oc.E_MplsLdp_MplsLdpAfi
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath) AddressFamily(AfiName oc.E_MplsLdp_MplsLdpAfi) *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"address-families", "address-family"},
			map[string]interface{}{"afi-name": AfiName},
			n,
		),
	}
}

// AddressFamily (list): List for attributes related to address-families for LDP.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "address-families/address-family"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family"
// AfiName: oc.E_MplsLdp_MplsLdpAfi
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny) AddressFamily(AfiName oc.E_MplsLdp_MplsLdpAfi) *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"address-families", "address-family"},
			map[string]interface{}{"afi-name": AfiName},
			n,
		),
	}
}

// HelloHoldtime (leaf): Defines the time for which a neighbor adjacency will
// be kept by the router while it waits for a new link
// Hello message.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/config/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloHoldtimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloHoldtimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloHoldtime (leaf): Defines the time for which a neighbor adjacency will
// be kept by the router while it waits for a new link
// Hello message.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/config/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloHoldtimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloHoldtimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Defines the interval for sending Hello messages on
// each link LDP adjacency.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/config/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloIntervalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Defines the interval for sending Hello messages on
// each link LDP adjacency.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/config/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloIntervalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Identifier for the interface
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/config/interface-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath) InterfaceId() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceIdPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Identifier for the interface
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/config/interface-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny) InterfaceId() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath) InterfaceRef() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny) InterfaceRef() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family/config/afi-name YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family/config/afi-name YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family/config/enabled YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family/config/enabled YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_EnabledPathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Adress-family name atttibute (IPv4, IPv6).
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family/config/afi-name"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPath) AfiName() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_AfiNamePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Adress-family name atttibute (IPv4, IPv6).
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family/config/afi-name"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny) AfiName() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_AfiNamePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family/config/enabled"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPath) Enabled() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_EnabledPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family/config/enabled"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny) Enabled() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_EnabledPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPath) Interface() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LabelSpaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/config/label-space-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LabelSpaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LabelSpaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/config/label-space-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LabelSpaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LsrIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/config/lsr-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LsrIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LsrIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/config/lsr-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LsrIdPathAny struct {
	*ygot.NodePath
}

// Authentication (container): Global LDP authentication
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath) Authentication() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): Global LDP authentication
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny) Authentication() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// LabelSpaceId (leaf): Label space ID of the neighbor.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/label-space-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/config/label-space-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath) LabelSpaceId() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LabelSpaceIdPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LabelSpaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "label-space-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LabelSpaceId (leaf): Label space ID of the neighbor.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/label-space-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/config/label-space-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny) LabelSpaceId() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LabelSpaceIdPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LabelSpaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "label-space-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsrId (leaf): Neighbor label switch router identifier.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsr-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/config/lsr-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath) LsrId() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LsrIdPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LsrIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsr-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsrId (leaf): Neighbor label switch router identifier.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsr-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/config/lsr-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny) LsrId() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LsrIdPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LsrIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsr-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_AuthenticationKeyPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication/config/authentication-key YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_AuthenticationKeyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_AuthenticationKeyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication/config/authentication-key YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_AuthenticationKeyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_EnablePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication/config/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_EnablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_EnablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication/config/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_EnablePathAny struct {
	*ygot.NodePath
}

// AuthenticationKey (leaf): authenticate LDP signaling
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-key"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication/config/authentication-key"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPath) AuthenticationKey() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_AuthenticationKeyPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_AuthenticationKeyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationKey (leaf): authenticate LDP signaling
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-key"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication/config/authentication-key"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPathAny) AuthenticationKey() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_AuthenticationKeyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_AuthenticationKeyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables LDP authentication on the node.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication/config/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPath) Enable() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_EnablePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_EnablePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables LDP authentication on the node.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication/config/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPathAny) Enable() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_EnablePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_EnablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloAcceptPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/config/hello-accept YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloAcceptPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloAcceptPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/config/hello-accept YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloAcceptPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloHoldtimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/config/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloHoldtimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloHoldtimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/config/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloHoldtimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/config/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/config/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// AddressFamilyAny (list): List of address families for targeted LDP
// configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "address-families/address-family"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family"
// AfiName (wildcarded): oc.E_MplsLdp_MplsLdpAfi
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath) AddressFamilyAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"address-families", "address-family"},
			map[string]interface{}{"afi-name": "*"},
			n,
		),
	}
}

// AddressFamilyAny (list): List of address families for targeted LDP
// configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "address-families/address-family"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family"
// AfiName (wildcarded): oc.E_MplsLdp_MplsLdpAfi
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny) AddressFamilyAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"address-families", "address-family"},
			map[string]interface{}{"afi-name": "*"},
			n,
		),
	}
}

// AddressFamily (list): List of address families for targeted LDP
// configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "address-families/address-family"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family"
// AfiName: oc.E_MplsLdp_MplsLdpAfi
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath) AddressFamily(AfiName oc.E_MplsLdp_MplsLdpAfi) *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"address-families", "address-family"},
			map[string]interface{}{"afi-name": AfiName},
			n,
		),
	}
}

// AddressFamily (list): List of address families for targeted LDP
// configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "address-families/address-family"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family"
// AfiName: oc.E_MplsLdp_MplsLdpAfi
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny) AddressFamily(AfiName oc.E_MplsLdp_MplsLdpAfi) *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"address-families", "address-family"},
			map[string]interface{}{"afi-name": AfiName},
			n,
		),
	}
}

// HelloAccept (leaf): Enables or disables the acceptance of targeted LDP
// hello messages.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-accept"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/config/hello-accept"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath) HelloAccept() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloAcceptPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloAcceptPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-accept"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloAccept (leaf): Enables or disables the acceptance of targeted LDP
// hello messages.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-accept"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/config/hello-accept"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny) HelloAccept() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloAcceptPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloAcceptPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-accept"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloHoldtime (leaf): Defines the time for which a neighbor adjacency will
// be kept by the router while it waits for a new link
// Hello message.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/config/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloHoldtimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloHoldtimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloHoldtime (leaf): Defines the time for which a neighbor adjacency will
// be kept by the router while it waits for a new link
// Hello message.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/config/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloHoldtimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloHoldtimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Defines the interval for sending Hello messages on
// each link LDP adjacency.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/config/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloIntervalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Defines the interval for sending Hello messages on
// each link LDP adjacency.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/config/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloIntervalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/config/afi-name YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/config/afi-name YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_AfiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Adress-family name atttibute (IPv4, IPv6).
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/config/afi-name"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPath) AfiName() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_AfiNamePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Adress-family name atttibute (IPv4, IPv6).
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/config/afi-name"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny) AfiName() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_AfiNamePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// TargetAny (list): List of LDP targets configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targets/target"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target"
// RemoteAddress (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPath) TargetAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"targets", "target"},
			map[string]interface{}{"remote-address": "*"},
			n,
		),
	}
}

// TargetAny (list): List of LDP targets configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targets/target"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target"
// RemoteAddress (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny) TargetAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"targets", "target"},
			map[string]interface{}{"remote-address": "*"},
			n,
		),
	}
}

// Target (list): List of LDP targets configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targets/target"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target"
// RemoteAddress: string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPath) Target(RemoteAddress string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath{
		NodePath: ygot.NewNodePath(
			[]string{"targets", "target"},
			map[string]interface{}{"remote-address": RemoteAddress},
			n,
		),
	}
}

// Target (list): List of LDP targets configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targets/target"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target"
// RemoteAddress: string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny) Target(RemoteAddress string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"targets", "target"},
			map[string]interface{}{"remote-address": RemoteAddress},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/enabled YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/enabled YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloHoldtimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloHoldtimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloHoldtimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloHoldtimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_LocalAddressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/local-address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_LocalAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_LocalAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/local-address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_LocalAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_RemoteAddressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/remote-address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_RemoteAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_RemoteAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/remote-address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_RemoteAddressPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/enabled"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath) Enabled() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_EnabledPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/enabled"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny) Enabled() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_EnabledPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloHoldtime (leaf): Defines the time for which a neighbor adjacency will
// be kept by the router while it waits for a new link
// Hello message.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloHoldtimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloHoldtimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloHoldtime (leaf): Defines the time for which a neighbor adjacency will
// be kept by the router while it waits for a new link
// Hello message.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloHoldtimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloHoldtimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Defines the interval for sending Hello messages on
// each link LDP adjacency.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloIntervalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Defines the interval for sending Hello messages on
// each link LDP adjacency.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloIntervalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalAddress (leaf): Local IP address of the LDP adjacency
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/local-address"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath) LocalAddress() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_LocalAddressPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_LocalAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalAddress (leaf): Local IP address of the LDP adjacency
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/local-address"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny) LocalAddress() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_LocalAddressPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_LocalAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteAddress (leaf): Configuration of neighbor address of the
// targeted LDP adjacency
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/remote-address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/remote-address"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath) RemoteAddress() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_RemoteAddressPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_RemoteAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "remote-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteAddress (leaf): Configuration of neighbor address of the
// targeted LDP adjacency
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/remote-address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/config/remote-address"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny) RemoteAddress() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_RemoteAddressPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_RemoteAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "remote-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny struct {
	*ygot.NodePath
}

// Global (container): Platform wide RSVP configuration and state
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePath) Global() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): Platform wide RSVP configuration and state
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny) Global() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): list of per-interface RSVP configurations
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-attributes/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePath) InterfaceAny() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-attributes", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): list of per-interface RSVP configurations
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-attributes/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny) InterfaceAny() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-attributes", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): list of per-interface RSVP configurations
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-attributes/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface"
// InterfaceId: string
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePath) Interface(InterfaceId string) *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-attributes", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): list of per-interface RSVP configurations
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-attributes/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface"
// InterfaceId: string
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny) Interface(InterfaceId string) *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-attributes", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPathAny struct {
	*ygot.NodePath
}

// GracefulRestart (container): Operational state and configuration parameters relating to
// graceful-restart for RSVP
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPath) GracefulRestart() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Operational state and configuration parameters relating to
// graceful-restart for RSVP
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPathAny) GracefulRestart() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// Hellos (container): Top level container for RSVP hello parameters
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hellos"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPath) Hellos() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPath{
		NodePath: ygot.NewNodePath(
			[]string{"hellos"},
			map[string]interface{}{},
			n,
		),
	}
}

// Hellos (container): Top level container for RSVP hello parameters
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hellos"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPathAny) Hellos() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hellos"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftPreemption (container): Protocol options relating to RSVP
// soft preemption
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "soft-preemption"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPath) SoftPreemption() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"soft-preemption"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftPreemption (container): Protocol options relating to RSVP
// soft preemption
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "soft-preemption"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPathAny) SoftPreemption() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"soft-preemption"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_EnablePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/config/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_EnablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_EnablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/config/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_EnablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RecoveryTimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/config/recovery-time YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RecoveryTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RecoveryTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/config/recovery-time YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RecoveryTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RestartTimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/config/restart-time YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RestartTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RestartTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/config/restart-time YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RestartTimePathAny struct {
	*ygot.NodePath
}

// Enable (leaf): Enables graceful restart on the node.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/config/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPath) Enable() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_EnablePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_EnablePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables graceful restart on the node.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/config/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPathAny) Enable() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_EnablePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_EnablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// RecoveryTime (leaf): RSVP state recovery time
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/recovery-time"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/config/recovery-time"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPath) RecoveryTime() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RecoveryTimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RecoveryTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "recovery-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RecoveryTime (leaf): RSVP state recovery time
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/recovery-time"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/config/recovery-time"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPathAny) RecoveryTime() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RecoveryTimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RecoveryTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "recovery-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Graceful restart time (seconds).
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/config/restart-time"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPath) RestartTime() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RestartTimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RestartTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Graceful restart time (seconds).
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/config/restart-time"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPathAny) RestartTime() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RestartTimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RestartTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos/config/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos/config/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_RefreshReductionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos/config/refresh-reduction YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_RefreshReductionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_RefreshReductionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos/config/refresh-reduction YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_RefreshReductionPathAny struct {
	*ygot.NodePath
}

// HelloInterval (leaf): set the interval in ms between RSVP hello
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos/config/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPath) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_HelloIntervalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): set the interval in ms between RSVP hello
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos/config/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPathAny) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_HelloIntervalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RefreshReduction (leaf): enables all RSVP refresh reduction message
// bundling, RSVP message ID, reliable message delivery
// and summary refresh
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/refresh-reduction"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos/config/refresh-reduction"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPath) RefreshReduction() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_RefreshReductionPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_RefreshReductionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "refresh-reduction"},
			map[string]interface{}{},
			n,
		),
	}
}

// RefreshReduction (leaf): enables all RSVP refresh reduction message
// bundling, RSVP message ID, reliable message delivery
// and summary refresh
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/refresh-reduction"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos/config/refresh-reduction"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPathAny) RefreshReduction() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_RefreshReductionPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_RefreshReductionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "refresh-reduction"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_EnablePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption/config/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_EnablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_EnablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption/config/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_EnablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_SoftPreemptionTimeoutPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption/config/soft-preemption-timeout YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_SoftPreemptionTimeoutPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_SoftPreemptionTimeoutPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption/config/soft-preemption-timeout YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_SoftPreemptionTimeoutPathAny struct {
	*ygot.NodePath
}

// Enable (leaf): Enables soft preemption on a node.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption/config/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPath) Enable() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_EnablePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_EnablePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables soft preemption on a node.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption/config/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPathAny) Enable() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_EnablePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_EnablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftPreemptionTimeout (leaf): Timeout value for soft preemption to revert
// to hard preemption. The default timeout for
// soft-preemption is 30 seconds - after which
// the local system reverts to hard pre-emption.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/soft-preemption-timeout"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption/config/soft-preemption-timeout"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPath) SoftPreemptionTimeout() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_SoftPreemptionTimeoutPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_SoftPreemptionTimeoutPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "soft-preemption-timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftPreemptionTimeout (leaf): Timeout value for soft preemption to revert
// to hard preemption. The default timeout for
// soft-preemption is 30 seconds - after which
// the local system reverts to hard pre-emption.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/soft-preemption-timeout"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption/config/soft-preemption-timeout"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPathAny) SoftPreemptionTimeout() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_SoftPreemptionTimeoutPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_SoftPreemptionTimeoutPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "soft-preemption-timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/config/interface-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/config/interface-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// Authentication (container): Configuration and state parameters relating to RSVP
// authentication as per RFC2747
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath) Authentication() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): Configuration and state parameters relating to RSVP
// authentication as per RFC2747
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny) Authentication() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Hellos (container): Top level container for RSVP hello parameters
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hellos"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath) Hellos() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPath{
		NodePath: ygot.NewNodePath(
			[]string{"hellos"},
			map[string]interface{}{},
			n,
		),
	}
}

// Hellos (container): Top level container for RSVP hello parameters
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hellos"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny) Hellos() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hellos"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Identifier for the interface
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/config/interface-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath) InterfaceId() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceIdPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Identifier for the interface
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/config/interface-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny) InterfaceId() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath) InterfaceRef() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny) InterfaceRef() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protection (container): link-protection (NHOP) related configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "protection"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath) Protection() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPath{
		NodePath: ygot.NewNodePath(
			[]string{"protection"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protection (container): link-protection (NHOP) related configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "protection"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny) Protection() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"protection"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subscription (container): Bandwidth percentage reservable by RSVP
// on an interface
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subscription"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath) Subscription() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"subscription"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subscription (container): Bandwidth percentage reservable by RSVP
// on an interface
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subscription"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny) Subscription() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subscription"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationKeyPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/config/authentication-key YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationKeyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationKeyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/config/authentication-key YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationKeyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationTypePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/config/authentication-type YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/config/authentication-type YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_EnablePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/config/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_EnablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_EnablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/config/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_EnablePathAny struct {
	*ygot.NodePath
}

// AuthenticationKey (leaf): Authenticate RSVP signaling messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-key"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/config/authentication-key"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPath) AuthenticationKey() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationKeyPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationKeyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationKey (leaf): Authenticate RSVP signaling messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-key"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/config/authentication-key"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPathAny) AuthenticationKey() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationKeyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationKeyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationType (leaf): RSVP message authentication algorithm type
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-type"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/config/authentication-type"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPath) AuthenticationType() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationTypePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationType (leaf): RSVP message authentication algorithm type
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-type"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/config/authentication-type"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPathAny) AuthenticationType() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationTypePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables RSVP authentication on the node.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/config/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPath) Enable() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_EnablePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_EnablePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables RSVP authentication on the node.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/config/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPathAny) Enable() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_EnablePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_EnablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos/config/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos/config/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_RefreshReductionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos/config/refresh-reduction YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_RefreshReductionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_RefreshReductionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos/config/refresh-reduction YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_RefreshReductionPathAny struct {
	*ygot.NodePath
}

// HelloInterval (leaf): set the interval in ms between RSVP hello
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos/config/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPath) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_HelloIntervalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): set the interval in ms between RSVP hello
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos/config/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPathAny) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_HelloIntervalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RefreshReduction (leaf): enables all RSVP refresh reduction message
// bundling, RSVP message ID, reliable message delivery
// and summary refresh
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/refresh-reduction"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos/config/refresh-reduction"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPath) RefreshReduction() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_RefreshReductionPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_RefreshReductionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "refresh-reduction"},
			map[string]interface{}{},
			n,
		),
	}
}

// RefreshReduction (leaf): enables all RSVP refresh reduction message
// bundling, RSVP message ID, reliable message delivery
// and summary refresh
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/refresh-reduction"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos/config/refresh-reduction"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPathAny) RefreshReduction() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_RefreshReductionPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_RefreshReductionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "refresh-reduction"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref/config/interface"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPath) Interface() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref/config/interface"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_BypassOptimizeIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection/config/bypass-optimize-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_BypassOptimizeIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_BypassOptimizeIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection/config/bypass-optimize-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_BypassOptimizeIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_LinkProtectionStyleRequestedPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection/config/link-protection-style-requested YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_LinkProtectionStyleRequestedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_LinkProtectionStyleRequestedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection/config/link-protection-style-requested YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_LinkProtectionStyleRequestedPathAny struct {
	*ygot.NodePath
}

// BypassOptimizeInterval (leaf): interval between periodic optimization
// of the bypass LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/bypass-optimize-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection/config/bypass-optimize-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPath) BypassOptimizeInterval() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_BypassOptimizeIntervalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_BypassOptimizeIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "bypass-optimize-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// BypassOptimizeInterval (leaf): interval between periodic optimization
// of the bypass LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/bypass-optimize-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection/config/bypass-optimize-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPathAny) BypassOptimizeInterval() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_BypassOptimizeIntervalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_BypassOptimizeIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "bypass-optimize-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionStyleRequested (leaf): Style of mpls frr protection desired:
// link, link-node, or unprotected
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/link-protection-style-requested"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection/config/link-protection-style-requested"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPath) LinkProtectionStyleRequested() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_LinkProtectionStyleRequestedPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_LinkProtectionStyleRequestedPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "link-protection-style-requested"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionStyleRequested (leaf): Style of mpls frr protection desired:
// link, link-node, or unprotected
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/link-protection-style-requested"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection/config/link-protection-style-requested"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPathAny) LinkProtectionStyleRequested() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_LinkProtectionStyleRequestedPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_LinkProtectionStyleRequestedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "link-protection-style-requested"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_SubscriptionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription/config/subscription YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_SubscriptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_SubscriptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription/config/subscription YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_SubscriptionPathAny struct {
	*ygot.NodePath
}

// Subscription (leaf): percentage of the interface bandwidth that
// RSVP can reserve
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subscription"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription/config/subscription"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPath) Subscription() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_SubscriptionPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_SubscriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subscription"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subscription (leaf): percentage of the interface bandwidth that
// RSVP can reserve
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subscription"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription/config/subscription"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPathAny) Subscription() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_SubscriptionPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_SubscriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subscription"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPathAny struct {
	*ygot.NodePath
}

// InterfaceAny (list): Parameters and MPLS-specific configuration relating to Segment
// Routing on an interface.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPath) InterfaceAny() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): Parameters and MPLS-specific configuration relating to Segment
// Routing on an interface.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPathAny) InterfaceAny() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): Parameters and MPLS-specific configuration relating to Segment
// Routing on an interface.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPath) Interface(InterfaceId string) *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): Parameters and MPLS-specific configuration relating to Segment
// Routing on an interface.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPathAny) Interface(InterfaceId string) *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// InterfaceId (leaf): A unique identifier for the interface.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/config/interface-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath) InterfaceId() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceIdPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): A unique identifier for the interface.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/config/interface-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny) InterfaceId() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath) InterfaceRef() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny) InterfaceRef() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPath) Interface() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_TeGlobalAttributesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributesPathAny struct {
	*ygot.NodePath
}

// AdminGroupAny (list): configuration of value to name mapping
// for mpls affinities/admin-groups
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls-admin-groups/admin-group"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group"
// AdminGroupName (wildcarded): string
func (n *NetworkInstance_Mpls_TeGlobalAttributesPath) AdminGroupAny() *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls-admin-groups", "admin-group"},
			map[string]interface{}{"admin-group-name": "*"},
			n,
		),
	}
}

// AdminGroupAny (list): configuration of value to name mapping
// for mpls affinities/admin-groups
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls-admin-groups/admin-group"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group"
// AdminGroupName (wildcarded): string
func (n *NetworkInstance_Mpls_TeGlobalAttributesPathAny) AdminGroupAny() *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls-admin-groups", "admin-group"},
			map[string]interface{}{"admin-group-name": "*"},
			n,
		),
	}
}

// AdminGroup (list): configuration of value to name mapping
// for mpls affinities/admin-groups
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls-admin-groups/admin-group"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group"
// AdminGroupName: string
func (n *NetworkInstance_Mpls_TeGlobalAttributesPath) AdminGroup(AdminGroupName string) *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls-admin-groups", "admin-group"},
			map[string]interface{}{"admin-group-name": AdminGroupName},
			n,
		),
	}
}

// AdminGroup (list): configuration of value to name mapping
// for mpls affinities/admin-groups
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls-admin-groups/admin-group"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group"
// AdminGroupName: string
func (n *NetworkInstance_Mpls_TeGlobalAttributesPathAny) AdminGroup(AdminGroupName string) *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls-admin-groups", "admin-group"},
			map[string]interface{}{"admin-group-name": AdminGroupName},
			n,
		),
	}
}

// SrlgAny (list): List of shared risk link groups
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlgs/srlg"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg"
// Name (wildcarded): string
func (n *NetworkInstance_Mpls_TeGlobalAttributesPath) SrlgAny() *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlgs", "srlg"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// SrlgAny (list): List of shared risk link groups
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlgs/srlg"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg"
// Name (wildcarded): string
func (n *NetworkInstance_Mpls_TeGlobalAttributesPathAny) SrlgAny() *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlgs", "srlg"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Srlg (list): List of shared risk link groups
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlgs/srlg"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg"
// Name: string
func (n *NetworkInstance_Mpls_TeGlobalAttributesPath) Srlg(Name string) *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath{
		NodePath: ygot.NewNodePath(
			[]string{"srlgs", "srlg"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Srlg (list): List of shared risk link groups
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlgs/srlg"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg"
// Name: string
func (n *NetworkInstance_Mpls_TeGlobalAttributesPathAny) Srlg(Name string) *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlgs", "srlg"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// TeLspTimers (container): Definition for delays associated with setup
// and cleanup of TE LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-lsp-timers"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers"
func (n *NetworkInstance_Mpls_TeGlobalAttributesPath) TeLspTimers() *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"te-lsp-timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// TeLspTimers (container): Definition for delays associated with setup
// and cleanup of TE LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-lsp-timers"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers"
func (n *NetworkInstance_Mpls_TeGlobalAttributesPathAny) TeLspTimers() *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-lsp-timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_AdminGroupNamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group/config/admin-group-name YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_AdminGroupNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_AdminGroupNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group/config/admin-group-name YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_AdminGroupNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_BitPositionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group/config/bit-position YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_BitPositionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_BitPositionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group/config/bit-position YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_BitPositionPathAny struct {
	*ygot.NodePath
}

// AdminGroupName (leaf): name for mpls admin-group
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/admin-group-name"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group/config/admin-group-name"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPath) AdminGroupName() *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_AdminGroupNamePath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_AdminGroupNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "admin-group-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroupName (leaf): name for mpls admin-group
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/admin-group-name"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group/config/admin-group-name"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny) AdminGroupName() *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_AdminGroupNamePathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_AdminGroupNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "admin-group-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// BitPosition (leaf): bit-position value for mpls admin-group. The value
// for the admin group is an integer that represents one
// of the bit positions in the admin-group bitmask. Values
// between 0 and 31 are interpreted as the original limit
// of 32 admin groups. Values >=32 are interpreted as
// extended admin group values as per RFC7308.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/bit-position"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group/config/bit-position"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPath) BitPosition() *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_BitPositionPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_BitPositionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "bit-position"},
			map[string]interface{}{},
			n,
		),
	}
}

// BitPosition (leaf): bit-position value for mpls admin-group. The value
// for the admin group is an integer that represents one
// of the bit positions in the admin-group bitmask. Values
// between 0 and 31 are interpreted as the original limit
// of 32 admin groups. Values >=32 are interpreted as
// extended admin group values as per RFC7308.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/bit-position"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group/config/bit-position"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny) BitPosition() *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_BitPositionPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_BitPositionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "bit-position"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_CostPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/config/cost YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_CostPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_CostPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/config/cost YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_CostPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_FloodingTypePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/config/flooding-type YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_FloodingTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_FloodingTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/config/flooding-type YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_FloodingTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_NamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/config/name YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/config/name YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_NamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/config/value YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/config/value YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_ValuePathAny struct {
	*ygot.NodePath
}

// Cost (leaf): The cost of the SRLG to the computation
// algorithm
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/cost"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/config/cost"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath) Cost() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_CostPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_CostPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "cost"},
			map[string]interface{}{},
			n,
		),
	}
}

// Cost (leaf): The cost of the SRLG to the computation
// algorithm
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/cost"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/config/cost"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny) Cost() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_CostPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_CostPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "cost"},
			map[string]interface{}{},
			n,
		),
	}
}

// FloodingType (leaf): The type of SRLG, either flooded in the IGP or
// statically configured
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/flooding-type"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/config/flooding-type"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath) FloodingType() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_FloodingTypePath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_FloodingTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "flooding-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// FloodingType (leaf): The type of SRLG, either flooded in the IGP or
// statically configured
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/flooding-type"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/config/flooding-type"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny) FloodingType() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_FloodingTypePathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_FloodingTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "flooding-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// MembersListAny (list): List of SRLG members, which are expressed
// as IP address endpoints of links contained in the
// SRLG
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-srlg-members/members-list"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list"
// FromAddress (wildcarded): string
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath) MembersListAny() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-srlg-members", "members-list"},
			map[string]interface{}{"from-address": "*"},
			n,
		),
	}
}

// MembersListAny (list): List of SRLG members, which are expressed
// as IP address endpoints of links contained in the
// SRLG
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-srlg-members/members-list"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list"
// FromAddress (wildcarded): string
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny) MembersListAny() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-srlg-members", "members-list"},
			map[string]interface{}{"from-address": "*"},
			n,
		),
	}
}

// MembersList (list): List of SRLG members, which are expressed
// as IP address endpoints of links contained in the
// SRLG
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-srlg-members/members-list"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list"
// FromAddress: string
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath) MembersList(FromAddress string) *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPath{
		NodePath: ygot.NewNodePath(
			[]string{"static-srlg-members", "members-list"},
			map[string]interface{}{"from-address": FromAddress},
			n,
		),
	}
}

// MembersList (list): List of SRLG members, which are expressed
// as IP address endpoints of links contained in the
// SRLG
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-srlg-members/members-list"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list"
// FromAddress: string
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny) MembersList(FromAddress string) *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-srlg-members", "members-list"},
			map[string]interface{}{"from-address": FromAddress},
			n,
		),
	}
}

// Name (leaf): SRLG group identifier
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/config/name"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath) Name() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_NamePath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): SRLG group identifier
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/config/name"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny) Name() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_NamePathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): group ID for the SRLG
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/value"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/config/value"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath) Value() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_ValuePath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): group ID for the SRLG
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/value"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/config/value"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny) Value() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_ValuePathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_FromAddressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list/config/from-address YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_FromAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_FromAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list/config/from-address YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_FromAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_ToAddressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list/config/to-address YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_ToAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_ToAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list/config/to-address YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_ToAddressPathAny struct {
	*ygot.NodePath
}

// FromAddress (leaf): IP address of the a-side of the SRLG link
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/from-address"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list/config/from-address"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPath) FromAddress() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_FromAddressPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_FromAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "from-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// FromAddress (leaf): IP address of the a-side of the SRLG link
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/from-address"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list/config/from-address"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny) FromAddress() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_FromAddressPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_FromAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "from-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// ToAddress (leaf): IP address of the z-side of the SRLG link
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/to-address"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list/config/to-address"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPath) ToAddress() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_ToAddressPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_ToAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "to-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// ToAddress (leaf): IP address of the z-side of the SRLG link
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/to-address"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list/config/to-address"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny) ToAddress() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_ToAddressPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_ToAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "to-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_CleanupDelayPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/config/cleanup-delay YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_CleanupDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_CleanupDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/config/cleanup-delay YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_CleanupDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_InstallDelayPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/config/install-delay YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_InstallDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_InstallDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/config/install-delay YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_InstallDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_ReoptimizeTimerPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/config/reoptimize-timer YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_ReoptimizeTimerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_ReoptimizeTimerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/config/reoptimize-timer YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_ReoptimizeTimerPathAny struct {
	*ygot.NodePath
}

// CleanupDelay (leaf): delay the removal of old te lsp for a specified
// amount of time
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/cleanup-delay"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/config/cleanup-delay"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPath) CleanupDelay() *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_CleanupDelayPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_CleanupDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "cleanup-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// CleanupDelay (leaf): delay the removal of old te lsp for a specified
// amount of time
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/cleanup-delay"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/config/cleanup-delay"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPathAny) CleanupDelay() *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_CleanupDelayPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_CleanupDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "cleanup-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstallDelay (leaf): delay the use of newly installed te lsp for a
// specified amount of time.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/install-delay"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/config/install-delay"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPath) InstallDelay() *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_InstallDelayPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_InstallDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "install-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstallDelay (leaf): delay the use of newly installed te lsp for a
// specified amount of time.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/install-delay"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/config/install-delay"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPathAny) InstallDelay() *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_InstallDelayPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_InstallDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "install-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReoptimizeTimer (leaf): frequency of reoptimization of
// a traffic engineered LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/reoptimize-timer"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/config/reoptimize-timer"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPath) ReoptimizeTimer() *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_ReoptimizeTimerPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_ReoptimizeTimerPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "reoptimize-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReoptimizeTimer (leaf): frequency of reoptimization of
// a traffic engineered LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/reoptimize-timer"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/config/reoptimize-timer"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPathAny) ReoptimizeTimer() *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_ReoptimizeTimerPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_ReoptimizeTimerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "reoptimize-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwardingPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding YANG schema element.
type NetworkInstance_PolicyForwardingPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwardingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding YANG schema element.
type NetworkInstance_PolicyForwardingPathAny struct {
	*ygot.NodePath
}

// InterfaceAny (list): Configuration and operationals state relating to the
// relationship between interfaces and policy-based forwarding
// rules.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_PolicyForwardingPath) InterfaceAny() *NetworkInstance_PolicyForwarding_InterfacePathAny {
	return &NetworkInstance_PolicyForwarding_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): Configuration and operationals state relating to the
// relationship between interfaces and policy-based forwarding
// rules.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_PolicyForwardingPathAny) InterfaceAny() *NetworkInstance_PolicyForwarding_InterfacePathAny {
	return &NetworkInstance_PolicyForwarding_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): Configuration and operationals state relating to the
// relationship between interfaces and policy-based forwarding
// rules.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_PolicyForwardingPath) Interface(InterfaceId string) *NetworkInstance_PolicyForwarding_InterfacePath {
	return &NetworkInstance_PolicyForwarding_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): Configuration and operationals state relating to the
// relationship between interfaces and policy-based forwarding
// rules.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_PolicyForwardingPathAny) Interface(InterfaceId string) *NetworkInstance_PolicyForwarding_InterfacePathAny {
	return &NetworkInstance_PolicyForwarding_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// PathSelectionGroupAny (list): A path selection group is a set of forwarding resources,
// which are grouped as eligible paths for a particular
// policy-based forwarding rule. A policy rule may select a
// path-selection-group as the egress for a particular type of
// traffic (e.g., DSCP value). The system then utilises its
// standard forwarding lookup mechanism to select from the
// paths that are specified within the group - for IP packets,
// the destination IP address is used such that the packet is
// routed to the entity within the path-selection-group that
// corresponds to the next-hop for the destination IP address
// of the packet; for L2 packets, the selection is based on the
// destination MAC address. If multiple paths within the
// selection group are eligible to be used for forwarding,
// the packets are load-balanced between them according to
// the system's usual load balancing logic.
// ----------------------------------------
// Defining module: "openconfig-pf-path-groups"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-selection-groups/path-selection-group"
// Path from root: "/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group"
// GroupId (wildcarded): string
func (n *NetworkInstance_PolicyForwardingPath) PathSelectionGroupAny() *NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny {
	return &NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-selection-groups", "path-selection-group"},
			map[string]interface{}{"group-id": "*"},
			n,
		),
	}
}

// PathSelectionGroupAny (list): A path selection group is a set of forwarding resources,
// which are grouped as eligible paths for a particular
// policy-based forwarding rule. A policy rule may select a
// path-selection-group as the egress for a particular type of
// traffic (e.g., DSCP value). The system then utilises its
// standard forwarding lookup mechanism to select from the
// paths that are specified within the group - for IP packets,
// the destination IP address is used such that the packet is
// routed to the entity within the path-selection-group that
// corresponds to the next-hop for the destination IP address
// of the packet; for L2 packets, the selection is based on the
// destination MAC address. If multiple paths within the
// selection group are eligible to be used for forwarding,
// the packets are load-balanced between them according to
// the system's usual load balancing logic.
// ----------------------------------------
// Defining module: "openconfig-pf-path-groups"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-selection-groups/path-selection-group"
// Path from root: "/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group"
// GroupId (wildcarded): string
func (n *NetworkInstance_PolicyForwardingPathAny) PathSelectionGroupAny() *NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny {
	return &NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-selection-groups", "path-selection-group"},
			map[string]interface{}{"group-id": "*"},
			n,
		),
	}
}

// PathSelectionGroup (list): A path selection group is a set of forwarding resources,
// which are grouped as eligible paths for a particular
// policy-based forwarding rule. A policy rule may select a
// path-selection-group as the egress for a particular type of
// traffic (e.g., DSCP value). The system then utilises its
// standard forwarding lookup mechanism to select from the
// paths that are specified within the group - for IP packets,
// the destination IP address is used such that the packet is
// routed to the entity within the path-selection-group that
// corresponds to the next-hop for the destination IP address
// of the packet; for L2 packets, the selection is based on the
// destination MAC address. If multiple paths within the
// selection group are eligible to be used for forwarding,
// the packets are load-balanced between them according to
// the system's usual load balancing logic.
// ----------------------------------------
// Defining module: "openconfig-pf-path-groups"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-selection-groups/path-selection-group"
// Path from root: "/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group"
// GroupId: string
func (n *NetworkInstance_PolicyForwardingPath) PathSelectionGroup(GroupId string) *NetworkInstance_PolicyForwarding_PathSelectionGroupPath {
	return &NetworkInstance_PolicyForwarding_PathSelectionGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"path-selection-groups", "path-selection-group"},
			map[string]interface{}{"group-id": GroupId},
			n,
		),
	}
}

// PathSelectionGroup (list): A path selection group is a set of forwarding resources,
// which are grouped as eligible paths for a particular
// policy-based forwarding rule. A policy rule may select a
// path-selection-group as the egress for a particular type of
// traffic (e.g., DSCP value). The system then utilises its
// standard forwarding lookup mechanism to select from the
// paths that are specified within the group - for IP packets,
// the destination IP address is used such that the packet is
// routed to the entity within the path-selection-group that
// corresponds to the next-hop for the destination IP address
// of the packet; for L2 packets, the selection is based on the
// destination MAC address. If multiple paths within the
// selection group are eligible to be used for forwarding,
// the packets are load-balanced between them according to
// the system's usual load balancing logic.
// ----------------------------------------
// Defining module: "openconfig-pf-path-groups"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-selection-groups/path-selection-group"
// Path from root: "/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group"
// GroupId: string
func (n *NetworkInstance_PolicyForwardingPathAny) PathSelectionGroup(GroupId string) *NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny {
	return &NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-selection-groups", "path-selection-group"},
			map[string]interface{}{"group-id": GroupId},
			n,
		),
	}
}

// PolicyAny (list): A forwarding policy is defined to have a set of match
// criteria, allowing particular fields of a packet's header to
// be matched, and a set of forwarding actions which determines
// how the local system should forward the packet.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "policies/policy"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy"
// PolicyId (wildcarded): string
func (n *NetworkInstance_PolicyForwardingPath) PolicyAny() *NetworkInstance_PolicyForwarding_PolicyPathAny {
	return &NetworkInstance_PolicyForwarding_PolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"policies", "policy"},
			map[string]interface{}{"policy-id": "*"},
			n,
		),
	}
}

// PolicyAny (list): A forwarding policy is defined to have a set of match
// criteria, allowing particular fields of a packet's header to
// be matched, and a set of forwarding actions which determines
// how the local system should forward the packet.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "policies/policy"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy"
// PolicyId (wildcarded): string
func (n *NetworkInstance_PolicyForwardingPathAny) PolicyAny() *NetworkInstance_PolicyForwarding_PolicyPathAny {
	return &NetworkInstance_PolicyForwarding_PolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"policies", "policy"},
			map[string]interface{}{"policy-id": "*"},
			n,
		),
	}
}

// Policy (list): A forwarding policy is defined to have a set of match
// criteria, allowing particular fields of a packet's header to
// be matched, and a set of forwarding actions which determines
// how the local system should forward the packet.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "policies/policy"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy"
// PolicyId: string
func (n *NetworkInstance_PolicyForwardingPath) Policy(PolicyId string) *NetworkInstance_PolicyForwarding_PolicyPath {
	return &NetworkInstance_PolicyForwarding_PolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"policies", "policy"},
			map[string]interface{}{"policy-id": PolicyId},
			n,
		),
	}
}

// Policy (list): A forwarding policy is defined to have a set of match
// criteria, allowing particular fields of a packet's header to
// be matched, and a set of forwarding actions which determines
// how the local system should forward the packet.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "policies/policy"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy"
// PolicyId: string
func (n *NetworkInstance_PolicyForwardingPathAny) Policy(PolicyId string) *NetworkInstance_PolicyForwarding_PolicyPathAny {
	return &NetworkInstance_PolicyForwarding_PolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"policies", "policy"},
			map[string]interface{}{"policy-id": PolicyId},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface YANG schema element.
type NetworkInstance_PolicyForwarding_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface YANG schema element.
type NetworkInstance_PolicyForwarding_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_ApplyForwardingPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/config/apply-forwarding-policy YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_ApplyForwardingPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_ApplyForwardingPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/config/apply-forwarding-policy YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_ApplyForwardingPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_ApplyVrfSelectionPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/config/apply-vrf-selection-policy YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_ApplyVrfSelectionPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_ApplyVrfSelectionPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/config/apply-vrf-selection-policy YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_ApplyVrfSelectionPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// ApplyForwardingPolicy (leaf): The policy to be applied on the interface. Packets ingress on
// the referenced interface should be compared to the match
// criteria within the specified policy, and in the case that
// these criteria are met, the forwarding actions specified
// applied. These policies should be applied following quality of
// service classification, and ACL actions if such entities are
// referenced by the corresponding interface.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/apply-forwarding-policy"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/config/apply-forwarding-policy"
func (n *NetworkInstance_PolicyForwarding_InterfacePath) ApplyForwardingPolicy() *NetworkInstance_PolicyForwarding_Interface_ApplyForwardingPolicyPath {
	return &NetworkInstance_PolicyForwarding_Interface_ApplyForwardingPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "apply-forwarding-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ApplyForwardingPolicy (leaf): The policy to be applied on the interface. Packets ingress on
// the referenced interface should be compared to the match
// criteria within the specified policy, and in the case that
// these criteria are met, the forwarding actions specified
// applied. These policies should be applied following quality of
// service classification, and ACL actions if such entities are
// referenced by the corresponding interface.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/apply-forwarding-policy"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/config/apply-forwarding-policy"
func (n *NetworkInstance_PolicyForwarding_InterfacePathAny) ApplyForwardingPolicy() *NetworkInstance_PolicyForwarding_Interface_ApplyForwardingPolicyPathAny {
	return &NetworkInstance_PolicyForwarding_Interface_ApplyForwardingPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "apply-forwarding-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ApplyVrfSelectionPolicy (leaf): Apply the specific VRF selection policy on the interface. The referenced policy
// MUST be of type VRF_SELECTION_POLICY. The VRF selection policy may coexist with
// a policy-forwarding policy.
//
// The policy specified in this leaf is used to specifically choose the L3VRF network
// instance that is used for specific input criteria of packets.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/apply-vrf-selection-policy"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/config/apply-vrf-selection-policy"
func (n *NetworkInstance_PolicyForwarding_InterfacePath) ApplyVrfSelectionPolicy() *NetworkInstance_PolicyForwarding_Interface_ApplyVrfSelectionPolicyPath {
	return &NetworkInstance_PolicyForwarding_Interface_ApplyVrfSelectionPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "apply-vrf-selection-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ApplyVrfSelectionPolicy (leaf): Apply the specific VRF selection policy on the interface. The referenced policy
// MUST be of type VRF_SELECTION_POLICY. The VRF selection policy may coexist with
// a policy-forwarding policy.
//
// The policy specified in this leaf is used to specifically choose the L3VRF network
// instance that is used for specific input criteria of packets.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/apply-vrf-selection-policy"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/config/apply-vrf-selection-policy"
func (n *NetworkInstance_PolicyForwarding_InterfacePathAny) ApplyVrfSelectionPolicy() *NetworkInstance_PolicyForwarding_Interface_ApplyVrfSelectionPolicyPathAny {
	return &NetworkInstance_PolicyForwarding_Interface_ApplyVrfSelectionPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "apply-vrf-selection-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): A unique identifier for the interface.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/config/interface-id"
func (n *NetworkInstance_PolicyForwarding_InterfacePath) InterfaceId() *NetworkInstance_PolicyForwarding_Interface_InterfaceIdPath {
	return &NetworkInstance_PolicyForwarding_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): A unique identifier for the interface.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/config/interface-id"
func (n *NetworkInstance_PolicyForwarding_InterfacePathAny) InterfaceId() *NetworkInstance_PolicyForwarding_Interface_InterfaceIdPathAny {
	return &NetworkInstance_PolicyForwarding_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref"
func (n *NetworkInstance_PolicyForwarding_InterfacePath) InterfaceRef() *NetworkInstance_PolicyForwarding_Interface_InterfaceRefPath {
	return &NetworkInstance_PolicyForwarding_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref"
func (n *NetworkInstance_PolicyForwarding_InterfacePathAny) InterfaceRef() *NetworkInstance_PolicyForwarding_Interface_InterfaceRefPathAny {
	return &NetworkInstance_PolicyForwarding_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_PolicyForwarding_Interface_InterfaceRefPath) Interface() *NetworkInstance_PolicyForwarding_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_PolicyForwarding_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_PolicyForwarding_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_PolicyForwarding_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_PolicyForwarding_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_PolicyForwarding_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_PolicyForwarding_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_PolicyForwarding_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_PolicyForwarding_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_PolicyForwarding_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_PolicyForwarding_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_PathSelectionGroupPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group YANG schema element.
type NetworkInstance_PolicyForwarding_PathSelectionGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group YANG schema element.
type NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_PathSelectionGroup_GroupIdPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group/config/group-id YANG schema element.
type NetworkInstance_PolicyForwarding_PathSelectionGroup_GroupIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_PathSelectionGroup_GroupIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group/config/group-id YANG schema element.
type NetworkInstance_PolicyForwarding_PathSelectionGroup_GroupIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_PathSelectionGroup_MplsLspPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group/config/mpls-lsp YANG schema element.
type NetworkInstance_PolicyForwarding_PathSelectionGroup_MplsLspPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_PathSelectionGroup_MplsLspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group/config/mpls-lsp YANG schema element.
type NetworkInstance_PolicyForwarding_PathSelectionGroup_MplsLspPathAny struct {
	*ygot.NodePath
}

// GroupId (leaf): A unique name for the path-selection-group
// ----------------------------------------
// Defining module: "openconfig-pf-path-groups"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/group-id"
// Path from root: "/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group/config/group-id"
func (n *NetworkInstance_PolicyForwarding_PathSelectionGroupPath) GroupId() *NetworkInstance_PolicyForwarding_PathSelectionGroup_GroupIdPath {
	return &NetworkInstance_PolicyForwarding_PathSelectionGroup_GroupIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "group-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// GroupId (leaf): A unique name for the path-selection-group
// ----------------------------------------
// Defining module: "openconfig-pf-path-groups"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/group-id"
// Path from root: "/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group/config/group-id"
func (n *NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny) GroupId() *NetworkInstance_PolicyForwarding_PathSelectionGroup_GroupIdPathAny {
	return &NetworkInstance_PolicyForwarding_PathSelectionGroup_GroupIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "group-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLsp (leaf-list): A set of MPLS constrained-path LSPs which should be
// considered for the policy forwarding next-hop. In order to
// select between the LSPs within the path-selection-group, the
// system should determine which LSP provides the best path to
// the next-hop for the routed packet.
// ----------------------------------------
// Defining module: "openconfig-pf-path-groups"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mpls-lsp"
// Path from root: "/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group/config/mpls-lsp"
func (n *NetworkInstance_PolicyForwarding_PathSelectionGroupPath) MplsLsp() *NetworkInstance_PolicyForwarding_PathSelectionGroup_MplsLspPath {
	return &NetworkInstance_PolicyForwarding_PathSelectionGroup_MplsLspPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mpls-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLsp (leaf-list): A set of MPLS constrained-path LSPs which should be
// considered for the policy forwarding next-hop. In order to
// select between the LSPs within the path-selection-group, the
// system should determine which LSP provides the best path to
// the next-hop for the routed packet.
// ----------------------------------------
// Defining module: "openconfig-pf-path-groups"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mpls-lsp"
// Path from root: "/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group/config/mpls-lsp"
func (n *NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny) MplsLsp() *NetworkInstance_PolicyForwarding_PathSelectionGroup_MplsLspPathAny {
	return &NetworkInstance_PolicyForwarding_PathSelectionGroup_MplsLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mpls-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_PolicyPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy YANG schema element.
type NetworkInstance_PolicyForwarding_PolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_PolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy YANG schema element.
type NetworkInstance_PolicyForwarding_PolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_PolicyIdPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/config/policy-id YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_PolicyIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_PolicyIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/config/policy-id YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_PolicyIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_TypePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/config/type YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/config/type YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_TypePathAny struct {
	*ygot.NodePath
}

// PolicyId (leaf): A unique name identifying the forwarding policy. This name is
// used when applying the policy to a particular interface.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/policy-id"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/config/policy-id"
func (n *NetworkInstance_PolicyForwarding_PolicyPath) PolicyId() *NetworkInstance_PolicyForwarding_Policy_PolicyIdPath {
	return &NetworkInstance_PolicyForwarding_Policy_PolicyIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "policy-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PolicyId (leaf): A unique name identifying the forwarding policy. This name is
// used when applying the policy to a particular interface.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/policy-id"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/config/policy-id"
func (n *NetworkInstance_PolicyForwarding_PolicyPathAny) PolicyId() *NetworkInstance_PolicyForwarding_Policy_PolicyIdPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_PolicyIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "policy-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RuleAny (list): A match rule for the policy. In the case that multiple
// criteria are specified within a single rule, all criteria
// must be met for the rule to be applied to a packet.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rules/rule"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule"
// SequenceId (wildcarded): uint32
func (n *NetworkInstance_PolicyForwarding_PolicyPath) RuleAny() *NetworkInstance_PolicyForwarding_Policy_RulePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_RulePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rules", "rule"},
			map[string]interface{}{"sequence-id": "*"},
			n,
		),
	}
}

// RuleAny (list): A match rule for the policy. In the case that multiple
// criteria are specified within a single rule, all criteria
// must be met for the rule to be applied to a packet.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rules/rule"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule"
// SequenceId (wildcarded): uint32
func (n *NetworkInstance_PolicyForwarding_PolicyPathAny) RuleAny() *NetworkInstance_PolicyForwarding_Policy_RulePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_RulePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rules", "rule"},
			map[string]interface{}{"sequence-id": "*"},
			n,
		),
	}
}

// Rule (list): A match rule for the policy. In the case that multiple
// criteria are specified within a single rule, all criteria
// must be met for the rule to be applied to a packet.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rules/rule"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule"
// SequenceId: uint32
func (n *NetworkInstance_PolicyForwarding_PolicyPath) Rule(SequenceId uint32) *NetworkInstance_PolicyForwarding_Policy_RulePath {
	return &NetworkInstance_PolicyForwarding_Policy_RulePath{
		NodePath: ygot.NewNodePath(
			[]string{"rules", "rule"},
			map[string]interface{}{"sequence-id": SequenceId},
			n,
		),
	}
}

// Rule (list): A match rule for the policy. In the case that multiple
// criteria are specified within a single rule, all criteria
// must be met for the rule to be applied to a packet.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rules/rule"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule"
// SequenceId: uint32
func (n *NetworkInstance_PolicyForwarding_PolicyPathAny) Rule(SequenceId uint32) *NetworkInstance_PolicyForwarding_Policy_RulePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_RulePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rules", "rule"},
			map[string]interface{}{"sequence-id": SequenceId},
			n,
		),
	}
}

// Type (leaf): The type of the policy. By default policies are generally usable for policy-based
// routing, and have no restrictions on their implementation. Where there are alternate
// policy types, this leaf specifies that a policy is expected to conform with a subset
// of the functionality as described in the specified type.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/type"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/config/type"
func (n *NetworkInstance_PolicyForwarding_PolicyPath) Type() *NetworkInstance_PolicyForwarding_Policy_TypePath {
	return &NetworkInstance_PolicyForwarding_Policy_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the policy. By default policies are generally usable for policy-based
// routing, and have no restrictions on their implementation. Where there are alternate
// policy types, this leaf specifies that a policy is expected to conform with a subset
// of the functionality as described in the specified type.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/type"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/config/type"
func (n *NetworkInstance_PolicyForwarding_PolicyPathAny) Type() *NetworkInstance_PolicyForwarding_Policy_TypePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Policy_RulePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_RulePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_RulePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_RulePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_SequenceIdPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/config/sequence-id YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_SequenceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_SequenceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/config/sequence-id YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_SequenceIdPathAny struct {
	*ygot.NodePath
}

// Action (container): The forwarding policy action to be applied for
// packets matching the rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "action"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePath) Action() *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath{
		NodePath: ygot.NewNodePath(
			[]string{"action"},
			map[string]interface{}{},
			n,
		),
	}
}

// Action (container): The forwarding policy action to be applied for
// packets matching the rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "action"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePathAny) Action() *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"action"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4 (container): Top level container for IPv4 match field data
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePath) Ipv4() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4 (container): Top level container for IPv4 match field data
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePathAny) Ipv4() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6 (container): Top-level container for IPv6 match field data
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePath) Ipv6() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6 (container): Top-level container for IPv6 match field data
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePathAny) Ipv6() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2 (container): Ethernet header fields
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePath) L2() *NetworkInstance_PolicyForwarding_Policy_Rule_L2Path {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2Path{
		NodePath: ygot.NewNodePath(
			[]string{"l2"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2 (container): Ethernet header fields
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePathAny) L2() *NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l2"},
			map[string]interface{}{},
			n,
		),
	}
}

// SequenceId (leaf): Unique sequence number for the policy rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/sequence-id"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/config/sequence-id"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePath) SequenceId() *NetworkInstance_PolicyForwarding_Policy_Rule_SequenceIdPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_SequenceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "sequence-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SequenceId (leaf): Unique sequence number for the policy rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/sequence-id"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/config/sequence-id"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePathAny) SequenceId() *NetworkInstance_PolicyForwarding_Policy_Rule_SequenceIdPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_SequenceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "sequence-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): Transport fields container
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePath) Transport() *NetworkInstance_PolicyForwarding_Policy_Rule_TransportPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_TransportPath{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): Transport fields container
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePathAny) Transport() *NetworkInstance_PolicyForwarding_Policy_Rule_TransportPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_TransportPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGrePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/decapsulate-gre YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGrePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGrePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/decapsulate-gre YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGrePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGuePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/decapsulate-gue YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGuePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/decapsulate-gue YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateMplsInUdpPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/decapsulate-mpls-in-udp YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateMplsInUdpPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateMplsInUdpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/decapsulate-mpls-in-udp YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateMplsInUdpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_DiscardPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/discard YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_DiscardPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_DiscardPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/discard YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_DiscardPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_NetworkInstancePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/network-instance YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_NetworkInstancePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_NetworkInstancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/network-instance YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_NetworkInstancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/next-hop YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/next-hop YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_PathSelectionGroupPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/path-selection-group YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_PathSelectionGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_PathSelectionGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/path-selection-group YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_PathSelectionGroupPathAny struct {
	*ygot.NodePath
}

// DecapsulateGre (leaf): When this leaf is set to true, the local system should remove
// the GRE header from the packet matching the rule. Following
// the decapsulation it should subsequently forward the
// encapsulated packet according to the relevant lookup (e.g., if
// the encapsulated packet is IP, the packet should be routed
// according to the IP destination).
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/decapsulate-gre"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/decapsulate-gre"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath) DecapsulateGre() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGrePath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGrePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "decapsulate-gre"},
			map[string]interface{}{},
			n,
		),
	}
}

// DecapsulateGre (leaf): When this leaf is set to true, the local system should remove
// the GRE header from the packet matching the rule. Following
// the decapsulation it should subsequently forward the
// encapsulated packet according to the relevant lookup (e.g., if
// the encapsulated packet is IP, the packet should be routed
// according to the IP destination).
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/decapsulate-gre"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/decapsulate-gre"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny) DecapsulateGre() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGrePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGrePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "decapsulate-gre"},
			map[string]interface{}{},
			n,
		),
	}
}

// DecapsulateGue (leaf): When this leaf is set to true, the local system should remove
// the Generic UDP Encapsulation (GUE) header from the packet matching
// the rule. Following the decapsulation it should subsequently forward the
// encapsulated packet according to the underlying IPv4 or IPv6 header.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/decapsulate-gue"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/decapsulate-gue"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath) DecapsulateGue() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGuePath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGuePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "decapsulate-gue"},
			map[string]interface{}{},
			n,
		),
	}
}

// DecapsulateGue (leaf): When this leaf is set to true, the local system should remove
// the Generic UDP Encapsulation (GUE) header from the packet matching
// the rule. Following the decapsulation it should subsequently forward the
// encapsulated packet according to the underlying IPv4 or IPv6 header.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/decapsulate-gue"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/decapsulate-gue"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny) DecapsulateGue() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGuePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "decapsulate-gue"},
			map[string]interface{}{},
			n,
		),
	}
}

// DecapsulateMplsInUdp (leaf): When this leaf is set to true, the local system should remove
// the UDP header from the packet matching the rule.
// Following the decapsulation it should subsequently forward the
// encapsulated packet according to the underlying MPLS label.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/decapsulate-mpls-in-udp"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/decapsulate-mpls-in-udp"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath) DecapsulateMplsInUdp() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateMplsInUdpPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateMplsInUdpPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "decapsulate-mpls-in-udp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DecapsulateMplsInUdp (leaf): When this leaf is set to true, the local system should remove
// the UDP header from the packet matching the rule.
// Following the decapsulation it should subsequently forward the
// encapsulated packet according to the underlying MPLS label.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/decapsulate-mpls-in-udp"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/decapsulate-mpls-in-udp"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny) DecapsulateMplsInUdp() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateMplsInUdpPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateMplsInUdpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "decapsulate-mpls-in-udp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Discard (leaf): When this leaf is set to true, the local system should drop
// packets that match the rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/discard"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/discard"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath) Discard() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_DiscardPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_DiscardPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "discard"},
			map[string]interface{}{},
			n,
		),
	}
}

// Discard (leaf): When this leaf is set to true, the local system should drop
// packets that match the rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/discard"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/discard"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny) Discard() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_DiscardPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_DiscardPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "discard"},
			map[string]interface{}{},
			n,
		),
	}
}

// EncapsulateGre (container): Packets matching the policy rule should be GRE encapsulated
// towards the set of targets defined within the target list. Where
// more than one target is specified, or the target subnet expands
// to more than one endpoint, packets should be load-balanced across
// the destination addresses within the subnets.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "encapsulate-gre"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath) EncapsulateGre() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePath{
		NodePath: ygot.NewNodePath(
			[]string{"encapsulate-gre"},
			map[string]interface{}{},
			n,
		),
	}
}

// EncapsulateGre (container): Packets matching the policy rule should be GRE encapsulated
// towards the set of targets defined within the target list. Where
// more than one target is specified, or the target subnet expands
// to more than one endpoint, packets should be load-balanced across
// the destination addresses within the subnets.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "encapsulate-gre"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny) EncapsulateGre() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"encapsulate-gre"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance (leaf): When this leaf is set, packets matching the match criteria
// for the forwarding rule should be looked up in the
// network-instance that is referenced rather than the
// network-instance with which the interface is associated.
// Such configuration allows policy-routing into multiple
// sub-topologies from a single ingress access interface, or
// different send and receive contexts for a particular
// interface (sometimes referred to as half-duplex VRF).
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/network-instance"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/network-instance"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath) NetworkInstance() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_NetworkInstancePath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_NetworkInstancePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "network-instance"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance (leaf): When this leaf is set, packets matching the match criteria
// for the forwarding rule should be looked up in the
// network-instance that is referenced rather than the
// network-instance with which the interface is associated.
// Such configuration allows policy-routing into multiple
// sub-topologies from a single ingress access interface, or
// different send and receive contexts for a particular
// interface (sometimes referred to as half-duplex VRF).
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/network-instance"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/network-instance"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny) NetworkInstance() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_NetworkInstancePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_NetworkInstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "network-instance"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): When an IP next-hop is specified in the next-hop field,
// packets matching the match criteria for the forwarding rule
// should be forwarded to the next-hop IP address, bypassing any
// lookup on the local system.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/next-hop"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/next-hop"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath) NextHop() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_NextHopPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): When an IP next-hop is specified in the next-hop field,
// packets matching the match criteria for the forwarding rule
// should be forwarded to the next-hop IP address, bypassing any
// lookup on the local system.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/next-hop"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/next-hop"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny) NextHop() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_NextHopPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathSelectionGroup (leaf): When path-selection-group is set, packets matching the
// match criteria for the forwarding rule should be forwarded
// only via one of the paths that is specified within the
// referenced path-selection-group. The next-hop of the packet
// within the routing context should be used to determine between
// multiple paths that are specified within the group.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/path-selection-group"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/path-selection-group"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath) PathSelectionGroup() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_PathSelectionGroupPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_PathSelectionGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "path-selection-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathSelectionGroup (leaf): When path-selection-group is set, packets matching the
// match criteria for the forwarding rule should be forwarded
// only via one of the paths that is specified within the
// referenced path-selection-group. The next-hop of the packet
// within the routing context should be used to determine between
// multiple paths that are specified within the group.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/path-selection-group"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/config/path-selection-group"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny) PathSelectionGroup() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_PathSelectionGroupPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_PathSelectionGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "path-selection-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_IdentifyingPrefixPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/config/identifying-prefix YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_IdentifyingPrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_IdentifyingPrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/config/identifying-prefix YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_IdentifyingPrefixPathAny struct {
	*ygot.NodePath
}

// IdentifyingPrefix (leaf): An IP prefix that can be used to identify the group of
// GRE endpoints that are being encapsulated towards. Systems
// that require an IP identifier for the tunnel set
// should use this prefix as the next-hop identifier.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/identifying-prefix"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/config/identifying-prefix"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePath) IdentifyingPrefix() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_IdentifyingPrefixPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_IdentifyingPrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "identifying-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// IdentifyingPrefix (leaf): An IP prefix that can be used to identify the group of
// GRE endpoints that are being encapsulated towards. Systems
// that require an IP identifier for the tunnel set
// should use this prefix as the next-hop identifier.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/identifying-prefix"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/config/identifying-prefix"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePathAny) IdentifyingPrefix() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_IdentifyingPrefixPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_IdentifyingPrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "identifying-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// TargetAny (list): Each target specified within this list should be treated as a
// endpoint to which packets should be GRE encapsulated. Where the
// set of destinations described within a single entry expands to
// more than one destination IP address, packets should be load
// shared across the destination using the local system's ECMP hashing
// mechanisms.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targets/target"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target"
// Id (wildcarded): string
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePath) TargetAny() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"targets", "target"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// TargetAny (list): Each target specified within this list should be treated as a
// endpoint to which packets should be GRE encapsulated. Where the
// set of destinations described within a single entry expands to
// more than one destination IP address, packets should be load
// shared across the destination using the local system's ECMP hashing
// mechanisms.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targets/target"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target"
// Id (wildcarded): string
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePathAny) TargetAny() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"targets", "target"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Target (list): Each target specified within this list should be treated as a
// endpoint to which packets should be GRE encapsulated. Where the
// set of destinations described within a single entry expands to
// more than one destination IP address, packets should be load
// shared across the destination using the local system's ECMP hashing
// mechanisms.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targets/target"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target"
// Id: string
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePath) Target(Id string) *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPath{
		NodePath: ygot.NewNodePath(
			[]string{"targets", "target"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Target (list): Each target specified within this list should be treated as a
// endpoint to which packets should be GRE encapsulated. Where the
// set of destinations described within a single entry expands to
// more than one destination IP address, packets should be load
// shared across the destination using the local system's ECMP hashing
// mechanisms.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targets/target"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target"
// Id: string
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePathAny) Target(Id string) *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"targets", "target"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_DestinationPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/config/destination YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_DestinationPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_DestinationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/config/destination YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_DestinationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IdPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/config/id YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/config/id YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IpTtlPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/config/ip-ttl YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IpTtlPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IpTtlPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/config/ip-ttl YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IpTtlPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_SourcePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/config/source YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_SourcePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_SourcePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/config/source YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_SourcePathAny struct {
	*ygot.NodePath
}

// Destination (leaf): The set of destination addresses that should be encapsulated towards.
// Where a subnet is specified, each address within the subnet should be
// treated as an independent destination for encapsulated traffic. Packets
// should be distributed with ECMP across the set of tunnel destination
// addresses.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/destination"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/config/destination"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPath) Destination() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_DestinationPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_DestinationPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "destination"},
			map[string]interface{}{},
			n,
		),
	}
}

// Destination (leaf): The set of destination addresses that should be encapsulated towards.
// Where a subnet is specified, each address within the subnet should be
// treated as an independent destination for encapsulated traffic. Packets
// should be distributed with ECMP across the set of tunnel destination
// addresses.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/destination"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/config/destination"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny) Destination() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_DestinationPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_DestinationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "destination"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): A unique identifier for the target.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/id"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/config/id"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPath) Id() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IdPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): A unique identifier for the target.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/id"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/config/id"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny) Id() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IdPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpTtl (leaf): The TTL that should be specified in the IP header of the GRE packet
// encapsulating the packet matching the rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ip-ttl"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/config/ip-ttl"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPath) IpTtl() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IpTtlPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IpTtlPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ip-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpTtl (leaf): The TTL that should be specified in the IP header of the GRE packet
// encapsulating the packet matching the rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ip-ttl"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/config/ip-ttl"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny) IpTtl() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IpTtlPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IpTtlPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ip-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): The source IP address that should be used when encapsulating
// packets from the local system.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/config/source"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPath) Source() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_SourcePath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_SourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): The source IP address that should be used when encapsulating
// packets from the local system.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/config/source"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny) Source() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_SourcePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4 YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4 YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DestinationAddressPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/destination-address YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DestinationAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DestinationAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/destination-address YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DestinationAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/dscp YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/dscp YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpSetPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/dscp-set YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpSetPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpSetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/dscp-set YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpSetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_HopLimitPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/hop-limit YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_HopLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_HopLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/hop-limit YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_HopLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_ProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/protocol YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_ProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_ProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/protocol YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_ProtocolPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_SourceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/source-address YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_SourceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_SourceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/source-address YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_SourceAddressPathAny struct {
	*ygot.NodePath
}

// DestinationAddress (leaf): Destination IPv4 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/destination-address"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/destination-address"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path) DestinationAddress() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DestinationAddressPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DestinationAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "destination-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationAddress (leaf): Destination IPv4 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/destination-address"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/destination-address"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny) DestinationAddress() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DestinationAddressPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DestinationAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "destination-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dscp (leaf): Value of diffserv codepoint.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dscp"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/dscp"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path) Dscp() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dscp (leaf): Value of diffserv codepoint.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dscp"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/dscp"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny) Dscp() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DscpSet (leaf-list): A list of DSCP values to be matched for incoming packets. AN OR match should
// be performed, such that a packet must match one of the values defined in this
// list. If the field is left empty then any DSCP value matches unless the 'dscp'
// leaf is specified. It is not valid to specify both 'dscp' and 'dscp-set together.'
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dscp-set"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/dscp-set"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path) DscpSet() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpSetPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpSetPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dscp-set"},
			map[string]interface{}{},
			n,
		),
	}
}

// DscpSet (leaf-list): A list of DSCP values to be matched for incoming packets. AN OR match should
// be performed, such that a packet must match one of the values defined in this
// list. If the field is left empty then any DSCP value matches unless the 'dscp'
// leaf is specified. It is not valid to specify both 'dscp' and 'dscp-set together.'
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dscp-set"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/dscp-set"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny) DscpSet() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpSetPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpSetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dscp-set"},
			map[string]interface{}{},
			n,
		),
	}
}

// HopLimit (leaf): The IP packet's hop limit -- known as TTL (in hops) in
// IPv4 packets, and hop limit in IPv6
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hop-limit"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/hop-limit"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path) HopLimit() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_HopLimitPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_HopLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hop-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// HopLimit (leaf): The IP packet's hop limit -- known as TTL (in hops) in
// IPv4 packets, and hop limit in IPv6
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hop-limit"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/hop-limit"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny) HopLimit() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_HopLimitPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_HopLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hop-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): The protocol carried in the IP packet, expressed either
// as its IP protocol number, or by a defined identity.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/protocol"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/protocol"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path) Protocol() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_ProtocolPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_ProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): The protocol carried in the IP packet, expressed either
// as its IP protocol number, or by a defined identity.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/protocol"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/protocol"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny) Protocol() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_ProtocolPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IPv4 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source-address"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/source-address"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path) SourceAddress() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_SourceAddressPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_SourceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IPv4 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source-address"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/source-address"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny) SourceAddress() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_SourceAddressPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_SourceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6 YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6 YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationAddressPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/destination-address YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/destination-address YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationFlowLabelPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/destination-flow-label YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationFlowLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationFlowLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/destination-flow-label YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationFlowLabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/dscp YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/dscp YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpSetPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/dscp-set YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpSetPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpSetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/dscp-set YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpSetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_HopLimitPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/hop-limit YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_HopLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_HopLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/hop-limit YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_HopLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_ProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/protocol YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_ProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_ProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/protocol YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_ProtocolPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/source-address YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/source-address YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceFlowLabelPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/source-flow-label YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceFlowLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceFlowLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/source-flow-label YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceFlowLabelPathAny struct {
	*ygot.NodePath
}

// DestinationAddress (leaf): Destination IPv6 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/destination-address"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/destination-address"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path) DestinationAddress() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationAddressPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "destination-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationAddress (leaf): Destination IPv6 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/destination-address"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/destination-address"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny) DestinationAddress() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationAddressPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "destination-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationFlowLabel (leaf): Destination IPv6 Flow label.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/destination-flow-label"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/destination-flow-label"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path) DestinationFlowLabel() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationFlowLabelPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationFlowLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "destination-flow-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationFlowLabel (leaf): Destination IPv6 Flow label.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/destination-flow-label"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/destination-flow-label"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny) DestinationFlowLabel() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationFlowLabelPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationFlowLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "destination-flow-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dscp (leaf): Value of diffserv codepoint.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dscp"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/dscp"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path) Dscp() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dscp (leaf): Value of diffserv codepoint.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dscp"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/dscp"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny) Dscp() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DscpSet (leaf-list): A list of DSCP values to be matched for incoming packets. AN OR match should
// be performed, such that a packet must match one of the values defined in this
// list. If the field is left empty then any DSCP value matches unless the 'dscp'
// leaf is specified. It is not valid to specify both 'dscp' and 'dscp-set together.'
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dscp-set"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/dscp-set"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path) DscpSet() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpSetPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpSetPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dscp-set"},
			map[string]interface{}{},
			n,
		),
	}
}

// DscpSet (leaf-list): A list of DSCP values to be matched for incoming packets. AN OR match should
// be performed, such that a packet must match one of the values defined in this
// list. If the field is left empty then any DSCP value matches unless the 'dscp'
// leaf is specified. It is not valid to specify both 'dscp' and 'dscp-set together.'
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dscp-set"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/dscp-set"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny) DscpSet() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpSetPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpSetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dscp-set"},
			map[string]interface{}{},
			n,
		),
	}
}

// HopLimit (leaf): The IP packet's hop limit -- known as TTL (in hops) in
// IPv4 packets, and hop limit in IPv6
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hop-limit"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/hop-limit"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path) HopLimit() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_HopLimitPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_HopLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hop-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// HopLimit (leaf): The IP packet's hop limit -- known as TTL (in hops) in
// IPv4 packets, and hop limit in IPv6
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hop-limit"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/hop-limit"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny) HopLimit() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_HopLimitPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_HopLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hop-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): The protocol carried in the IP packet, expressed either
// as its IP protocol number, or by a defined identity.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/protocol"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/protocol"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path) Protocol() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_ProtocolPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_ProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): The protocol carried in the IP packet, expressed either
// as its IP protocol number, or by a defined identity.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/protocol"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/protocol"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny) Protocol() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_ProtocolPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IPv6 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source-address"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/source-address"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path) SourceAddress() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceAddressPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IPv6 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source-address"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/source-address"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny) SourceAddress() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceAddressPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceFlowLabel (leaf): Source IPv6 Flow label.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source-flow-label"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/source-flow-label"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path) SourceFlowLabel() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceFlowLabelPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceFlowLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source-flow-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceFlowLabel (leaf): Source IPv6 Flow label.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source-flow-label"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/source-flow-label"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny) SourceFlowLabel() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceFlowLabelPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceFlowLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source-flow-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2Path represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2 YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2Path struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2 YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/destination-mac YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/destination-mac YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacMaskPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/destination-mac-mask YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacMaskPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacMaskPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/destination-mac-mask YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacMaskPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_EthertypePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/ethertype YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_EthertypePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_EthertypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/ethertype YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_EthertypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/source-mac YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/source-mac YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacMaskPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/source-mac-mask YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacMaskPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacMaskPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/source-mac-mask YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacMaskPathAny struct {
	*ygot.NodePath
}

// DestinationMac (leaf): Destination IEEE 802 MAC address.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/destination-mac"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/destination-mac"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2Path) DestinationMac() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "destination-mac"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationMac (leaf): Destination IEEE 802 MAC address.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/destination-mac"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/destination-mac"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny) DestinationMac() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "destination-mac"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationMacMask (leaf): Destination IEEE 802 MAC address mask.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/destination-mac-mask"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/destination-mac-mask"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2Path) DestinationMacMask() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacMaskPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacMaskPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "destination-mac-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationMacMask (leaf): Destination IEEE 802 MAC address mask.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/destination-mac-mask"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/destination-mac-mask"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny) DestinationMacMask() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacMaskPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacMaskPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "destination-mac-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ethertype (leaf): Ethertype field to match in Ethernet packets
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ethertype"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/ethertype"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2Path) Ethertype() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_EthertypePath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_EthertypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ethertype"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ethertype (leaf): Ethertype field to match in Ethernet packets
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ethertype"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/ethertype"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny) Ethertype() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_EthertypePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_EthertypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ethertype"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceMac (leaf): Source IEEE 802 MAC address.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source-mac"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/source-mac"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2Path) SourceMac() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source-mac"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceMac (leaf): Source IEEE 802 MAC address.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source-mac"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/source-mac"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny) SourceMac() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source-mac"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceMacMask (leaf): Source IEEE 802 MAC address mask.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source-mac-mask"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/source-mac-mask"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2Path) SourceMacMask() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacMaskPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacMaskPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source-mac-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceMacMask (leaf): Source IEEE 802 MAC address mask.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source-mac-mask"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/source-mac-mask"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny) SourceMacMask() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacMaskPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacMaskPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source-mac-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Policy_Rule_TransportPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_TransportPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_TransportPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_TransportPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Transport_DestinationPortPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/destination-port YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Transport_DestinationPortPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Transport_DestinationPortPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/destination-port YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Transport_DestinationPortPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Transport_SourcePortPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/source-port YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Transport_SourcePortPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Transport_SourcePortPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/source-port YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Transport_SourcePortPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Transport_TcpFlagsPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/tcp-flags YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Transport_TcpFlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Transport_TcpFlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/tcp-flags YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Transport_TcpFlagsPathAny struct {
	*ygot.NodePath
}

// DestinationPort (leaf): Destination port or range
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/destination-port"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/destination-port"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_TransportPath) DestinationPort() *NetworkInstance_PolicyForwarding_Policy_Rule_Transport_DestinationPortPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Transport_DestinationPortPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "destination-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationPort (leaf): Destination port or range
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/destination-port"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/destination-port"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_TransportPathAny) DestinationPort() *NetworkInstance_PolicyForwarding_Policy_Rule_Transport_DestinationPortPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Transport_DestinationPortPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "destination-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourcePort (leaf): Source port or range
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source-port"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/source-port"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_TransportPath) SourcePort() *NetworkInstance_PolicyForwarding_Policy_Rule_Transport_SourcePortPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Transport_SourcePortPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourcePort (leaf): Source port or range
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source-port"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/source-port"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_TransportPathAny) SourcePort() *NetworkInstance_PolicyForwarding_Policy_Rule_Transport_SourcePortPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Transport_SourcePortPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// TcpFlags (leaf-list): List of TCP flags to match
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/tcp-flags"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/tcp-flags"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_TransportPath) TcpFlags() *NetworkInstance_PolicyForwarding_Policy_Rule_Transport_TcpFlagsPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Transport_TcpFlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "tcp-flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// TcpFlags (leaf-list): List of TCP flags to match
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/tcp-flags"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/tcp-flags"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_TransportPathAny) TcpFlags() *NetworkInstance_PolicyForwarding_Policy_Rule_Transport_TcpFlagsPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Transport_TcpFlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "tcp-flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_ProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol YANG schema element.
type NetworkInstance_ProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_ProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol YANG schema element.
type NetworkInstance_ProtocolPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_DefaultMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/config/default-metric YANG schema element.
type NetworkInstance_Protocol_DefaultMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_DefaultMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/config/default-metric YANG schema element.
type NetworkInstance_Protocol_DefaultMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/config/enabled YANG schema element.
type NetworkInstance_Protocol_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/config/enabled YANG schema element.
type NetworkInstance_Protocol_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_IdentifierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/config/identifier YANG schema element.
type NetworkInstance_Protocol_IdentifierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_IdentifierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/config/identifier YANG schema element.
type NetworkInstance_Protocol_IdentifierPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_NamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/config/name YANG schema element.
type NetworkInstance_Protocol_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/config/name YANG schema element.
type NetworkInstance_Protocol_NamePathAny struct {
	*ygot.NodePath
}

// AggregateAny (list): List of aggregates
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "local-aggregates/aggregate"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate"
// Prefix (wildcarded): string
func (n *NetworkInstance_ProtocolPath) AggregateAny() *NetworkInstance_Protocol_AggregatePathAny {
	return &NetworkInstance_Protocol_AggregatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"local-aggregates", "aggregate"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// AggregateAny (list): List of aggregates
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "local-aggregates/aggregate"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate"
// Prefix (wildcarded): string
func (n *NetworkInstance_ProtocolPathAny) AggregateAny() *NetworkInstance_Protocol_AggregatePathAny {
	return &NetworkInstance_Protocol_AggregatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"local-aggregates", "aggregate"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// Aggregate (list): List of aggregates
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "local-aggregates/aggregate"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate"
// Prefix: string
func (n *NetworkInstance_ProtocolPath) Aggregate(Prefix string) *NetworkInstance_Protocol_AggregatePath {
	return &NetworkInstance_Protocol_AggregatePath{
		NodePath: ygot.NewNodePath(
			[]string{"local-aggregates", "aggregate"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// Aggregate (list): List of aggregates
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "local-aggregates/aggregate"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate"
// Prefix: string
func (n *NetworkInstance_ProtocolPathAny) Aggregate(Prefix string) *NetworkInstance_Protocol_AggregatePathAny {
	return &NetworkInstance_Protocol_AggregatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"local-aggregates", "aggregate"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// Bgp (container): Top-level configuration and state for the BGP router
// ----------------------------------------
// Defining module: "openconfig-bgp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp"
func (n *NetworkInstance_ProtocolPath) Bgp() *NetworkInstance_Protocol_BgpPath {
	return &NetworkInstance_Protocol_BgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"bgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bgp (container): Top-level configuration and state for the BGP router
// ----------------------------------------
// Defining module: "openconfig-bgp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp"
func (n *NetworkInstance_ProtocolPathAny) Bgp() *NetworkInstance_Protocol_BgpPathAny {
	return &NetworkInstance_Protocol_BgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultMetric (leaf): The default metric within the RIB for entries that are
// installed by this protocol instance. This value may
// be overridden by protocol specific configuration options.
// The lower the metric specified the more preferable the RIB
// entry is to be selected for use within the network instance.
// Where multiple entries have the same metric value then these
// equal cost paths should be treated according to the specified
// ECMP path selection behaviour for the instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/config/default-metric"
func (n *NetworkInstance_ProtocolPath) DefaultMetric() *NetworkInstance_Protocol_DefaultMetricPath {
	return &NetworkInstance_Protocol_DefaultMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultMetric (leaf): The default metric within the RIB for entries that are
// installed by this protocol instance. This value may
// be overridden by protocol specific configuration options.
// The lower the metric specified the more preferable the RIB
// entry is to be selected for use within the network instance.
// Where multiple entries have the same metric value then these
// equal cost paths should be treated according to the specified
// ECMP path selection behaviour for the instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/config/default-metric"
func (n *NetworkInstance_ProtocolPathAny) DefaultMetric() *NetworkInstance_Protocol_DefaultMetricPathAny {
	return &NetworkInstance_Protocol_DefaultMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): A boolean value indicating whether the local protocol
// instance is enabled.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/config/enabled"
func (n *NetworkInstance_ProtocolPath) Enabled() *NetworkInstance_Protocol_EnabledPath {
	return &NetworkInstance_Protocol_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): A boolean value indicating whether the local protocol
// instance is enabled.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/config/enabled"
func (n *NetworkInstance_ProtocolPathAny) Enabled() *NetworkInstance_Protocol_EnabledPathAny {
	return &NetworkInstance_Protocol_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Identifier (leaf): The protocol identifier for the instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/config/identifier"
func (n *NetworkInstance_ProtocolPath) Identifier() *NetworkInstance_Protocol_IdentifierPath {
	return &NetworkInstance_Protocol_IdentifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// Identifier (leaf): The protocol identifier for the instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/config/identifier"
func (n *NetworkInstance_ProtocolPathAny) Identifier() *NetworkInstance_Protocol_IdentifierPathAny {
	return &NetworkInstance_Protocol_IdentifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// Igmp (container): Top-level IGMP configuration and operational state.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igmp"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp"
func (n *NetworkInstance_ProtocolPath) Igmp() *NetworkInstance_Protocol_IgmpPath {
	return &NetworkInstance_Protocol_IgmpPath{
		NodePath: ygot.NewNodePath(
			[]string{"igmp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Igmp (container): Top-level IGMP configuration and operational state.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igmp"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp"
func (n *NetworkInstance_ProtocolPathAny) Igmp() *NetworkInstance_Protocol_IgmpPathAny {
	return &NetworkInstance_Protocol_IgmpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igmp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Isis (container): This container defines top-level ISIS configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "isis"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis"
func (n *NetworkInstance_ProtocolPath) Isis() *NetworkInstance_Protocol_IsisPath {
	return &NetworkInstance_Protocol_IsisPath{
		NodePath: ygot.NewNodePath(
			[]string{"isis"},
			map[string]interface{}{},
			n,
		),
	}
}

// Isis (container): This container defines top-level ISIS configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "isis"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis"
func (n *NetworkInstance_ProtocolPathAny) Isis() *NetworkInstance_Protocol_IsisPathAny {
	return &NetworkInstance_Protocol_IsisPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"isis"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): A unique name for the protocol instance.
//
// If the operator does not designate a name for the protocol
// instance (e.g. config), the implementation should use the
// name of 'DEFAULT' (e.g. state).  In addition, for
// implementations that support single protocol instances, the
// default value is recommended for consistency and uniqueness
// per protocol instance.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/protocols/protocol/config/name"
func (n *NetworkInstance_ProtocolPath) Name() *NetworkInstance_Protocol_NamePath {
	return &NetworkInstance_Protocol_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): A unique name for the protocol instance.
//
// If the operator does not designate a name for the protocol
// instance (e.g. config), the implementation should use the
// name of 'DEFAULT' (e.g. state).  In addition, for
// implementations that support single protocol instances, the
// default value is recommended for consistency and uniqueness
// per protocol instance.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/protocols/protocol/config/name"
func (n *NetworkInstance_ProtocolPathAny) Name() *NetworkInstance_Protocol_NamePathAny {
	return &NetworkInstance_Protocol_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ospfv2 (container): Top-level configuration and operational state for
// Open Shortest Path First (OSPF) v2
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ospfv2"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2"
func (n *NetworkInstance_ProtocolPath) Ospfv2() *NetworkInstance_Protocol_Ospfv2Path {
	return &NetworkInstance_Protocol_Ospfv2Path{
		NodePath: ygot.NewNodePath(
			[]string{"ospfv2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ospfv2 (container): Top-level configuration and operational state for
// Open Shortest Path First (OSPF) v2
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ospfv2"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2"
func (n *NetworkInstance_ProtocolPathAny) Ospfv2() *NetworkInstance_Protocol_Ospfv2PathAny {
	return &NetworkInstance_Protocol_Ospfv2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ospfv2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Pim (container): Top-level PIM configuration and operational state.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "pim"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim"
func (n *NetworkInstance_ProtocolPath) Pim() *NetworkInstance_Protocol_PimPath {
	return &NetworkInstance_Protocol_PimPath{
		NodePath: ygot.NewNodePath(
			[]string{"pim"},
			map[string]interface{}{},
			n,
		),
	}
}

// Pim (container): Top-level PIM configuration and operational state.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "pim"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim"
func (n *NetworkInstance_ProtocolPathAny) Pim() *NetworkInstance_Protocol_PimPathAny {
	return &NetworkInstance_Protocol_PimPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"pim"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaticAny (list): List of locally configured static routes
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-routes/static"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static"
// Prefix (wildcarded): string
func (n *NetworkInstance_ProtocolPath) StaticAny() *NetworkInstance_Protocol_StaticPathAny {
	return &NetworkInstance_Protocol_StaticPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-routes", "static"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// StaticAny (list): List of locally configured static routes
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-routes/static"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static"
// Prefix (wildcarded): string
func (n *NetworkInstance_ProtocolPathAny) StaticAny() *NetworkInstance_Protocol_StaticPathAny {
	return &NetworkInstance_Protocol_StaticPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-routes", "static"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// Static (list): List of locally configured static routes
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-routes/static"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static"
// Prefix: string
func (n *NetworkInstance_ProtocolPath) Static(Prefix string) *NetworkInstance_Protocol_StaticPath {
	return &NetworkInstance_Protocol_StaticPath{
		NodePath: ygot.NewNodePath(
			[]string{"static-routes", "static"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// Static (list): List of locally configured static routes
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-routes/static"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static"
// Prefix: string
func (n *NetworkInstance_ProtocolPathAny) Static(Prefix string) *NetworkInstance_Protocol_StaticPathAny {
	return &NetworkInstance_Protocol_StaticPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-routes", "static"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// NetworkInstance_Protocol_AggregatePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate YANG schema element.
type NetworkInstance_Protocol_AggregatePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_AggregatePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate YANG schema element.
type NetworkInstance_Protocol_AggregatePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_DescriptionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/description YANG schema element.
type NetworkInstance_Protocol_Aggregate_DescriptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_DescriptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/description YANG schema element.
type NetworkInstance_Protocol_Aggregate_DescriptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_DiscardPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/discard YANG schema element.
type NetworkInstance_Protocol_Aggregate_DiscardPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_DiscardPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/discard YANG schema element.
type NetworkInstance_Protocol_Aggregate_DiscardPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/metric YANG schema element.
type NetworkInstance_Protocol_Aggregate_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/metric YANG schema element.
type NetworkInstance_Protocol_Aggregate_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_PreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/preference YANG schema element.
type NetworkInstance_Protocol_Aggregate_PreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_PreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/preference YANG schema element.
type NetworkInstance_Protocol_Aggregate_PreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/prefix YANG schema element.
type NetworkInstance_Protocol_Aggregate_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/prefix YANG schema element.
type NetworkInstance_Protocol_Aggregate_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_SetTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/set-tag YANG schema element.
type NetworkInstance_Protocol_Aggregate_SetTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_SetTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/set-tag YANG schema element.
type NetworkInstance_Protocol_Aggregate_SetTagPathAny struct {
	*ygot.NodePath
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/description"
func (n *NetworkInstance_Protocol_AggregatePath) Description() *NetworkInstance_Protocol_Aggregate_DescriptionPath {
	return &NetworkInstance_Protocol_Aggregate_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/description"
func (n *NetworkInstance_Protocol_AggregatePathAny) Description() *NetworkInstance_Protocol_Aggregate_DescriptionPathAny {
	return &NetworkInstance_Protocol_Aggregate_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Discard (leaf): When true, install the aggregate route with a discard
// next-hop -- traffic destined to the aggregate will be
// discarded with no ICMP message generated.  When false,
// traffic destined to an aggregate address when no
// constituent routes are present will generate an ICMP
// unreachable message.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/discard"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/discard"
func (n *NetworkInstance_Protocol_AggregatePath) Discard() *NetworkInstance_Protocol_Aggregate_DiscardPath {
	return &NetworkInstance_Protocol_Aggregate_DiscardPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "discard"},
			map[string]interface{}{},
			n,
		),
	}
}

// Discard (leaf): When true, install the aggregate route with a discard
// next-hop -- traffic destined to the aggregate will be
// discarded with no ICMP message generated.  When false,
// traffic destined to an aggregate address when no
// constituent routes are present will generate an ICMP
// unreachable message.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/discard"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/discard"
func (n *NetworkInstance_Protocol_AggregatePathAny) Discard() *NetworkInstance_Protocol_Aggregate_DiscardPathAny {
	return &NetworkInstance_Protocol_Aggregate_DiscardPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "discard"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): A metric (or cost) which is utilized to specify the order of
// selection of the next-hop entry.  The lower the metric, the more
// preferable the prefix entry is.  When this value is not
// specified, the metric is inherited from the default metric of
// the implementation for static route entries.  When multiple
// next-hops are specified for a static route, the metric is
// utilized to determine which of the next-hops to be installed in
// the RIB.  When multiple next-hops have the same metric (be it
// specified, or simply the default) then these next-hops should
// all be installed in the RIB.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/metric"
func (n *NetworkInstance_Protocol_AggregatePath) Metric() *NetworkInstance_Protocol_Aggregate_MetricPath {
	return &NetworkInstance_Protocol_Aggregate_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): A metric (or cost) which is utilized to specify the order of
// selection of the next-hop entry.  The lower the metric, the more
// preferable the prefix entry is.  When this value is not
// specified, the metric is inherited from the default metric of
// the implementation for static route entries.  When multiple
// next-hops are specified for a static route, the metric is
// utilized to determine which of the next-hops to be installed in
// the RIB.  When multiple next-hops have the same metric (be it
// specified, or simply the default) then these next-hops should
// all be installed in the RIB.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/metric"
func (n *NetworkInstance_Protocol_AggregatePathAny) Metric() *NetworkInstance_Protocol_Aggregate_MetricPathAny {
	return &NetworkInstance_Protocol_Aggregate_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Administrative Distance (preference) of the entry.  The
// preference defines the order of selection when multiple
// sources (protocols, static, etc.) contribute to the same
// prefix entry.  The lower the preference, the more preferable the
// prefix is.  When this value is not specified, the preference is
// inherited from the default preference of the implementation for
// static routes.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/preference"
func (n *NetworkInstance_Protocol_AggregatePath) Preference() *NetworkInstance_Protocol_Aggregate_PreferencePath {
	return &NetworkInstance_Protocol_Aggregate_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Administrative Distance (preference) of the entry.  The
// preference defines the order of selection when multiple
// sources (protocols, static, etc.) contribute to the same
// prefix entry.  The lower the preference, the more preferable the
// prefix is.  When this value is not specified, the preference is
// inherited from the default preference of the implementation for
// static routes.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/preference"
func (n *NetworkInstance_Protocol_AggregatePathAny) Preference() *NetworkInstance_Protocol_Aggregate_PreferencePathAny {
	return &NetworkInstance_Protocol_Aggregate_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): Aggregate prefix to be advertised
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/prefix"
func (n *NetworkInstance_Protocol_AggregatePath) Prefix() *NetworkInstance_Protocol_Aggregate_PrefixPath {
	return &NetworkInstance_Protocol_Aggregate_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): Aggregate prefix to be advertised
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/prefix"
func (n *NetworkInstance_Protocol_AggregatePathAny) Prefix() *NetworkInstance_Protocol_Aggregate_PrefixPathAny {
	return &NetworkInstance_Protocol_Aggregate_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/set-tag"
func (n *NetworkInstance_Protocol_AggregatePath) SetTag() *NetworkInstance_Protocol_Aggregate_SetTagPath {
	return &NetworkInstance_Protocol_Aggregate_SetTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/set-tag"
func (n *NetworkInstance_Protocol_AggregatePathAny) SetTag() *NetworkInstance_Protocol_Aggregate_SetTagPathAny {
	return &NetworkInstance_Protocol_Aggregate_SetTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_BgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp YANG schema element.
type NetworkInstance_Protocol_BgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_BgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp YANG schema element.
type NetworkInstance_Protocol_BgpPathAny struct {
	*ygot.NodePath
}

// Global (container): Global configuration for the BGP router
// ----------------------------------------
// Defining module: "openconfig-bgp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global"
func (n *NetworkInstance_Protocol_BgpPath) Global() *NetworkInstance_Protocol_Bgp_GlobalPath {
	return &NetworkInstance_Protocol_Bgp_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): Global configuration for the BGP router
// ----------------------------------------
// Defining module: "openconfig-bgp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global"
func (n *NetworkInstance_Protocol_BgpPathAny) Global() *NetworkInstance_Protocol_Bgp_GlobalPathAny {
	return &NetworkInstance_Protocol_Bgp_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAny (list): List of BGP neighbors configured on the local system,
// uniquely identified by peer IPv[46] address
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor"
// NeighborAddress (wildcarded): string
func (n *NetworkInstance_Protocol_BgpPath) NeighborAny() *NetworkInstance_Protocol_Bgp_NeighborPathAny {
	return &NetworkInstance_Protocol_Bgp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": "*"},
			n,
		),
	}
}

// NeighborAny (list): List of BGP neighbors configured on the local system,
// uniquely identified by peer IPv[46] address
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor"
// NeighborAddress (wildcarded): string
func (n *NetworkInstance_Protocol_BgpPathAny) NeighborAny() *NetworkInstance_Protocol_Bgp_NeighborPathAny {
	return &NetworkInstance_Protocol_Bgp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": "*"},
			n,
		),
	}
}

// Neighbor (list): List of BGP neighbors configured on the local system,
// uniquely identified by peer IPv[46] address
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor"
// NeighborAddress: string
func (n *NetworkInstance_Protocol_BgpPath) Neighbor(NeighborAddress string) *NetworkInstance_Protocol_Bgp_NeighborPath {
	return &NetworkInstance_Protocol_Bgp_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": NeighborAddress},
			n,
		),
	}
}

// Neighbor (list): List of BGP neighbors configured on the local system,
// uniquely identified by peer IPv[46] address
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor"
// NeighborAddress: string
func (n *NetworkInstance_Protocol_BgpPathAny) Neighbor(NeighborAddress string) *NetworkInstance_Protocol_Bgp_NeighborPathAny {
	return &NetworkInstance_Protocol_Bgp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": NeighborAddress},
			n,
		),
	}
}

// PeerGroupAny (list): List of BGP peer-groups configured on the local system -
// uniquely identified by peer-group name
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "peer-groups/peer-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group"
// PeerGroupName (wildcarded): string
func (n *NetworkInstance_Protocol_BgpPath) PeerGroupAny() *NetworkInstance_Protocol_Bgp_PeerGroupPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"peer-groups", "peer-group"},
			map[string]interface{}{"peer-group-name": "*"},
			n,
		),
	}
}

// PeerGroupAny (list): List of BGP peer-groups configured on the local system -
// uniquely identified by peer-group name
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "peer-groups/peer-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group"
// PeerGroupName (wildcarded): string
func (n *NetworkInstance_Protocol_BgpPathAny) PeerGroupAny() *NetworkInstance_Protocol_Bgp_PeerGroupPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"peer-groups", "peer-group"},
			map[string]interface{}{"peer-group-name": "*"},
			n,
		),
	}
}

// PeerGroup (list): List of BGP peer-groups configured on the local system -
// uniquely identified by peer-group name
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "peer-groups/peer-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group"
// PeerGroupName: string
func (n *NetworkInstance_Protocol_BgpPath) PeerGroup(PeerGroupName string) *NetworkInstance_Protocol_Bgp_PeerGroupPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"peer-groups", "peer-group"},
			map[string]interface{}{"peer-group-name": PeerGroupName},
			n,
		),
	}
}

// PeerGroup (list): List of BGP peer-groups configured on the local system -
// uniquely identified by peer-group name
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "peer-groups/peer-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group"
// PeerGroupName: string
func (n *NetworkInstance_Protocol_BgpPathAny) PeerGroup(PeerGroupName string) *NetworkInstance_Protocol_Bgp_PeerGroupPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"peer-groups", "peer-group"},
			map[string]interface{}{"peer-group-name": PeerGroupName},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global YANG schema element.
type NetworkInstance_Protocol_Bgp_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global YANG schema element.
type NetworkInstance_Protocol_Bgp_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/config/as YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/config/as YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/config/router-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/config/router-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouterIdPathAny struct {
	*ygot.NodePath
}

// AfiSafiAny (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi"
// AfiSafiName (wildcarded): oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) AfiSafiAny() *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": "*"},
			n,
		),
	}
}

// AfiSafiAny (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi"
// AfiSafiName (wildcarded): oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) AfiSafiAny() *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": "*"},
			n,
		),
	}
}

// AfiSafi (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi"
// AfiSafiName: oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) AfiSafi(AfiSafiName oc.E_BgpTypes_AFI_SAFI_TYPE) *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafiPath{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": AfiSafiName},
			n,
		),
	}
}

// AfiSafi (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi"
// AfiSafiName: oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) AfiSafi(AfiSafiName oc.E_BgpTypes_AFI_SAFI_TYPE) *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": AfiSafiName},
			n,
		),
	}
}

// As (leaf): Local autonomous system number of the router.  Uses
// the 32-bit as-number type from the model in RFC 6991.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/config/as"
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) As() *NetworkInstance_Protocol_Bgp_Global_AsPath {
	return &NetworkInstance_Protocol_Bgp_Global_AsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "as"},
			map[string]interface{}{},
			n,
		),
	}
}

// As (leaf): Local autonomous system number of the router.  Uses
// the 32-bit as-number type from the model in RFC 6991.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/config/as"
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) As() *NetworkInstance_Protocol_Bgp_Global_AsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "as"},
			map[string]interface{}{},
			n,
		),
	}
}

// Confederation (container): Parameters indicating whether the local system acts as part
// of a BGP confederation
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "confederation"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/confederation"
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) Confederation() *NetworkInstance_Protocol_Bgp_Global_ConfederationPath {
	return &NetworkInstance_Protocol_Bgp_Global_ConfederationPath{
		NodePath: ygot.NewNodePath(
			[]string{"confederation"},
			map[string]interface{}{},
			n,
		),
	}
}

// Confederation (container): Parameters indicating whether the local system acts as part
// of a BGP confederation
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "confederation"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/confederation"
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) Confederation() *NetworkInstance_Protocol_Bgp_Global_ConfederationPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_ConfederationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"confederation"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultRouteDistance (container): Administrative distance (or preference) assigned to
// routes received from different sources
// (external, internal, and local).
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "default-route-distance"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/default-route-distance"
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) DefaultRouteDistance() *NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistancePath {
	return &NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistancePath{
		NodePath: ygot.NewNodePath(
			[]string{"default-route-distance"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultRouteDistance (container): Administrative distance (or preference) assigned to
// routes received from different sources
// (external, internal, and local).
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "default-route-distance"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/default-route-distance"
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) DefaultRouteDistance() *NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistancePathAny {
	return &NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"default-route-distance"},
			map[string]interface{}{},
			n,
		),
	}
}

// DynamicNeighborPrefixAny (list): An individual prefix from which dynamic neighbor
// connections are allowed.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "dynamic-neighbor-prefixes/dynamic-neighbor-prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) DynamicNeighborPrefixAny() *NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"dynamic-neighbor-prefixes", "dynamic-neighbor-prefix"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// DynamicNeighborPrefixAny (list): An individual prefix from which dynamic neighbor
// connections are allowed.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "dynamic-neighbor-prefixes/dynamic-neighbor-prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) DynamicNeighborPrefixAny() *NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"dynamic-neighbor-prefixes", "dynamic-neighbor-prefix"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// DynamicNeighborPrefix (list): An individual prefix from which dynamic neighbor
// connections are allowed.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "dynamic-neighbor-prefixes/dynamic-neighbor-prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix"
// Prefix: string
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) DynamicNeighborPrefix(Prefix string) *NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPath {
	return &NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"dynamic-neighbor-prefixes", "dynamic-neighbor-prefix"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// DynamicNeighborPrefix (list): An individual prefix from which dynamic neighbor
// connections are allowed.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "dynamic-neighbor-prefixes/dynamic-neighbor-prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix"
// Prefix: string
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) DynamicNeighborPrefix(Prefix string) *NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"dynamic-neighbor-prefixes", "dynamic-neighbor-prefix"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating the graceful restart mechanism for BGP
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) GracefulRestart() *NetworkInstance_Protocol_Bgp_Global_GracefulRestartPath {
	return &NetworkInstance_Protocol_Bgp_Global_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating the graceful restart mechanism for BGP
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) GracefulRestart() *NetworkInstance_Protocol_Bgp_Global_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteSelectionOptions (container): Parameters relating to options for route selection
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-selection-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options"
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) RouteSelectionOptions() *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPath {
	return &NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"route-selection-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteSelectionOptions (container): Parameters relating to options for route selection
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-selection-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options"
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) RouteSelectionOptions() *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"route-selection-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): Router id of the router - an unsigned 32-bit integer
// expressed in dotted quad notation.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/config/router-id"
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) RouterId() *NetworkInstance_Protocol_Bgp_Global_RouterIdPath {
	return &NetworkInstance_Protocol_Bgp_Global_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): Router id of the router - an unsigned 32-bit integer
// expressed in dotted quad notation.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/config/router-id"
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) RouterId() *NetworkInstance_Protocol_Bgp_Global_RouterIdPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple paths for the
// same NLRI
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPath {
	return &NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple paths for the
// same NLRI
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafiPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafiPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AfiSafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/config/afi-safi-name YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AfiSafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AfiSafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/config/afi-safi-name YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AfiSafiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_EnabledPathAny struct {
	*ygot.NodePath
}

// AddPaths (container): Parameters relating to the advertisement and receipt of
// multiple paths for a single NLRI (add-paths)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "add-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) AddPaths() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"add-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddPaths (container): Parameters relating to the advertisement and receipt of
// multiple paths for a single NLRI (add-paths)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "add-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) AddPaths() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"add-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiSafiName (leaf): AFI,SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/config/afi-safi-name"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) AfiSafiName() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AfiSafiNamePath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AfiSafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiSafiName (leaf): AFI,SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/config/afi-safi-name"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) AfiSafiName() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AfiSafiNamePathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AfiSafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): This leaf indicates whether the AFI-SAFI is
// enabled for the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) Enabled() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): This leaf indicates whether the AFI-SAFI is
// enabled for the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating to BGP graceful-restart
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) GracefulRestart() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating to BGP graceful-restart
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) GracefulRestart() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4LabeledUnicast (container): IPv4 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) Ipv4LabeledUnicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4LabeledUnicast (container): IPv4 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) Ipv4LabeledUnicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4Unicast (container): IPv4 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) Ipv4Unicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4Unicast (container): IPv4 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) Ipv4Unicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6LabeledUnicast (container): IPv6 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) Ipv6LabeledUnicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6LabeledUnicast (container): IPv6 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) Ipv6LabeledUnicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Unicast (container): IPv6 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) Ipv6Unicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Unicast (container): IPv6 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) Ipv6Unicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnEvpn (container): BGP EVPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-evpn"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) L2VpnEvpn() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPath{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-evpn"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnEvpn (container): BGP EVPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-evpn"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) L2VpnEvpn() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-evpn"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnVpls (container): BGP-signalled VPLS configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-vpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) L2VpnVpls() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-vpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnVpls (container): BGP-signalled VPLS configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-vpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) L2VpnVpls() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-vpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Multicast (container): Multicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) L3VpnIpv4Multicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Multicast (container): Multicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) L3VpnIpv4Multicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Unicast (container): Unicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) L3VpnIpv4Unicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Unicast (container): Unicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) L3VpnIpv4Unicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Multicast (container): Multicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) L3VpnIpv6Multicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6MulticastPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6MulticastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Multicast (container): Multicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) L3VpnIpv6Multicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6MulticastPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6MulticastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Unicast (container): Unicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) L3VpnIpv6Unicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6UnicastPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Unicast (container): Unicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) L3VpnIpv6Unicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteSelectionOptions (container): Parameters relating to options for route selection
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-selection-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) RouteSelectionOptions() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"route-selection-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteSelectionOptions (container): Parameters relating to options for route selection
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-selection-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) RouteSelectionOptions() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"route-selection-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv4 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv4 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv4"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) SrtePolicyIpv4() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4Path {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4Path{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv4"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv4 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv4 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv4"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) SrtePolicyIpv4() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4PathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv4"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv6 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv6 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv6"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) SrtePolicyIpv6() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6Path {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6Path{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv6"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv6 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv6 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv6"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) SrtePolicyIpv6() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6PathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv6"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple paths for the
// same NLRI
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple paths for the
// same NLRI
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_EligiblePrefixPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/config/eligible-prefix-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_EligiblePrefixPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/config/eligible-prefix-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_ReceivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/config/receive YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_ReceivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_ReceivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/config/receive YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_ReceivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/config/send YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/config/send YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendMaxPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/config/send-max YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendMaxPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendMaxPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/config/send-max YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendMaxPathAny struct {
	*ygot.NodePath
}

// EligiblePrefixPolicy (leaf): A reference to a routing policy which can be used to
// restrict the prefixes for which add-paths is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/eligible-prefix-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/config/eligible-prefix-policy"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPath) EligiblePrefixPolicy() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_EligiblePrefixPolicyPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_EligiblePrefixPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "eligible-prefix-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// EligiblePrefixPolicy (leaf): A reference to a routing policy which can be used to
// restrict the prefixes for which add-paths is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/eligible-prefix-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/config/eligible-prefix-policy"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPathAny) EligiblePrefixPolicy() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "eligible-prefix-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// Receive (leaf): Enable capability negotiation to receive multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/receive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/config/receive"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPath) Receive() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_ReceivePath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_ReceivePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "receive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Receive (leaf): Enable capability negotiation to receive multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/receive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/config/receive"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPathAny) Receive() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_ReceivePathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_ReceivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "receive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Send (leaf): Enable capability negotiation to send multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/config/send"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPath) Send() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send"},
			map[string]interface{}{},
			n,
		),
	}
}

// Send (leaf): Enable capability negotiation to send multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/config/send"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPathAny) Send() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendMax (leaf): The maximum total number of paths to advertise to neighbors
// for a single NLRI.  This includes the single best path as
// well as additional paths advertised when add-paths is
// enabled.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-max"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/config/send-max"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPath) SendMax() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendMaxPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendMaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-max"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendMax (leaf): The maximum total number of paths to advertise to neighbors
// for a single NLRI.  This includes the single best path as
// well as additional paths advertised when add-paths is
// enabled.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-max"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/config/send-max"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPathAny) SendMax() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendMaxPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendMaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-max"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): This leaf indicates whether graceful-restart is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): This leaf indicates whether graceful-restart is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/config/extended-next-hop-encoding YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/config/extended-next-hop-encoding YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_SendDefaultRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/config/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_SendDefaultRoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/config/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny struct {
	*ygot.NodePath
}

// ExtendedNextHopEncoding (leaf): This leaf indicates whether extended next-hop encoding is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/extended-next-hop-encoding"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/config/extended-next-hop-encoding"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPath) ExtendedNextHopEncoding() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "extended-next-hop-encoding"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedNextHopEncoding (leaf): This leaf indicates whether extended next-hop encoding is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/extended-next-hop-encoding"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/config/extended-next-hop-encoding"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPathAny) ExtendedNextHopEncoding() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "extended-next-hop-encoding"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/config/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPath) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_SendDefaultRoutePath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_SendDefaultRoutePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/config/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPathAny) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_SendDefaultRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/config/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_SendDefaultRoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/config/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/config/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPath) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_SendDefaultRoutePath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_SendDefaultRoutePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/config/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPathAny) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6MulticastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6MulticastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6MulticastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6MulticastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6MulticastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6MulticastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6MulticastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6MulticastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6UnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_AdvertiseInactiveRoutesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/advertise-inactive-routes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_AdvertiseInactiveRoutesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_AdvertiseInactiveRoutesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/advertise-inactive-routes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_AdvertiseInactiveRoutesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_AlwaysCompareMedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/always-compare-med YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_AlwaysCompareMedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_AlwaysCompareMedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/always-compare-med YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_AlwaysCompareMedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_EnableAigpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/enable-aigp YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_EnableAigpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_EnableAigpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/enable-aigp YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_EnableAigpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_ExternalCompareRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/external-compare-router-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_ExternalCompareRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_ExternalCompareRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/external-compare-router-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_ExternalCompareRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_IgnoreAsPathLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/ignore-as-path-length YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_IgnoreAsPathLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_IgnoreAsPathLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/ignore-as-path-length YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_IgnoreAsPathLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_IgnoreNextHopIgpMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/ignore-next-hop-igp-metric YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_IgnoreNextHopIgpMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_IgnoreNextHopIgpMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/ignore-next-hop-igp-metric YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_IgnoreNextHopIgpMetricPathAny struct {
	*ygot.NodePath
}

// AdvertiseInactiveRoutes (leaf): Advertise inactive routes to external peers.  The
// default is to only advertise active routes.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/advertise-inactive-routes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/advertise-inactive-routes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPath) AdvertiseInactiveRoutes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_AdvertiseInactiveRoutesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_AdvertiseInactiveRoutesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "advertise-inactive-routes"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdvertiseInactiveRoutes (leaf): Advertise inactive routes to external peers.  The
// default is to only advertise active routes.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/advertise-inactive-routes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/advertise-inactive-routes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPathAny) AdvertiseInactiveRoutes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_AdvertiseInactiveRoutesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_AdvertiseInactiveRoutesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "advertise-inactive-routes"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlwaysCompareMed (leaf): Compare multi-exit discriminator (MED) value from
// different ASes when selecting the best route.  The
// default behavior is to only compare MEDs for paths
// received from the same AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/always-compare-med"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/always-compare-med"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPath) AlwaysCompareMed() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_AlwaysCompareMedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_AlwaysCompareMedPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "always-compare-med"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlwaysCompareMed (leaf): Compare multi-exit discriminator (MED) value from
// different ASes when selecting the best route.  The
// default behavior is to only compare MEDs for paths
// received from the same AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/always-compare-med"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/always-compare-med"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPathAny) AlwaysCompareMed() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_AlwaysCompareMedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_AlwaysCompareMedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "always-compare-med"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableAigp (leaf): Flag to enable sending / receiving accumulated IGP
// attribute in routing updates
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable-aigp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/enable-aigp"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPath) EnableAigp() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_EnableAigpPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_EnableAigpPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable-aigp"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableAigp (leaf): Flag to enable sending / receiving accumulated IGP
// attribute in routing updates
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable-aigp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/enable-aigp"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPathAny) EnableAigp() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_EnableAigpPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_EnableAigpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable-aigp"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExternalCompareRouterId (leaf): When comparing similar routes received from external
// BGP peers, use the router-id as a criterion to select
// the active path.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/external-compare-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/external-compare-router-id"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPath) ExternalCompareRouterId() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_ExternalCompareRouterIdPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_ExternalCompareRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "external-compare-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExternalCompareRouterId (leaf): When comparing similar routes received from external
// BGP peers, use the router-id as a criterion to select
// the active path.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/external-compare-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/external-compare-router-id"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPathAny) ExternalCompareRouterId() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_ExternalCompareRouterIdPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_ExternalCompareRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "external-compare-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgnoreAsPathLength (leaf): Ignore the AS path length when selecting the best path.
// The default is to use the AS path length and prefer paths
// with shorter length.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ignore-as-path-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/ignore-as-path-length"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPath) IgnoreAsPathLength() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_IgnoreAsPathLengthPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_IgnoreAsPathLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ignore-as-path-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgnoreAsPathLength (leaf): Ignore the AS path length when selecting the best path.
// The default is to use the AS path length and prefer paths
// with shorter length.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ignore-as-path-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/ignore-as-path-length"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPathAny) IgnoreAsPathLength() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_IgnoreAsPathLengthPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_IgnoreAsPathLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ignore-as-path-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgnoreNextHopIgpMetric (leaf): Ignore the IGP metric to the next-hop when calculating
// BGP best-path. The default is to select the route for
// which the metric to the next-hop is lowest
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ignore-next-hop-igp-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/ignore-next-hop-igp-metric"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPath) IgnoreNextHopIgpMetric() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_IgnoreNextHopIgpMetricPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_IgnoreNextHopIgpMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ignore-next-hop-igp-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgnoreNextHopIgpMetric (leaf): Ignore the IGP metric to the next-hop when calculating
// BGP best-path. The default is to select the route for
// which the metric to the next-hop is lowest
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ignore-next-hop-igp-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options/config/ignore-next-hop-igp-metric"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPathAny) IgnoreNextHopIgpMetric() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_IgnoreNextHopIgpMetricPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptions_IgnoreNextHopIgpMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ignore-next-hop-igp-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4 YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4 YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4PathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4Path) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4PathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4Path) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4PathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6 YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6 YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6PathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6Path) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6PathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6Path) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6PathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EnabledPathAny struct {
	*ygot.NodePath
}

// Ebgp (container): Multipath parameters for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPath) Ebgp() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EbgpPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EbgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ebgp (container): Multipath parameters for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPathAny) Ebgp() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EbgpPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EbgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPath) Enabled() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ibgp (container): Multipath parameters for iBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ibgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ibgp"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPath) Ibgp() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_IbgpPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_IbgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ibgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ibgp (container): Multipath parameters for iBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ibgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ibgp"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPathAny) Ibgp() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_IbgpPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_IbgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ibgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EbgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EbgpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ebgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ebgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPathAny struct {
	*ygot.NodePath
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EbgpPath) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EbgpPathAny) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// BGP multipath. The default is use a single path.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ebgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EbgpPath) MaximumPaths() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// BGP multipath. The default is use a single path.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ebgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_EbgpPathAny) MaximumPaths() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_IbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ibgp YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_IbgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_IbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ibgp YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_IbgpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ibgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ibgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPathAny struct {
	*ygot.NodePath
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// iBGP multipath. The default is to use a single path
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ibgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_IbgpPath) MaximumPaths() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// iBGP multipath. The default is to use a single path
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths/ibgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_IbgpPathAny) MaximumPaths() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_ConfederationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/confederation YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_ConfederationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_ConfederationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/confederation YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_ConfederationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_Confederation_IdentifierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/confederation/config/identifier YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_Confederation_IdentifierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_Confederation_IdentifierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/confederation/config/identifier YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_Confederation_IdentifierPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_Confederation_MemberAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/confederation/config/member-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_Confederation_MemberAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_Confederation_MemberAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/confederation/config/member-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_Confederation_MemberAsPathAny struct {
	*ygot.NodePath
}

// Identifier (leaf): Confederation identifier for the autonomous system.
// Setting the identifier indicates that the local-AS is part
// of a BGP confederation.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/confederation/config/identifier"
func (n *NetworkInstance_Protocol_Bgp_Global_ConfederationPath) Identifier() *NetworkInstance_Protocol_Bgp_Global_Confederation_IdentifierPath {
	return &NetworkInstance_Protocol_Bgp_Global_Confederation_IdentifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// Identifier (leaf): Confederation identifier for the autonomous system.
// Setting the identifier indicates that the local-AS is part
// of a BGP confederation.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/confederation/config/identifier"
func (n *NetworkInstance_Protocol_Bgp_Global_ConfederationPathAny) Identifier() *NetworkInstance_Protocol_Bgp_Global_Confederation_IdentifierPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_Confederation_IdentifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// MemberAs (leaf-list): Remote autonomous systems that are to be treated
// as part of the local confederation.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/member-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/confederation/config/member-as"
func (n *NetworkInstance_Protocol_Bgp_Global_ConfederationPath) MemberAs() *NetworkInstance_Protocol_Bgp_Global_Confederation_MemberAsPath {
	return &NetworkInstance_Protocol_Bgp_Global_Confederation_MemberAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "member-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// MemberAs (leaf-list): Remote autonomous systems that are to be treated
// as part of the local confederation.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/member-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/confederation/config/member-as"
func (n *NetworkInstance_Protocol_Bgp_Global_ConfederationPathAny) MemberAs() *NetworkInstance_Protocol_Bgp_Global_Confederation_MemberAsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_Confederation_MemberAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "member-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistancePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/default-route-distance YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistancePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/default-route-distance YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistance_ExternalRouteDistancePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/default-route-distance/config/external-route-distance YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistance_ExternalRouteDistancePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistance_ExternalRouteDistancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/default-route-distance/config/external-route-distance YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistance_ExternalRouteDistancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistance_InternalRouteDistancePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/default-route-distance/config/internal-route-distance YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistance_InternalRouteDistancePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistance_InternalRouteDistancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/default-route-distance/config/internal-route-distance YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistance_InternalRouteDistancePathAny struct {
	*ygot.NodePath
}

// ExternalRouteDistance (leaf): Administrative distance for routes learned from external
// BGP (eBGP).
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/external-route-distance"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/default-route-distance/config/external-route-distance"
func (n *NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistancePath) ExternalRouteDistance() *NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistance_ExternalRouteDistancePath {
	return &NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistance_ExternalRouteDistancePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "external-route-distance"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExternalRouteDistance (leaf): Administrative distance for routes learned from external
// BGP (eBGP).
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/external-route-distance"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/default-route-distance/config/external-route-distance"
func (n *NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistancePathAny) ExternalRouteDistance() *NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistance_ExternalRouteDistancePathAny {
	return &NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistance_ExternalRouteDistancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "external-route-distance"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalRouteDistance (leaf): Administrative distance for routes learned from internal
// BGP (iBGP).
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/internal-route-distance"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/default-route-distance/config/internal-route-distance"
func (n *NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistancePath) InternalRouteDistance() *NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistance_InternalRouteDistancePath {
	return &NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistance_InternalRouteDistancePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "internal-route-distance"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalRouteDistance (leaf): Administrative distance for routes learned from internal
// BGP (iBGP).
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/internal-route-distance"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/default-route-distance/config/internal-route-distance"
func (n *NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistancePathAny) InternalRouteDistance() *NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistance_InternalRouteDistancePathAny {
	return &NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistance_InternalRouteDistancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "internal-route-distance"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefix_PeerGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix/config/peer-group YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefix_PeerGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefix_PeerGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix/config/peer-group YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefix_PeerGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefix_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix/config/prefix YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefix_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefix_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix/config/prefix YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefix_PrefixPathAny struct {
	*ygot.NodePath
}

// PeerGroup (leaf): The peer-group within which the dynamic neighbor will be
// configured.  The configuration parameters used for the dynamic
// neighbor are those specified within the referenced peer
// group.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix/config/peer-group"
func (n *NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPath) PeerGroup() *NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefix_PeerGroupPath {
	return &NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefix_PeerGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerGroup (leaf): The peer-group within which the dynamic neighbor will be
// configured.  The configuration parameters used for the dynamic
// neighbor are those specified within the referenced peer
// group.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix/config/peer-group"
func (n *NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPathAny) PeerGroup() *NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefix_PeerGroupPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefix_PeerGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The IP prefix within which the source address of the remote
// BGP speaker must fall to be considered eligible to the
// dynamically configured.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix/config/prefix"
func (n *NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPath) Prefix() *NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefix_PrefixPath {
	return &NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefix_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The IP prefix within which the source address of the remote
// BGP speaker must fall to be considered eligible to the
// dynamically configured.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix/config/prefix"
func (n *NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPathAny) Prefix() *NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefix_PrefixPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefix_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_GracefulRestart_HelperOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_GracefulRestart_HelperOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_GracefulRestart_HelperOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_GracefulRestart_HelperOnlyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_GracefulRestart_RestartTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_GracefulRestart_RestartTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_GracefulRestart_RestartTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_GracefulRestart_RestartTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_GracefulRestart_StaleRoutesTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart/config/stale-routes-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_GracefulRestart_StaleRoutesTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_GracefulRestart_StaleRoutesTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart/config/stale-routes-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_GracefulRestart_StaleRoutesTimePathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): Enable or disable the graceful-restart capability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Global_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Bgp_Global_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Global_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enable or disable the graceful-restart capability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Global_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Global_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable graceful-restart in helper mode only. When this
// leaf is set, the local system does not retain forwarding
// its own state during a restart, but supports procedures
// for the receiving speaker, as defined in RFC4724.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Bgp_Global_GracefulRestartPath) HelperOnly() *NetworkInstance_Protocol_Bgp_Global_GracefulRestart_HelperOnlyPath {
	return &NetworkInstance_Protocol_Bgp_Global_GracefulRestart_HelperOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable graceful-restart in helper mode only. When this
// leaf is set, the local system does not retain forwarding
// its own state during a restart, but supports procedures
// for the receiving speaker, as defined in RFC4724.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Bgp_Global_GracefulRestartPathAny) HelperOnly() *NetworkInstance_Protocol_Bgp_Global_GracefulRestart_HelperOnlyPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_GracefulRestart_HelperOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Estimated time (in seconds) for the local BGP speaker to
// restart a session. This value is advertise in the graceful
// restart BGP capability.  This is a 12-bit value, referred to
// as Restart Time in RFC4724.  Per RFC4724, the suggested
// default value is <= the hold-time value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_Global_GracefulRestartPath) RestartTime() *NetworkInstance_Protocol_Bgp_Global_GracefulRestart_RestartTimePath {
	return &NetworkInstance_Protocol_Bgp_Global_GracefulRestart_RestartTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Estimated time (in seconds) for the local BGP speaker to
// restart a session. This value is advertise in the graceful
// restart BGP capability.  This is a 12-bit value, referred to
// as Restart Time in RFC4724.  Per RFC4724, the suggested
// default value is <= the hold-time value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_Global_GracefulRestartPathAny) RestartTime() *NetworkInstance_Protocol_Bgp_Global_GracefulRestart_RestartTimePathAny {
	return &NetworkInstance_Protocol_Bgp_Global_GracefulRestart_RestartTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaleRoutesTime (leaf): An upper-bound on the time thate stale routes will be
// retained by a router after a session is restarted. If an
// End-of-RIB (EOR) marker is received prior to this timer
// expiring stale-routes will be flushed upon its receipt - if
// no EOR is received, then when this timer expires stale paths
// will be purged. This timer is referred to as the
// Selection_Deferral_Timer in RFC4724
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/stale-routes-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart/config/stale-routes-time"
func (n *NetworkInstance_Protocol_Bgp_Global_GracefulRestartPath) StaleRoutesTime() *NetworkInstance_Protocol_Bgp_Global_GracefulRestart_StaleRoutesTimePath {
	return &NetworkInstance_Protocol_Bgp_Global_GracefulRestart_StaleRoutesTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "stale-routes-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaleRoutesTime (leaf): An upper-bound on the time thate stale routes will be
// retained by a router after a session is restarted. If an
// End-of-RIB (EOR) marker is received prior to this timer
// expiring stale-routes will be flushed upon its receipt - if
// no EOR is received, then when this timer expires stale paths
// will be purged. This timer is referred to as the
// Selection_Deferral_Timer in RFC4724
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/stale-routes-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart/config/stale-routes-time"
func (n *NetworkInstance_Protocol_Bgp_Global_GracefulRestartPathAny) StaleRoutesTime() *NetworkInstance_Protocol_Bgp_Global_GracefulRestart_StaleRoutesTimePathAny {
	return &NetworkInstance_Protocol_Bgp_Global_GracefulRestart_StaleRoutesTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "stale-routes-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_AdvertiseInactiveRoutesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/advertise-inactive-routes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_AdvertiseInactiveRoutesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_AdvertiseInactiveRoutesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/advertise-inactive-routes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_AdvertiseInactiveRoutesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_AlwaysCompareMedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/always-compare-med YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_AlwaysCompareMedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_AlwaysCompareMedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/always-compare-med YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_AlwaysCompareMedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_EnableAigpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/enable-aigp YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_EnableAigpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_EnableAigpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/enable-aigp YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_EnableAigpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_ExternalCompareRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/external-compare-router-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_ExternalCompareRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_ExternalCompareRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/external-compare-router-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_ExternalCompareRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_IgnoreAsPathLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/ignore-as-path-length YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_IgnoreAsPathLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_IgnoreAsPathLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/ignore-as-path-length YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_IgnoreAsPathLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_IgnoreNextHopIgpMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/ignore-next-hop-igp-metric YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_IgnoreNextHopIgpMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_IgnoreNextHopIgpMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/ignore-next-hop-igp-metric YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_IgnoreNextHopIgpMetricPathAny struct {
	*ygot.NodePath
}

// AdvertiseInactiveRoutes (leaf): Advertise inactive routes to external peers.  The
// default is to only advertise active routes.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/advertise-inactive-routes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/advertise-inactive-routes"
func (n *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPath) AdvertiseInactiveRoutes() *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_AdvertiseInactiveRoutesPath {
	return &NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_AdvertiseInactiveRoutesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "advertise-inactive-routes"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdvertiseInactiveRoutes (leaf): Advertise inactive routes to external peers.  The
// default is to only advertise active routes.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/advertise-inactive-routes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/advertise-inactive-routes"
func (n *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPathAny) AdvertiseInactiveRoutes() *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_AdvertiseInactiveRoutesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_AdvertiseInactiveRoutesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "advertise-inactive-routes"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlwaysCompareMed (leaf): Compare multi-exit discriminator (MED) value from
// different ASes when selecting the best route.  The
// default behavior is to only compare MEDs for paths
// received from the same AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/always-compare-med"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/always-compare-med"
func (n *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPath) AlwaysCompareMed() *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_AlwaysCompareMedPath {
	return &NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_AlwaysCompareMedPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "always-compare-med"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlwaysCompareMed (leaf): Compare multi-exit discriminator (MED) value from
// different ASes when selecting the best route.  The
// default behavior is to only compare MEDs for paths
// received from the same AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/always-compare-med"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/always-compare-med"
func (n *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPathAny) AlwaysCompareMed() *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_AlwaysCompareMedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_AlwaysCompareMedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "always-compare-med"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableAigp (leaf): Flag to enable sending / receiving accumulated IGP
// attribute in routing updates
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable-aigp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/enable-aigp"
func (n *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPath) EnableAigp() *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_EnableAigpPath {
	return &NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_EnableAigpPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable-aigp"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableAigp (leaf): Flag to enable sending / receiving accumulated IGP
// attribute in routing updates
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable-aigp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/enable-aigp"
func (n *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPathAny) EnableAigp() *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_EnableAigpPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_EnableAigpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable-aigp"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExternalCompareRouterId (leaf): When comparing similar routes received from external
// BGP peers, use the router-id as a criterion to select
// the active path.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/external-compare-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/external-compare-router-id"
func (n *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPath) ExternalCompareRouterId() *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_ExternalCompareRouterIdPath {
	return &NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_ExternalCompareRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "external-compare-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExternalCompareRouterId (leaf): When comparing similar routes received from external
// BGP peers, use the router-id as a criterion to select
// the active path.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/external-compare-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/external-compare-router-id"
func (n *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPathAny) ExternalCompareRouterId() *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_ExternalCompareRouterIdPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_ExternalCompareRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "external-compare-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgnoreAsPathLength (leaf): Ignore the AS path length when selecting the best path.
// The default is to use the AS path length and prefer paths
// with shorter length.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ignore-as-path-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/ignore-as-path-length"
func (n *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPath) IgnoreAsPathLength() *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_IgnoreAsPathLengthPath {
	return &NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_IgnoreAsPathLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ignore-as-path-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgnoreAsPathLength (leaf): Ignore the AS path length when selecting the best path.
// The default is to use the AS path length and prefer paths
// with shorter length.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ignore-as-path-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/ignore-as-path-length"
func (n *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPathAny) IgnoreAsPathLength() *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_IgnoreAsPathLengthPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_IgnoreAsPathLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ignore-as-path-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgnoreNextHopIgpMetric (leaf): Ignore the IGP metric to the next-hop when calculating
// BGP best-path. The default is to select the route for
// which the metric to the next-hop is lowest
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ignore-next-hop-igp-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/ignore-next-hop-igp-metric"
func (n *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPath) IgnoreNextHopIgpMetric() *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_IgnoreNextHopIgpMetricPath {
	return &NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_IgnoreNextHopIgpMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ignore-next-hop-igp-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgnoreNextHopIgpMetric (leaf): Ignore the IGP metric to the next-hop when calculating
// BGP best-path. The default is to select the route for
// which the metric to the next-hop is lowest
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ignore-next-hop-igp-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options/config/ignore-next-hop-igp-metric"
func (n *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPathAny) IgnoreNextHopIgpMetric() *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_IgnoreNextHopIgpMetricPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptions_IgnoreNextHopIgpMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ignore-next-hop-igp-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EnabledPathAny struct {
	*ygot.NodePath
}

// Ebgp (container): Multipath parameters for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPath) Ebgp() *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EbgpPath {
	return &NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EbgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ebgp (container): Multipath parameters for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPathAny) Ebgp() *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EbgpPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EbgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPath) Enabled() *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ibgp (container): Multipath parameters for iBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ibgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ibgp"
func (n *NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPath) Ibgp() *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_IbgpPath {
	return &NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_IbgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ibgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ibgp (container): Multipath parameters for iBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ibgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ibgp"
func (n *NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPathAny) Ibgp() *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_IbgpPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_IbgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ibgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EbgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EbgpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ebgp_AllowMultipleAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ebgp_AllowMultipleAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ebgp_MaximumPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ebgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ebgp_MaximumPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ebgp_MaximumPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ebgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ebgp_MaximumPathsPathAny struct {
	*ygot.NodePath
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EbgpPath) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ebgp_AllowMultipleAsPath {
	return &NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ebgp_AllowMultipleAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EbgpPathAny) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// BGP multipath. The default is use a single path.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ebgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EbgpPath) MaximumPaths() *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ebgp_MaximumPathsPath {
	return &NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ebgp_MaximumPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// BGP multipath. The default is use a single path.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ebgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_EbgpPathAny) MaximumPaths() *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ebgp_MaximumPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ebgp_MaximumPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_IbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ibgp YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_IbgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_IbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ibgp YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_IbgpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ibgp_MaximumPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ibgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ibgp_MaximumPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ibgp_MaximumPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ibgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ibgp_MaximumPathsPathAny struct {
	*ygot.NodePath
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// iBGP multipath. The default is to use a single path
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ibgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_IbgpPath) MaximumPaths() *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ibgp_MaximumPathsPath {
	return &NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ibgp_MaximumPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// iBGP multipath. The default is to use a single path
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths/ibgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_IbgpPathAny) MaximumPaths() *NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ibgp_MaximumPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_UseMultiplePaths_Ibgp_MaximumPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Bgp_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Bgp_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AuthPasswordPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AuthPasswordPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AuthPasswordPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AuthPasswordPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_DescriptionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/description YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_DescriptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_DescriptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/description YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_DescriptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_LocalAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/local-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_LocalAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_LocalAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/local-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_LocalAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/neighbor-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/neighbor-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_NeighborPortPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/neighbor-port YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_NeighborPortPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_NeighborPortPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/neighbor-port YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_NeighborPortPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_PeerAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/peer-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_PeerAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_PeerAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/peer-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_PeerAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_PeerGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/peer-group YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_PeerGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_PeerGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/peer-group YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_PeerGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_PeerTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/peer-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_PeerTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_PeerTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/peer-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_PeerTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_RemovePrivateAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/remove-private-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_RemovePrivateAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_RemovePrivateAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/remove-private-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_RemovePrivateAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_RouteFlapDampingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/route-flap-damping YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_RouteFlapDampingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_RouteFlapDampingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/route-flap-damping YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_RouteFlapDampingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_SendCommunityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/send-community YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_SendCommunityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_SendCommunityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/send-community YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_SendCommunityPathAny struct {
	*ygot.NodePath
}

// AfiSafiAny (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi"
// AfiSafiName (wildcarded): oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) AfiSafiAny() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": "*"},
			n,
		),
	}
}

// AfiSafiAny (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi"
// AfiSafiName (wildcarded): oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) AfiSafiAny() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": "*"},
			n,
		),
	}
}

// AfiSafi (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi"
// AfiSafiName: oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) AfiSafi(AfiSafiName oc.E_BgpTypes_AFI_SAFI_TYPE) *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": AfiSafiName},
			n,
		),
	}
}

// AfiSafi (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi"
// AfiSafiName: oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) AfiSafi(AfiSafiName oc.E_BgpTypes_AFI_SAFI_TYPE) *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": AfiSafiName},
			n,
		),
	}
}

// ApplyPolicy (container): Anchor point for routing policies in the model.
// Import and export policies are with respect to the local
// routing table, i.e., export (send) and import (receive),
// depending on the context.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "apply-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) ApplyPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"apply-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ApplyPolicy (container): Anchor point for routing policies in the model.
// Import and export policies are with respect to the local
// routing table, i.e., export (send) and import (receive),
// depending on the context.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "apply-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) ApplyPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"apply-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// AsPathOptions (container): AS_PATH manipulation parameters for the BGP neighbor or
// group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "as-path-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) AsPathOptions() *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"as-path-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// AsPathOptions (container): AS_PATH manipulation parameters for the BGP neighbor or
// group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "as-path-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) AsPathOptions() *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"as-path-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): Configures an MD5 authentication password for use with
// neighboring devices.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/auth-password"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) AuthPassword() *NetworkInstance_Protocol_Bgp_Neighbor_AuthPasswordPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AuthPasswordPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): Configures an MD5 authentication password for use with
// neighboring devices.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/auth-password"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) AuthPassword() *NetworkInstance_Protocol_Bgp_Neighbor_AuthPasswordPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AuthPasswordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): An optional textual description (intended primarily for use
// with a peer or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/description"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) Description() *NetworkInstance_Protocol_Bgp_Neighbor_DescriptionPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): An optional textual description (intended primarily for use
// with a peer or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/description"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) Description() *NetworkInstance_Protocol_Bgp_Neighbor_DescriptionPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// EbgpMultihop (container): eBGP multi-hop parameters for the BGPgroup
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp-multihop"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) EbgpMultihop() *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPath{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp-multihop"},
			map[string]interface{}{},
			n,
		),
	}
}

// EbgpMultihop (container): eBGP multi-hop parameters for the BGPgroup
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp-multihop"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) EbgpMultihop() *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp-multihop"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/enable-bfd"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) EnableBfd() *NetworkInstance_Protocol_Bgp_Neighbor_EnableBfdPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/enable-bfd"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) EnableBfd() *NetworkInstance_Protocol_Bgp_Neighbor_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the BGP peer is enabled. In cases where the
// enabled leaf is set to false, the local system should not
// initiate connections to the neighbor, and should not
// respond to TCP connections attempts from the neighbor. If
// the state of the BGP session is ESTABLISHED at the time
// that this leaf is set to false, the BGP session should be
// ceased.
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the BGP peer is enabled. In cases where the
// enabled leaf is set to false, the local system should not
// initiate connections to the neighbor, and should not
// respond to TCP connections attempts from the neighbor. If
// the state of the BGP session is ESTABLISHED at the time
// that this leaf is set to false, the BGP session should be
// ceased.
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// ErrorHandling (container): Error handling parameters used for the BGP neighbor or
// group
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "error-handling"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/error-handling"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) ErrorHandling() *NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandlingPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandlingPath{
		NodePath: ygot.NewNodePath(
			[]string{"error-handling"},
			map[string]interface{}{},
			n,
		),
	}
}

// ErrorHandling (container): Error handling parameters used for the BGP neighbor or
// group
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "error-handling"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/error-handling"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) ErrorHandling() *NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandlingPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandlingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"error-handling"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating the graceful restart mechanism for BGP
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) GracefulRestart() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating the graceful restart mechanism for BGP
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) GracefulRestart() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalAs (leaf): The local autonomous system number that is to be used
// when establishing sessions with the remote peer or peer
// group, if this differs from the global BGP router
// autonomous system number.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/local-as"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) LocalAs() *NetworkInstance_Protocol_Bgp_Neighbor_LocalAsPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_LocalAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalAs (leaf): The local autonomous system number that is to be used
// when establishing sessions with the remote peer or peer
// group, if this differs from the global BGP router
// autonomous system number.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/local-as"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) LocalAs() *NetworkInstance_Protocol_Bgp_Neighbor_LocalAsPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_LocalAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// LoggingOptions (container): Logging options for events related to the BGP neighbor or
// group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "logging-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/logging-options"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) LoggingOptions() *NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptionsPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"logging-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// LoggingOptions (container): Logging options for events related to the BGP neighbor or
// group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "logging-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/logging-options"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) LoggingOptions() *NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptionsPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"logging-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAddress (leaf): Address of the BGP peer, either in IPv4 or IPv6
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/neighbor-address"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) NeighborAddress() *NetworkInstance_Protocol_Bgp_Neighbor_NeighborAddressPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAddress (leaf): Address of the BGP peer, either in IPv4 or IPv6
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/neighbor-address"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) NeighborAddress() *NetworkInstance_Protocol_Bgp_Neighbor_NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborPort (leaf): Port number of the BGP peer
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/neighbor-port"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/neighbor-port"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) NeighborPort() *NetworkInstance_Protocol_Bgp_Neighbor_NeighborPortPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_NeighborPortPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "neighbor-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborPort (leaf): Port number of the BGP peer
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/neighbor-port"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/neighbor-port"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) NeighborPort() *NetworkInstance_Protocol_Bgp_Neighbor_NeighborPortPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_NeighborPortPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "neighbor-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerAs (leaf): AS number of the peer.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/peer-as"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) PeerAs() *NetworkInstance_Protocol_Bgp_Neighbor_PeerAsPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_PeerAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerAs (leaf): AS number of the peer.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/peer-as"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) PeerAs() *NetworkInstance_Protocol_Bgp_Neighbor_PeerAsPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_PeerAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerGroup (leaf): The peer-group with which this neighbor is associated
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/peer-group"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) PeerGroup() *NetworkInstance_Protocol_Bgp_Neighbor_PeerGroupPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_PeerGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerGroup (leaf): The peer-group with which this neighbor is associated
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/peer-group"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) PeerGroup() *NetworkInstance_Protocol_Bgp_Neighbor_PeerGroupPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_PeerGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerType (leaf): Explicitly designate the peer or peer group as internal
// (iBGP) or external (eBGP).
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/peer-type"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) PeerType() *NetworkInstance_Protocol_Bgp_Neighbor_PeerTypePath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_PeerTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerType (leaf): Explicitly designate the peer or peer group as internal
// (iBGP) or external (eBGP).
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/peer-type"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) PeerType() *NetworkInstance_Protocol_Bgp_Neighbor_PeerTypePathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_PeerTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemovePrivateAs (leaf): Remove private AS numbers from updates sent to peers - when
// this leaf is not specified, the AS_PATH attribute should be
// sent to the peer unchanged
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/remove-private-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/remove-private-as"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) RemovePrivateAs() *NetworkInstance_Protocol_Bgp_Neighbor_RemovePrivateAsPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_RemovePrivateAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "remove-private-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemovePrivateAs (leaf): Remove private AS numbers from updates sent to peers - when
// this leaf is not specified, the AS_PATH attribute should be
// sent to the peer unchanged
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/remove-private-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/remove-private-as"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) RemovePrivateAs() *NetworkInstance_Protocol_Bgp_Neighbor_RemovePrivateAsPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_RemovePrivateAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "remove-private-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteFlapDamping (leaf): Enable route flap damping.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-flap-damping"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/route-flap-damping"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) RouteFlapDamping() *NetworkInstance_Protocol_Bgp_Neighbor_RouteFlapDampingPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_RouteFlapDampingPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-flap-damping"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteFlapDamping (leaf): Enable route flap damping.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-flap-damping"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/route-flap-damping"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) RouteFlapDamping() *NetworkInstance_Protocol_Bgp_Neighbor_RouteFlapDampingPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_RouteFlapDampingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-flap-damping"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflector (container): Route reflector parameters for the BGPgroup
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-reflector"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) RouteReflector() *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPath{
		NodePath: ygot.NewNodePath(
			[]string{"route-reflector"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflector (container): Route reflector parameters for the BGPgroup
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-reflector"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) RouteReflector() *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"route-reflector"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendCommunity (leaf): Specify which types of community should be sent to the
// neighbor or group. The default is to not send the
// community attribute
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-community"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/send-community"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) SendCommunity() *NetworkInstance_Protocol_Bgp_Neighbor_SendCommunityPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_SendCommunityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-community"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendCommunity (leaf): Specify which types of community should be sent to the
// neighbor or group. The default is to not send the
// community attribute
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-community"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/config/send-community"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) SendCommunity() *NetworkInstance_Protocol_Bgp_Neighbor_SendCommunityPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_SendCommunityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-community"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Timers related to a BGP neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) Timers() *NetworkInstance_Protocol_Bgp_Neighbor_TimersPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Timers related to a BGP neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) Timers() *NetworkInstance_Protocol_Bgp_Neighbor_TimersPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): Transport session parameters for the BGP neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) Transport() *NetworkInstance_Protocol_Bgp_Neighbor_TransportPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_TransportPath{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): Transport session parameters for the BGP neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) Transport() *NetworkInstance_Protocol_Bgp_Neighbor_TransportPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_TransportPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple-paths for the same
// NLRI when they are received only from this neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_NeighborPath) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple-paths for the same
// NLRI when they are received only from this neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_NeighborPathAny) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AfiSafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/config/afi-safi-name YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AfiSafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AfiSafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/config/afi-safi-name YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AfiSafiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_EnabledPathAny struct {
	*ygot.NodePath
}

// AddPaths (container): Parameters relating to the advertisement and receipt of
// multiple paths for a single NLRI (add-paths)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "add-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) AddPaths() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPathsPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"add-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddPaths (container): Parameters relating to the advertisement and receipt of
// multiple paths for a single NLRI (add-paths)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "add-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) AddPaths() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"add-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiSafiName (leaf): AFI,SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/config/afi-safi-name"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) AfiSafiName() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AfiSafiNamePath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AfiSafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiSafiName (leaf): AFI,SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/config/afi-safi-name"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) AfiSafiName() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AfiSafiNamePathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AfiSafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// ApplyPolicy (container): Anchor point for routing policies in the model.
// Import and export policies are with respect to the local
// routing table, i.e., export (send) and import (receive),
// depending on the context.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "apply-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) ApplyPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicyPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"apply-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ApplyPolicy (container): Anchor point for routing policies in the model.
// Import and export policies are with respect to the local
// routing table, i.e., export (send) and import (receive),
// depending on the context.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "apply-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) ApplyPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"apply-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): This leaf indicates whether the AFI-SAFI is
// enabled for the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): This leaf indicates whether the AFI-SAFI is
// enabled for the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating to BGP graceful-restart
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) GracefulRestart() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestartPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating to BGP graceful-restart
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) GracefulRestart() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4LabeledUnicast (container): IPv4 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) Ipv4LabeledUnicast() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicastPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4LabeledUnicast (container): IPv4 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) Ipv4LabeledUnicast() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4Unicast (container): IPv4 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) Ipv4Unicast() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4UnicastPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4Unicast (container): IPv4 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) Ipv4Unicast() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6LabeledUnicast (container): IPv6 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) Ipv6LabeledUnicast() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicastPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6LabeledUnicast (container): IPv6 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) Ipv6LabeledUnicast() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Unicast (container): IPv6 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) Ipv6Unicast() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6UnicastPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Unicast (container): IPv6 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) Ipv6Unicast() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnEvpn (container): BGP EVPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-evpn"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) L2VpnEvpn() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpnPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpnPath{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-evpn"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnEvpn (container): BGP EVPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-evpn"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) L2VpnEvpn() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpnPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpnPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-evpn"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnVpls (container): BGP-signalled VPLS configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-vpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) L2VpnVpls() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVplsPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-vpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnVpls (container): BGP-signalled VPLS configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-vpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) L2VpnVpls() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVplsPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-vpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Multicast (container): Multicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) L3VpnIpv4Multicast() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4MulticastPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4MulticastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Multicast (container): Multicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) L3VpnIpv4Multicast() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4MulticastPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4MulticastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Unicast (container): Unicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) L3VpnIpv4Unicast() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4UnicastPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Unicast (container): Unicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) L3VpnIpv4Unicast() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Multicast (container): Multicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) L3VpnIpv6Multicast() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Multicast (container): Multicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) L3VpnIpv6Multicast() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Unicast (container): Unicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) L3VpnIpv6Unicast() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Unicast (container): Unicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) L3VpnIpv6Unicast() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv4 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv4 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv4"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) SrtePolicyIpv4() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4Path {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4Path{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv4"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv4 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv4 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv4"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) SrtePolicyIpv4() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4PathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv4"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv6 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv6 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv6"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) SrtePolicyIpv6() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6Path {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6Path{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv6"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv6 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv6 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv6"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) SrtePolicyIpv6() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6PathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv6"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple-paths for the same
// NLRI when they are received only from this neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPath) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple-paths for the same
// NLRI when they are received only from this neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafiPathAny) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_EligiblePrefixPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths/config/eligible-prefix-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_EligiblePrefixPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths/config/eligible-prefix-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_ReceivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths/config/receive YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_ReceivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_ReceivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths/config/receive YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_ReceivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_SendPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths/config/send YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_SendPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_SendPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths/config/send YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_SendPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_SendMaxPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths/config/send-max YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_SendMaxPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_SendMaxPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths/config/send-max YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_SendMaxPathAny struct {
	*ygot.NodePath
}

// EligiblePrefixPolicy (leaf): A reference to a routing policy which can be used to
// restrict the prefixes for which add-paths is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/eligible-prefix-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths/config/eligible-prefix-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPathsPath) EligiblePrefixPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_EligiblePrefixPolicyPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_EligiblePrefixPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "eligible-prefix-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// EligiblePrefixPolicy (leaf): A reference to a routing policy which can be used to
// restrict the prefixes for which add-paths is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/eligible-prefix-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths/config/eligible-prefix-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPathsPathAny) EligiblePrefixPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "eligible-prefix-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// Receive (leaf): Enable capability negotiation to receive multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/receive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths/config/receive"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPathsPath) Receive() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_ReceivePath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_ReceivePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "receive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Receive (leaf): Enable capability negotiation to receive multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/receive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths/config/receive"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPathsPathAny) Receive() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_ReceivePathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_ReceivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "receive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Send (leaf): Enable capability negotiation to send multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths/config/send"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPathsPath) Send() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_SendPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_SendPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send"},
			map[string]interface{}{},
			n,
		),
	}
}

// Send (leaf): Enable capability negotiation to send multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths/config/send"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPathsPathAny) Send() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_SendPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_SendPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendMax (leaf): The maximum total number of paths to advertise to neighbors
// for a single NLRI.  This includes the single best path as
// well as additional paths advertised when add-paths is
// enabled.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-max"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths/config/send-max"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPathsPath) SendMax() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_SendMaxPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_SendMaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-max"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendMax (leaf): The maximum total number of paths to advertise to neighbors
// for a single NLRI.  This includes the single best path as
// well as additional paths advertised when add-paths is
// enabled.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-max"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths/config/send-max"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPathsPathAny) SendMax() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_SendMaxPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_AddPaths_SendMaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-max"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_DefaultExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy/config/default-export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_DefaultExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_DefaultExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy/config/default-export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_DefaultExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_ExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy/config/export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_ExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_ExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy/config/export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_ExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// DefaultExportPolicy (leaf): explicitly set a default policy if no policy definition
// in the export policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy/config/default-export-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicyPath) DefaultExportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_DefaultExportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_DefaultExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultExportPolicy (leaf): explicitly set a default policy if no policy definition
// in the export policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy/config/default-export-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicyPathAny) DefaultExportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_DefaultExportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_DefaultExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicyPath) DefaultImportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicyPathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportPolicy (leaf-list): list of policy names in sequence to be applied on
// sending a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy/config/export-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicyPath) ExportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_ExportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_ExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportPolicy (leaf-list): list of policy names in sequence to be applied on
// sending a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy/config/export-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicyPathAny) ExportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_ExportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_ExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicyPath) ImportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_ImportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicyPathAny) ImportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_ApplyPolicy_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): This leaf indicates whether graceful-restart is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): This leaf indicates whether graceful-restart is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4UnicastPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/config/extended-next-hop-encoding YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/config/extended-next-hop-encoding YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_SendDefaultRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/config/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_SendDefaultRoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/config/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny struct {
	*ygot.NodePath
}

// ExtendedNextHopEncoding (leaf): This leaf indicates whether extended next-hop encoding is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/extended-next-hop-encoding"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/config/extended-next-hop-encoding"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4UnicastPath) ExtendedNextHopEncoding() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "extended-next-hop-encoding"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedNextHopEncoding (leaf): This leaf indicates whether extended next-hop encoding is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/extended-next-hop-encoding"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/config/extended-next-hop-encoding"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4UnicastPathAny) ExtendedNextHopEncoding() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "extended-next-hop-encoding"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/config/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4UnicastPath) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_SendDefaultRoutePath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_SendDefaultRoutePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/config/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4UnicastPathAny) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6UnicastPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_SendDefaultRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/config/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_SendDefaultRoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/config/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/config/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6UnicastPath) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_SendDefaultRoutePath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_SendDefaultRoutePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/config/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6UnicastPathAny) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpnPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpnPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpnPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpnPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpnPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpnPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpnPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpnPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVplsPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVplsPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVplsPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVplsPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVplsPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4MulticastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4MulticastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4MulticastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4MulticastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4MulticastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4MulticastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4MulticastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4MulticastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4UnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4 YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4 YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4PathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4Path) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4PathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4Path) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4PathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6 YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6 YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6PathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6Path) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6PathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6Path) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6PathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EnabledPathAny struct {
	*ygot.NodePath
}

// Ebgp (container): Multipath configuration for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPath) Ebgp() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ebgp (container): Multipath configuration for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPathAny) Ebgp() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPath) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny struct {
	*ygot.NodePath
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPath) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPathAny) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/default-export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/default-export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// DefaultExportPolicy (leaf): explicitly set a default policy if no policy definition
// in the export policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/default-export-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPath) DefaultExportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultExportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultExportPolicy (leaf): explicitly set a default policy if no policy definition
// in the export policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/default-export-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPathAny) DefaultExportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultExportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPath) DefaultImportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportPolicy (leaf-list): list of policy names in sequence to be applied on
// sending a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/export-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPath) ExportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ExportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportPolicy (leaf-list): list of policy names in sequence to be applied on
// sending a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/export-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPathAny) ExportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ExportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPath) ImportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ImportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPathAny) ImportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_AllowOwnAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/allow-own-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_AllowOwnAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_AllowOwnAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/allow-own-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_AllowOwnAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_DisablePeerAsFilterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/disable-peer-as-filter YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_DisablePeerAsFilterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_DisablePeerAsFilterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/disable-peer-as-filter YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_DisablePeerAsFilterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_ReplacePeerAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/replace-peer-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_ReplacePeerAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_ReplacePeerAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/replace-peer-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_ReplacePeerAsPathAny struct {
	*ygot.NodePath
}

// AllowOwnAs (leaf): Specify the number of occurrences of the local BGP speaker's
// AS that can occur within the AS_PATH before it is rejected.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-own-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/allow-own-as"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPath) AllowOwnAs() *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_AllowOwnAsPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_AllowOwnAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-own-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// AllowOwnAs (leaf): Specify the number of occurrences of the local BGP speaker's
// AS that can occur within the AS_PATH before it is rejected.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-own-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/allow-own-as"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPathAny) AllowOwnAs() *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_AllowOwnAsPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_AllowOwnAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-own-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisablePeerAsFilter (leaf): When set to true, the system advertises routes to a peer
// even if the peer's AS was in the AS path.  The default
// behavior (false) suppresses advertisements to peers if
// their AS number is in the AS path of the route.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-peer-as-filter"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/disable-peer-as-filter"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPath) DisablePeerAsFilter() *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_DisablePeerAsFilterPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_DisablePeerAsFilterPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-peer-as-filter"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisablePeerAsFilter (leaf): When set to true, the system advertises routes to a peer
// even if the peer's AS was in the AS path.  The default
// behavior (false) suppresses advertisements to peers if
// their AS number is in the AS path of the route.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-peer-as-filter"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/disable-peer-as-filter"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPathAny) DisablePeerAsFilter() *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_DisablePeerAsFilterPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_DisablePeerAsFilterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-peer-as-filter"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReplacePeerAs (leaf): Replace occurrences of the peer's AS in the AS_PATH
// with the local autonomous system number
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/replace-peer-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/replace-peer-as"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPath) ReplacePeerAs() *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_ReplacePeerAsPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_ReplacePeerAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "replace-peer-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReplacePeerAs (leaf): Replace occurrences of the peer's AS in the AS_PATH
// with the local autonomous system number
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/replace-peer-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/replace-peer-as"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPathAny) ReplacePeerAs() *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_ReplacePeerAsPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_ReplacePeerAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "replace-peer-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_MultihopTtlPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop/config/multihop-ttl YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_MultihopTtlPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_MultihopTtlPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop/config/multihop-ttl YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_MultihopTtlPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When enabled the referenced group or neighbors are permitted
// to be indirectly connected - including cases where the TTL
// can be decremented between the BGP peers
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPath) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When enabled the referenced group or neighbors are permitted
// to be indirectly connected - including cases where the TTL
// can be decremented between the BGP peers
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultihopTtl (leaf): Time-to-live value to use when packets are sent to the
// referenced group or neighbors and ebgp-multihop is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multihop-ttl"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop/config/multihop-ttl"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPath) MultihopTtl() *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_MultihopTtlPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_MultihopTtlPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multihop-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultihopTtl (leaf): Time-to-live value to use when packets are sent to the
// referenced group or neighbors and ebgp-multihop is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multihop-ttl"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop/config/multihop-ttl"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPathAny) MultihopTtl() *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_MultihopTtlPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_MultihopTtlPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multihop-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandlingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/error-handling YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandlingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandlingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/error-handling YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandlingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandling_TreatAsWithdrawPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/error-handling/config/treat-as-withdraw YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandling_TreatAsWithdrawPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandling_TreatAsWithdrawPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/error-handling/config/treat-as-withdraw YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandling_TreatAsWithdrawPathAny struct {
	*ygot.NodePath
}

// TreatAsWithdraw (leaf): Specify whether erroneous UPDATE messages for which the
// NLRI can be extracted are reated as though the NLRI is
// withdrawn - avoiding session reset
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/treat-as-withdraw"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/error-handling/config/treat-as-withdraw"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandlingPath) TreatAsWithdraw() *NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandling_TreatAsWithdrawPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandling_TreatAsWithdrawPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "treat-as-withdraw"},
			map[string]interface{}{},
			n,
		),
	}
}

// TreatAsWithdraw (leaf): Specify whether erroneous UPDATE messages for which the
// NLRI can be extracted are reated as though the NLRI is
// withdrawn - avoiding session reset
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/treat-as-withdraw"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/error-handling/config/treat-as-withdraw"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandlingPathAny) TreatAsWithdraw() *NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandling_TreatAsWithdrawPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandling_TreatAsWithdrawPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "treat-as-withdraw"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_HelperOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_HelperOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_HelperOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_HelperOnlyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_RestartTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_RestartTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_RestartTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_RestartTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_StaleRoutesTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/stale-routes-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_StaleRoutesTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_StaleRoutesTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/stale-routes-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_StaleRoutesTimePathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): Enable or disable the graceful-restart capability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enable or disable the graceful-restart capability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable graceful-restart in helper mode only. When this
// leaf is set, the local system does not retain forwarding
// its own state during a restart, but supports procedures
// for the receiving speaker, as defined in RFC4724.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPath) HelperOnly() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_HelperOnlyPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_HelperOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable graceful-restart in helper mode only. When this
// leaf is set, the local system does not retain forwarding
// its own state during a restart, but supports procedures
// for the receiving speaker, as defined in RFC4724.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPathAny) HelperOnly() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_HelperOnlyPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_HelperOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Estimated time (in seconds) for the local BGP speaker to
// restart a session. This value is advertise in the graceful
// restart BGP capability.  This is a 12-bit value, referred to
// as Restart Time in RFC4724.  Per RFC4724, the suggested
// default value is <= the hold-time value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPath) RestartTime() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_RestartTimePath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_RestartTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Estimated time (in seconds) for the local BGP speaker to
// restart a session. This value is advertise in the graceful
// restart BGP capability.  This is a 12-bit value, referred to
// as Restart Time in RFC4724.  Per RFC4724, the suggested
// default value is <= the hold-time value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPathAny) RestartTime() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_RestartTimePathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_RestartTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaleRoutesTime (leaf): An upper-bound on the time thate stale routes will be
// retained by a router after a session is restarted. If an
// End-of-RIB (EOR) marker is received prior to this timer
// expiring stale-routes will be flushed upon its receipt - if
// no EOR is received, then when this timer expires stale paths
// will be purged. This timer is referred to as the
// Selection_Deferral_Timer in RFC4724
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/stale-routes-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/stale-routes-time"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPath) StaleRoutesTime() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_StaleRoutesTimePath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_StaleRoutesTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "stale-routes-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaleRoutesTime (leaf): An upper-bound on the time thate stale routes will be
// retained by a router after a session is restarted. If an
// End-of-RIB (EOR) marker is received prior to this timer
// expiring stale-routes will be flushed upon its receipt - if
// no EOR is received, then when this timer expires stale paths
// will be purged. This timer is referred to as the
// Selection_Deferral_Timer in RFC4724
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/stale-routes-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/stale-routes-time"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPathAny) StaleRoutesTime() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_StaleRoutesTimePathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_StaleRoutesTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "stale-routes-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/logging-options YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/logging-options YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptions_LogNeighborStateChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/logging-options/config/log-neighbor-state-changes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptions_LogNeighborStateChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptions_LogNeighborStateChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/logging-options/config/log-neighbor-state-changes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptions_LogNeighborStateChangesPathAny struct {
	*ygot.NodePath
}

// LogNeighborStateChanges (leaf): Configure logging of peer state changes.  Default is
// to enable logging of peer state changes.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/log-neighbor-state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/logging-options/config/log-neighbor-state-changes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptionsPath) LogNeighborStateChanges() *NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptions_LogNeighborStateChangesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptions_LogNeighborStateChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "log-neighbor-state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LogNeighborStateChanges (leaf): Configure logging of peer state changes.  Default is
// to enable logging of peer state changes.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/log-neighbor-state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/logging-options/config/log-neighbor-state-changes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptionsPathAny) LogNeighborStateChanges() *NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptions_LogNeighborStateChangesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptions_LogNeighborStateChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "log-neighbor-state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClientPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-client YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClientPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClientPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-client YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClientPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClusterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-cluster-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClusterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClusterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-cluster-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClusterIdPathAny struct {
	*ygot.NodePath
}

// RouteReflectorClient (leaf): Configure the neighbor as a route reflector client.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-reflector-client"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-client"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPath) RouteReflectorClient() *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClientPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClientPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-reflector-client"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflectorClient (leaf): Configure the neighbor as a route reflector client.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-reflector-client"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-client"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPathAny) RouteReflectorClient() *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClientPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClientPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-reflector-client"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflectorClusterId (leaf): route-reflector cluster id to use when local router is
// configured as a route reflector.  Commonly set at the group
// level, but allows a different cluster
// id to be set for each neighbor.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-reflector-cluster-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-cluster-id"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPath) RouteReflectorClusterId() *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClusterIdPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClusterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-reflector-cluster-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflectorClusterId (leaf): route-reflector cluster id to use when local router is
// configured as a route reflector.  Commonly set at the group
// level, but allows a different cluster
// id to be set for each neighbor.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-reflector-cluster-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-cluster-id"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPathAny) RouteReflectorClusterId() *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClusterIdPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClusterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-reflector-cluster-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_ConnectRetryPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/connect-retry YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_ConnectRetryPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_ConnectRetryPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/connect-retry YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_ConnectRetryPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_HoldTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/hold-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_HoldTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_HoldTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/hold-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_HoldTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_KeepaliveIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/keepalive-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_KeepaliveIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_KeepaliveIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/keepalive-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_KeepaliveIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_MinimumAdvertisementIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/minimum-advertisement-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_MinimumAdvertisementIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_MinimumAdvertisementIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/minimum-advertisement-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_MinimumAdvertisementIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_RestartTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_RestartTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_RestartTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_RestartTimePathAny struct {
	*ygot.NodePath
}

// ConnectRetry (leaf): Time interval in seconds between attempts to establish a
// session with the peer.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/connect-retry"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/connect-retry"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPath) ConnectRetry() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_ConnectRetryPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_ConnectRetryPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "connect-retry"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConnectRetry (leaf): Time interval in seconds between attempts to establish a
// session with the peer.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/connect-retry"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/connect-retry"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPathAny) ConnectRetry() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_ConnectRetryPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_ConnectRetryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "connect-retry"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldTime (leaf): Time interval in seconds that a BGP session will be
// considered active in the absence of keepalive or other
// messages from the peer.  The hold-time is typically
// set to 3x the keepalive-interval.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hold-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/hold-time"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPath) HoldTime() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_HoldTimePath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_HoldTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hold-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldTime (leaf): Time interval in seconds that a BGP session will be
// considered active in the absence of keepalive or other
// messages from the peer.  The hold-time is typically
// set to 3x the keepalive-interval.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hold-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/hold-time"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPathAny) HoldTime() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_HoldTimePathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_HoldTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hold-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// KeepaliveInterval (leaf): Time interval in seconds between transmission of keepalive
// messages to the neighbor.  Typically set to 1/3 the
// hold-time.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keepalive-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/keepalive-interval"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPath) KeepaliveInterval() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_KeepaliveIntervalPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_KeepaliveIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keepalive-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// KeepaliveInterval (leaf): Time interval in seconds between transmission of keepalive
// messages to the neighbor.  Typically set to 1/3 the
// hold-time.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keepalive-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/keepalive-interval"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPathAny) KeepaliveInterval() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_KeepaliveIntervalPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_KeepaliveIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keepalive-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinimumAdvertisementInterval (leaf): Minimum time which must elapse between subsequent UPDATE
// messages relating to a common set of NLRI being transmitted
// to a peer. This timer is referred to as
// MinRouteAdvertisementIntervalTimer by RFC 4721 and serves to
// reduce the number of UPDATE messages transmitted when a
// particular set of NLRI exhibit instability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/minimum-advertisement-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/minimum-advertisement-interval"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPath) MinimumAdvertisementInterval() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_MinimumAdvertisementIntervalPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_MinimumAdvertisementIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "minimum-advertisement-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinimumAdvertisementInterval (leaf): Minimum time which must elapse between subsequent UPDATE
// messages relating to a common set of NLRI being transmitted
// to a peer. This timer is referred to as
// MinRouteAdvertisementIntervalTimer by RFC 4721 and serves to
// reduce the number of UPDATE messages transmitted when a
// particular set of NLRI exhibit instability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/minimum-advertisement-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/minimum-advertisement-interval"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPathAny) MinimumAdvertisementInterval() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_MinimumAdvertisementIntervalPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_MinimumAdvertisementIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "minimum-advertisement-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Time interval in seconds after which the BGP session is
// re-established after being torn down due to exceeding any
// configured max prefix-limit.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPath) RestartTime() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_RestartTimePath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_RestartTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Time interval in seconds after which the BGP session is
// re-established after being torn down due to exceeding any
// configured max prefix-limit.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPathAny) RestartTime() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_RestartTimePathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_RestartTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_TransportPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_TransportPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_TransportPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_TransportPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Transport_LocalAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/local-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Transport_LocalAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Transport_LocalAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/local-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Transport_LocalAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Transport_MtuDiscoveryPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/mtu-discovery YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Transport_MtuDiscoveryPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Transport_MtuDiscoveryPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/mtu-discovery YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Transport_MtuDiscoveryPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Transport_PassiveModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/passive-mode YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Transport_PassiveModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Transport_PassiveModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/passive-mode YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Transport_PassiveModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Transport_TcpMssPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/tcp-mss YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Transport_TcpMssPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Transport_TcpMssPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/tcp-mss YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Transport_TcpMssPathAny struct {
	*ygot.NodePath
}

// LocalAddress (leaf): Set the local IP (either IPv4 or IPv6) address to use
// for the session when sending BGP update messages.  This
// may be expressed as either an IP address or reference
// to the name of an interface.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/local-address"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TransportPath) LocalAddress() *NetworkInstance_Protocol_Bgp_Neighbor_Transport_LocalAddressPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Transport_LocalAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalAddress (leaf): Set the local IP (either IPv4 or IPv6) address to use
// for the session when sending BGP update messages.  This
// may be expressed as either an IP address or reference
// to the name of an interface.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/local-address"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TransportPathAny) LocalAddress() *NetworkInstance_Protocol_Bgp_Neighbor_Transport_LocalAddressPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Transport_LocalAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtuDiscovery (leaf): Turns path mtu discovery for BGP TCP sessions on (true)
// or off (false)
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mtu-discovery"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/mtu-discovery"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TransportPath) MtuDiscovery() *NetworkInstance_Protocol_Bgp_Neighbor_Transport_MtuDiscoveryPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Transport_MtuDiscoveryPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mtu-discovery"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtuDiscovery (leaf): Turns path mtu discovery for BGP TCP sessions on (true)
// or off (false)
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mtu-discovery"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/mtu-discovery"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TransportPathAny) MtuDiscovery() *NetworkInstance_Protocol_Bgp_Neighbor_Transport_MtuDiscoveryPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Transport_MtuDiscoveryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mtu-discovery"},
			map[string]interface{}{},
			n,
		),
	}
}

// PassiveMode (leaf): Wait for peers to issue requests to open a BGP session,
// rather than initiating sessions from the local router.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/passive-mode"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TransportPath) PassiveMode() *NetworkInstance_Protocol_Bgp_Neighbor_Transport_PassiveModePath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Transport_PassiveModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// PassiveMode (leaf): Wait for peers to issue requests to open a BGP session,
// rather than initiating sessions from the local router.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/passive-mode"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TransportPathAny) PassiveMode() *NetworkInstance_Protocol_Bgp_Neighbor_Transport_PassiveModePathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Transport_PassiveModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// TcpMss (leaf): Sets the max segment size for BGP TCP sessions.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/tcp-mss"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/tcp-mss"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TransportPath) TcpMss() *NetworkInstance_Protocol_Bgp_Neighbor_Transport_TcpMssPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Transport_TcpMssPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "tcp-mss"},
			map[string]interface{}{},
			n,
		),
	}
}

// TcpMss (leaf): Sets the max segment size for BGP TCP sessions.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/tcp-mss"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/tcp-mss"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TransportPathAny) TcpMss() *NetworkInstance_Protocol_Bgp_Neighbor_Transport_TcpMssPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Transport_TcpMssPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "tcp-mss"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EnabledPathAny struct {
	*ygot.NodePath
}

// Ebgp (container): Multipath configuration for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPath) Ebgp() *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ebgp (container): Multipath configuration for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPathAny) Ebgp() *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPath) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_Ebgp_AllowMultipleAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_Ebgp_AllowMultipleAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny struct {
	*ygot.NodePath
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPath) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_Ebgp_AllowMultipleAsPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_Ebgp_AllowMultipleAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPathAny) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AuthPasswordPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AuthPasswordPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AuthPasswordPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AuthPasswordPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_DescriptionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/description YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_DescriptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_DescriptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/description YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_DescriptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_LocalAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/local-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_LocalAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_LocalAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/local-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_LocalAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_PeerAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_PeerAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_PeerAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_PeerAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_PeerGroupNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-group-name YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_PeerGroupNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_PeerGroupNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-group-name YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_PeerGroupNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_PeerTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-type YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_PeerTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_PeerTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-type YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_PeerTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RemovePrivateAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/remove-private-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RemovePrivateAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RemovePrivateAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/remove-private-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RemovePrivateAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteFlapDampingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/route-flap-damping YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteFlapDampingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteFlapDampingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/route-flap-damping YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteFlapDampingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_SendCommunityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/send-community YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_SendCommunityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_SendCommunityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/send-community YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_SendCommunityPathAny struct {
	*ygot.NodePath
}

// AfiSafiAny (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi"
// AfiSafiName (wildcarded): oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) AfiSafiAny() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": "*"},
			n,
		),
	}
}

// AfiSafiAny (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi"
// AfiSafiName (wildcarded): oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) AfiSafiAny() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": "*"},
			n,
		),
	}
}

// AfiSafi (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi"
// AfiSafiName: oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) AfiSafi(AfiSafiName oc.E_BgpTypes_AFI_SAFI_TYPE) *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": AfiSafiName},
			n,
		),
	}
}

// AfiSafi (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi"
// AfiSafiName: oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) AfiSafi(AfiSafiName oc.E_BgpTypes_AFI_SAFI_TYPE) *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": AfiSafiName},
			n,
		),
	}
}

// ApplyPolicy (container): Anchor point for routing policies in the model.
// Import and export policies are with respect to the local
// routing table, i.e., export (send) and import (receive),
// depending on the context.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "apply-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) ApplyPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"apply-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ApplyPolicy (container): Anchor point for routing policies in the model.
// Import and export policies are with respect to the local
// routing table, i.e., export (send) and import (receive),
// depending on the context.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "apply-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) ApplyPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"apply-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// AsPathOptions (container): AS_PATH manipulation parameters for the BGP neighbor or
// group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "as-path-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) AsPathOptions() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"as-path-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// AsPathOptions (container): AS_PATH manipulation parameters for the BGP neighbor or
// group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "as-path-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) AsPathOptions() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"as-path-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): Configures an MD5 authentication password for use with
// neighboring devices.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/auth-password"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) AuthPassword() *NetworkInstance_Protocol_Bgp_PeerGroup_AuthPasswordPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AuthPasswordPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): Configures an MD5 authentication password for use with
// neighboring devices.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/auth-password"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) AuthPassword() *NetworkInstance_Protocol_Bgp_PeerGroup_AuthPasswordPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AuthPasswordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): An optional textual description (intended primarily for use
// with a peer or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/description"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) Description() *NetworkInstance_Protocol_Bgp_PeerGroup_DescriptionPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): An optional textual description (intended primarily for use
// with a peer or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/description"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) Description() *NetworkInstance_Protocol_Bgp_PeerGroup_DescriptionPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// EbgpMultihop (container): eBGP multi-hop parameters for the BGPgroup
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp-multihop"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) EbgpMultihop() *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp-multihop"},
			map[string]interface{}{},
			n,
		),
	}
}

// EbgpMultihop (container): eBGP multi-hop parameters for the BGPgroup
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp-multihop"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) EbgpMultihop() *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp-multihop"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) EnableBfd() *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) EnableBfd() *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// ErrorHandling (container): Error handling parameters used for the BGP peer-group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "error-handling"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) ErrorHandling() *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPath{
		NodePath: ygot.NewNodePath(
			[]string{"error-handling"},
			map[string]interface{}{},
			n,
		),
	}
}

// ErrorHandling (container): Error handling parameters used for the BGP peer-group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "error-handling"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) ErrorHandling() *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"error-handling"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating the graceful restart mechanism for BGP
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) GracefulRestart() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating the graceful restart mechanism for BGP
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) GracefulRestart() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalAs (leaf): The local autonomous system number that is to be used
// when establishing sessions with the remote peer or peer
// group, if this differs from the global BGP router
// autonomous system number.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/local-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) LocalAs() *NetworkInstance_Protocol_Bgp_PeerGroup_LocalAsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_LocalAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalAs (leaf): The local autonomous system number that is to be used
// when establishing sessions with the remote peer or peer
// group, if this differs from the global BGP router
// autonomous system number.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/local-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) LocalAs() *NetworkInstance_Protocol_Bgp_PeerGroup_LocalAsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_LocalAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// LoggingOptions (container): Logging options for events related to the BGP neighbor or
// group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "logging-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) LoggingOptions() *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"logging-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// LoggingOptions (container): Logging options for events related to the BGP neighbor or
// group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "logging-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) LoggingOptions() *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"logging-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerAs (leaf): AS number of the peer.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) PeerAs() *NetworkInstance_Protocol_Bgp_PeerGroup_PeerAsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_PeerAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerAs (leaf): AS number of the peer.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) PeerAs() *NetworkInstance_Protocol_Bgp_PeerGroup_PeerAsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_PeerAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerGroupName (leaf): Name of the BGP peer-group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-group-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-group-name"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) PeerGroupName() *NetworkInstance_Protocol_Bgp_PeerGroup_PeerGroupNamePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_PeerGroupNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-group-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerGroupName (leaf): Name of the BGP peer-group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-group-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-group-name"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) PeerGroupName() *NetworkInstance_Protocol_Bgp_PeerGroup_PeerGroupNamePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_PeerGroupNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-group-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerType (leaf): Explicitly designate the peer or peer group as internal
// (iBGP) or external (eBGP).
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-type"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) PeerType() *NetworkInstance_Protocol_Bgp_PeerGroup_PeerTypePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_PeerTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerType (leaf): Explicitly designate the peer or peer group as internal
// (iBGP) or external (eBGP).
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-type"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) PeerType() *NetworkInstance_Protocol_Bgp_PeerGroup_PeerTypePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_PeerTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemovePrivateAs (leaf): Remove private AS numbers from updates sent to peers - when
// this leaf is not specified, the AS_PATH attribute should be
// sent to the peer unchanged
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/remove-private-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/remove-private-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) RemovePrivateAs() *NetworkInstance_Protocol_Bgp_PeerGroup_RemovePrivateAsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RemovePrivateAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "remove-private-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemovePrivateAs (leaf): Remove private AS numbers from updates sent to peers - when
// this leaf is not specified, the AS_PATH attribute should be
// sent to the peer unchanged
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/remove-private-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/remove-private-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) RemovePrivateAs() *NetworkInstance_Protocol_Bgp_PeerGroup_RemovePrivateAsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RemovePrivateAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "remove-private-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteFlapDamping (leaf): Enable route flap damping.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-flap-damping"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/route-flap-damping"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) RouteFlapDamping() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteFlapDampingPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RouteFlapDampingPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-flap-damping"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteFlapDamping (leaf): Enable route flap damping.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-flap-damping"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/route-flap-damping"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) RouteFlapDamping() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteFlapDampingPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RouteFlapDampingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-flap-damping"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflector (container): Route reflector parameters for the BGPgroup
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-reflector"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) RouteReflector() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath{
		NodePath: ygot.NewNodePath(
			[]string{"route-reflector"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflector (container): Route reflector parameters for the BGPgroup
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-reflector"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) RouteReflector() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"route-reflector"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendCommunity (leaf): Specify which types of community should be sent to the
// neighbor or group. The default is to not send the
// community attribute
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-community"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/send-community"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) SendCommunity() *NetworkInstance_Protocol_Bgp_PeerGroup_SendCommunityPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_SendCommunityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-community"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendCommunity (leaf): Specify which types of community should be sent to the
// neighbor or group. The default is to not send the
// community attribute
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-community"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/send-community"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) SendCommunity() *NetworkInstance_Protocol_Bgp_PeerGroup_SendCommunityPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_SendCommunityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-community"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Timers related to a BGP peer-group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) Timers() *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Timers related to a BGP peer-group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) Timers() *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): Transport session parameters for the BGP peer-group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) Transport() *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): Transport session parameters for the BGP peer-group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) Transport() *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple paths for the
// same NLRI
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple paths for the
// same NLRI
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AfiSafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/config/afi-safi-name YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AfiSafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AfiSafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/config/afi-safi-name YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AfiSafiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_EnabledPathAny struct {
	*ygot.NodePath
}

// AddPaths (container): Parameters relating to the advertisement and receipt of
// multiple paths for a single NLRI (add-paths)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "add-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) AddPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"add-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddPaths (container): Parameters relating to the advertisement and receipt of
// multiple paths for a single NLRI (add-paths)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "add-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) AddPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"add-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiSafiName (leaf): AFI,SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/config/afi-safi-name"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) AfiSafiName() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AfiSafiNamePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AfiSafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiSafiName (leaf): AFI,SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/config/afi-safi-name"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) AfiSafiName() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AfiSafiNamePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AfiSafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// ApplyPolicy (container): Anchor point for routing policies in the model.
// Import and export policies are with respect to the local
// routing table, i.e., export (send) and import (receive),
// depending on the context.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "apply-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) ApplyPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"apply-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ApplyPolicy (container): Anchor point for routing policies in the model.
// Import and export policies are with respect to the local
// routing table, i.e., export (send) and import (receive),
// depending on the context.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "apply-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) ApplyPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"apply-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): This leaf indicates whether the AFI-SAFI is
// enabled for the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): This leaf indicates whether the AFI-SAFI is
// enabled for the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating to BGP graceful-restart
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) GracefulRestart() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating to BGP graceful-restart
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) GracefulRestart() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4LabeledUnicast (container): IPv4 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) Ipv4LabeledUnicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4LabeledUnicast (container): IPv4 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) Ipv4LabeledUnicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4Unicast (container): IPv4 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) Ipv4Unicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4Unicast (container): IPv4 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) Ipv4Unicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6LabeledUnicast (container): IPv6 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) Ipv6LabeledUnicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6LabeledUnicast (container): IPv6 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) Ipv6LabeledUnicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Unicast (container): IPv6 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) Ipv6Unicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Unicast (container): IPv6 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) Ipv6Unicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnEvpn (container): BGP EVPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-evpn"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) L2VpnEvpn() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPath{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-evpn"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnEvpn (container): BGP EVPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-evpn"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) L2VpnEvpn() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-evpn"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnVpls (container): BGP-signalled VPLS configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-vpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) L2VpnVpls() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-vpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnVpls (container): BGP-signalled VPLS configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-vpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) L2VpnVpls() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-vpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Multicast (container): Multicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) L3VpnIpv4Multicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Multicast (container): Multicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) L3VpnIpv4Multicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Unicast (container): Unicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) L3VpnIpv4Unicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Unicast (container): Unicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) L3VpnIpv4Unicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Multicast (container): Multicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) L3VpnIpv6Multicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Multicast (container): Multicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) L3VpnIpv6Multicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Unicast (container): Unicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) L3VpnIpv6Unicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Unicast (container): Unicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) L3VpnIpv6Unicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv4 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv4 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv4"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) SrtePolicyIpv4() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4Path {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4Path{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv4"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv4 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv4 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv4"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) SrtePolicyIpv4() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4PathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv4"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv6 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv6 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv6"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) SrtePolicyIpv6() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6Path {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6Path{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv6"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv6 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv6 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv6"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) SrtePolicyIpv6() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6PathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv6"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple paths for the
// same NLRI
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple paths for the
// same NLRI
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_EligiblePrefixPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/eligible-prefix-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_EligiblePrefixPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/eligible-prefix-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_ReceivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/receive YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_ReceivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_ReceivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/receive YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_ReceivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/send YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/send YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendMaxPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/send-max YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendMaxPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendMaxPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/send-max YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendMaxPathAny struct {
	*ygot.NodePath
}

// EligiblePrefixPolicy (leaf): A reference to a routing policy which can be used to
// restrict the prefixes for which add-paths is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/eligible-prefix-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/eligible-prefix-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPath) EligiblePrefixPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_EligiblePrefixPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_EligiblePrefixPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "eligible-prefix-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// EligiblePrefixPolicy (leaf): A reference to a routing policy which can be used to
// restrict the prefixes for which add-paths is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/eligible-prefix-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/eligible-prefix-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPathAny) EligiblePrefixPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "eligible-prefix-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// Receive (leaf): Enable capability negotiation to receive multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/receive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/receive"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPath) Receive() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_ReceivePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_ReceivePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "receive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Receive (leaf): Enable capability negotiation to receive multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/receive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/receive"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPathAny) Receive() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_ReceivePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_ReceivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "receive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Send (leaf): Enable capability negotiation to send multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/send"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPath) Send() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send"},
			map[string]interface{}{},
			n,
		),
	}
}

// Send (leaf): Enable capability negotiation to send multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/send"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPathAny) Send() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendMax (leaf): The maximum total number of paths to advertise to neighbors
// for a single NLRI.  This includes the single best path as
// well as additional paths advertised when add-paths is
// enabled.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-max"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/send-max"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPath) SendMax() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendMaxPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendMaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-max"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendMax (leaf): The maximum total number of paths to advertise to neighbors
// for a single NLRI.  This includes the single best path as
// well as additional paths advertised when add-paths is
// enabled.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-max"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/send-max"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPathAny) SendMax() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendMaxPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendMaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-max"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/default-export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/default-export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// DefaultExportPolicy (leaf): explicitly set a default policy if no policy definition
// in the export policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/default-export-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPath) DefaultExportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultExportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultExportPolicy (leaf): explicitly set a default policy if no policy definition
// in the export policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/default-export-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPathAny) DefaultExportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultExportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPath) DefaultImportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportPolicy (leaf-list): list of policy names in sequence to be applied on
// sending a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/export-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPath) ExportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ExportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportPolicy (leaf-list): list of policy names in sequence to be applied on
// sending a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/export-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPathAny) ExportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ExportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPath) ImportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ImportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPathAny) ImportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): This leaf indicates whether graceful-restart is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): This leaf indicates whether graceful-restart is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/config/extended-next-hop-encoding YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/config/extended-next-hop-encoding YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_SendDefaultRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/config/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_SendDefaultRoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/config/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny struct {
	*ygot.NodePath
}

// ExtendedNextHopEncoding (leaf): This leaf indicates whether extended next-hop encoding is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/extended-next-hop-encoding"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/config/extended-next-hop-encoding"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPath) ExtendedNextHopEncoding() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "extended-next-hop-encoding"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedNextHopEncoding (leaf): This leaf indicates whether extended next-hop encoding is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/extended-next-hop-encoding"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/config/extended-next-hop-encoding"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPathAny) ExtendedNextHopEncoding() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "extended-next-hop-encoding"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/config/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPath) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_SendDefaultRoutePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_SendDefaultRoutePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/config/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPathAny) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_SendDefaultRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/config/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_SendDefaultRoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/config/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/config/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPath) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_SendDefaultRoutePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_SendDefaultRoutePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/config/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPathAny) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4 YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4 YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4PathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4Path) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4PathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4Path) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4PathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6 YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6 YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6PathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6Path) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6PathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6Path) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6PathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EnabledPathAny struct {
	*ygot.NodePath
}

// Ebgp (container): Multipath parameters for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPath) Ebgp() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ebgp (container): Multipath parameters for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPathAny) Ebgp() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ibgp (container): Multipath parameters for iBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ibgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ibgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPath) Ibgp() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ibgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ibgp (container): Multipath parameters for iBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ibgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ibgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPathAny) Ibgp() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ibgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPathAny struct {
	*ygot.NodePath
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPath) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPathAny) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// BGP multipath. The default is use a single path.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPath) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// BGP multipath. The default is use a single path.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPathAny) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ibgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ibgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ibgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ibgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPathAny struct {
	*ygot.NodePath
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// iBGP multipath. The default is to use a single path
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ibgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPath) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// iBGP multipath. The default is to use a single path
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ibgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPathAny) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/default-export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/default-export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// DefaultExportPolicy (leaf): explicitly set a default policy if no policy definition
// in the export policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/default-export-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPath) DefaultExportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultExportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultExportPolicy (leaf): explicitly set a default policy if no policy definition
// in the export policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/default-export-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPathAny) DefaultExportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultExportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPath) DefaultImportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportPolicy (leaf-list): list of policy names in sequence to be applied on
// sending a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/export-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPath) ExportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ExportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportPolicy (leaf-list): list of policy names in sequence to be applied on
// sending a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/export-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPathAny) ExportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ExportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPath) ImportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ImportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPathAny) ImportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/allow-own-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/allow-own-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/disable-peer-as-filter YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/disable-peer-as-filter YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/replace-peer-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/replace-peer-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPathAny struct {
	*ygot.NodePath
}

// AllowOwnAs (leaf): Specify the number of occurrences of the local BGP speaker's
// AS that can occur within the AS_PATH before it is rejected.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-own-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/allow-own-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath) AllowOwnAs() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-own-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// AllowOwnAs (leaf): Specify the number of occurrences of the local BGP speaker's
// AS that can occur within the AS_PATH before it is rejected.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-own-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/allow-own-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny) AllowOwnAs() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-own-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisablePeerAsFilter (leaf): When set to true, the system advertises routes to a peer
// even if the peer's AS was in the AS path.  The default
// behavior (false) suppresses advertisements to peers if
// their AS number is in the AS path of the route.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-peer-as-filter"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/disable-peer-as-filter"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath) DisablePeerAsFilter() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-peer-as-filter"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisablePeerAsFilter (leaf): When set to true, the system advertises routes to a peer
// even if the peer's AS was in the AS path.  The default
// behavior (false) suppresses advertisements to peers if
// their AS number is in the AS path of the route.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-peer-as-filter"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/disable-peer-as-filter"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny) DisablePeerAsFilter() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-peer-as-filter"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReplacePeerAs (leaf): Replace occurrences of the peer's AS in the AS_PATH
// with the local autonomous system number
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/replace-peer-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/replace-peer-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath) ReplacePeerAs() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "replace-peer-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReplacePeerAs (leaf): Replace occurrences of the peer's AS in the AS_PATH
// with the local autonomous system number
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/replace-peer-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/replace-peer-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny) ReplacePeerAs() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "replace-peer-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/multihop-ttl YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/multihop-ttl YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When enabled the referenced group or neighbors are permitted
// to be indirectly connected - including cases where the TTL
// can be decremented between the BGP peers
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When enabled the referenced group or neighbors are permitted
// to be indirectly connected - including cases where the TTL
// can be decremented between the BGP peers
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultihopTtl (leaf): Time-to-live value to use when packets are sent to the
// referenced group or neighbors and ebgp-multihop is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multihop-ttl"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/multihop-ttl"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath) MultihopTtl() *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multihop-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultihopTtl (leaf): Time-to-live value to use when packets are sent to the
// referenced group or neighbors and ebgp-multihop is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multihop-ttl"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/multihop-ttl"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny) MultihopTtl() *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multihop-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling/config/treat-as-withdraw YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling/config/treat-as-withdraw YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPathAny struct {
	*ygot.NodePath
}

// TreatAsWithdraw (leaf): Specify whether erroneous UPDATE messages for which the
// NLRI can be extracted are reated as though the NLRI is
// withdrawn - avoiding session reset
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/treat-as-withdraw"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling/config/treat-as-withdraw"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPath) TreatAsWithdraw() *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "treat-as-withdraw"},
			map[string]interface{}{},
			n,
		),
	}
}

// TreatAsWithdraw (leaf): Specify whether erroneous UPDATE messages for which the
// NLRI can be extracted are reated as though the NLRI is
// withdrawn - avoiding session reset
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/treat-as-withdraw"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling/config/treat-as-withdraw"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPathAny) TreatAsWithdraw() *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "treat-as-withdraw"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/stale-routes-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/stale-routes-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): Enable or disable the graceful-restart capability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enable or disable the graceful-restart capability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable graceful-restart in helper mode only. When this
// leaf is set, the local system does not retain forwarding
// its own state during a restart, but supports procedures
// for the receiving speaker, as defined in RFC4724.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath) HelperOnly() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable graceful-restart in helper mode only. When this
// leaf is set, the local system does not retain forwarding
// its own state during a restart, but supports procedures
// for the receiving speaker, as defined in RFC4724.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny) HelperOnly() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Estimated time (in seconds) for the local BGP speaker to
// restart a session. This value is advertise in the graceful
// restart BGP capability.  This is a 12-bit value, referred to
// as Restart Time in RFC4724.  Per RFC4724, the suggested
// default value is <= the hold-time value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath) RestartTime() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Estimated time (in seconds) for the local BGP speaker to
// restart a session. This value is advertise in the graceful
// restart BGP capability.  This is a 12-bit value, referred to
// as Restart Time in RFC4724.  Per RFC4724, the suggested
// default value is <= the hold-time value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny) RestartTime() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaleRoutesTime (leaf): An upper-bound on the time thate stale routes will be
// retained by a router after a session is restarted. If an
// End-of-RIB (EOR) marker is received prior to this timer
// expiring stale-routes will be flushed upon its receipt - if
// no EOR is received, then when this timer expires stale paths
// will be purged. This timer is referred to as the
// Selection_Deferral_Timer in RFC4724
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/stale-routes-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/stale-routes-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath) StaleRoutesTime() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "stale-routes-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaleRoutesTime (leaf): An upper-bound on the time thate stale routes will be
// retained by a router after a session is restarted. If an
// End-of-RIB (EOR) marker is received prior to this timer
// expiring stale-routes will be flushed upon its receipt - if
// no EOR is received, then when this timer expires stale paths
// will be purged. This timer is referred to as the
// Selection_Deferral_Timer in RFC4724
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/stale-routes-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/stale-routes-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny) StaleRoutesTime() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "stale-routes-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options/config/log-neighbor-state-changes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options/config/log-neighbor-state-changes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPathAny struct {
	*ygot.NodePath
}

// LogNeighborStateChanges (leaf): Configure logging of peer state changes.  Default is
// to enable logging of peer state changes.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/log-neighbor-state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options/config/log-neighbor-state-changes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPath) LogNeighborStateChanges() *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "log-neighbor-state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LogNeighborStateChanges (leaf): Configure logging of peer state changes.  Default is
// to enable logging of peer state changes.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/log-neighbor-state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options/config/log-neighbor-state-changes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPathAny) LogNeighborStateChanges() *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "log-neighbor-state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-client YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-client YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-cluster-id YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-cluster-id YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPathAny struct {
	*ygot.NodePath
}

// RouteReflectorClient (leaf): Configure the neighbor as a route reflector client.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-reflector-client"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-client"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath) RouteReflectorClient() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-reflector-client"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflectorClient (leaf): Configure the neighbor as a route reflector client.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-reflector-client"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-client"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny) RouteReflectorClient() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-reflector-client"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflectorClusterId (leaf): route-reflector cluster id to use when local router is
// configured as a route reflector.  Commonly set at the group
// level, but allows a different cluster
// id to be set for each neighbor.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-reflector-cluster-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-cluster-id"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath) RouteReflectorClusterId() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-reflector-cluster-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflectorClusterId (leaf): route-reflector cluster id to use when local router is
// configured as a route reflector.  Commonly set at the group
// level, but allows a different cluster
// id to be set for each neighbor.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-reflector-cluster-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-cluster-id"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny) RouteReflectorClusterId() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-reflector-cluster-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/connect-retry YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/connect-retry YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/hold-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/hold-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/keepalive-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/keepalive-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/minimum-advertisement-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/minimum-advertisement-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePathAny struct {
	*ygot.NodePath
}

// ConnectRetry (leaf): Time interval in seconds between attempts to establish a
// session with the peer.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/connect-retry"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/connect-retry"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath) ConnectRetry() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "connect-retry"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConnectRetry (leaf): Time interval in seconds between attempts to establish a
// session with the peer.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/connect-retry"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/connect-retry"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny) ConnectRetry() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "connect-retry"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldTime (leaf): Time interval in seconds that a BGP session will be
// considered active in the absence of keepalive or other
// messages from the peer.  The hold-time is typically
// set to 3x the keepalive-interval.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hold-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/hold-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath) HoldTime() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hold-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldTime (leaf): Time interval in seconds that a BGP session will be
// considered active in the absence of keepalive or other
// messages from the peer.  The hold-time is typically
// set to 3x the keepalive-interval.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hold-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/hold-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny) HoldTime() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hold-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// KeepaliveInterval (leaf): Time interval in seconds between transmission of keepalive
// messages to the neighbor.  Typically set to 1/3 the
// hold-time.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keepalive-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/keepalive-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath) KeepaliveInterval() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keepalive-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// KeepaliveInterval (leaf): Time interval in seconds between transmission of keepalive
// messages to the neighbor.  Typically set to 1/3 the
// hold-time.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keepalive-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/keepalive-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny) KeepaliveInterval() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keepalive-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinimumAdvertisementInterval (leaf): Minimum time which must elapse between subsequent UPDATE
// messages relating to a common set of NLRI being transmitted
// to a peer. This timer is referred to as
// MinRouteAdvertisementIntervalTimer by RFC 4721 and serves to
// reduce the number of UPDATE messages transmitted when a
// particular set of NLRI exhibit instability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/minimum-advertisement-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/minimum-advertisement-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath) MinimumAdvertisementInterval() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "minimum-advertisement-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinimumAdvertisementInterval (leaf): Minimum time which must elapse between subsequent UPDATE
// messages relating to a common set of NLRI being transmitted
// to a peer. This timer is referred to as
// MinRouteAdvertisementIntervalTimer by RFC 4721 and serves to
// reduce the number of UPDATE messages transmitted when a
// particular set of NLRI exhibit instability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/minimum-advertisement-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/minimum-advertisement-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny) MinimumAdvertisementInterval() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "minimum-advertisement-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Time interval in seconds after which the BGP session is
// re-established after being torn down due to exceeding any
// configured max prefix-limit.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath) RestartTime() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Time interval in seconds after which the BGP session is
// re-established after being torn down due to exceeding any
// configured max prefix-limit.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny) RestartTime() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/local-address YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/local-address YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/mtu-discovery YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/mtu-discovery YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/passive-mode YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/passive-mode YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/tcp-mss YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/tcp-mss YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPathAny struct {
	*ygot.NodePath
}

// LocalAddress (leaf): Set the local IP (either IPv4 or IPv6) address to use
// for the session when sending BGP update messages.  This
// may be expressed as either an IP address or reference
// to the name of an interface.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/local-address"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath) LocalAddress() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalAddress (leaf): Set the local IP (either IPv4 or IPv6) address to use
// for the session when sending BGP update messages.  This
// may be expressed as either an IP address or reference
// to the name of an interface.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/local-address"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny) LocalAddress() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtuDiscovery (leaf): Turns path mtu discovery for BGP TCP sessions on (true)
// or off (false)
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mtu-discovery"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/mtu-discovery"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath) MtuDiscovery() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mtu-discovery"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtuDiscovery (leaf): Turns path mtu discovery for BGP TCP sessions on (true)
// or off (false)
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mtu-discovery"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/mtu-discovery"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny) MtuDiscovery() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mtu-discovery"},
			map[string]interface{}{},
			n,
		),
	}
}

// PassiveMode (leaf): Wait for peers to issue requests to open a BGP session,
// rather than initiating sessions from the local router.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/passive-mode"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath) PassiveMode() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// PassiveMode (leaf): Wait for peers to issue requests to open a BGP session,
// rather than initiating sessions from the local router.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/passive-mode"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny) PassiveMode() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// TcpMss (leaf): Sets the max segment size for BGP TCP sessions.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/tcp-mss"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/tcp-mss"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath) TcpMss() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "tcp-mss"},
			map[string]interface{}{},
			n,
		),
	}
}

// TcpMss (leaf): Sets the max segment size for BGP TCP sessions.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/tcp-mss"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/tcp-mss"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny) TcpMss() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "tcp-mss"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPathAny struct {
	*ygot.NodePath
}

// Ebgp (container): Multipath parameters for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath) Ebgp() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ebgp (container): Multipath parameters for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny) Ebgp() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ibgp (container): Multipath parameters for iBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ibgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath) Ibgp() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ibgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ibgp (container): Multipath parameters for iBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ibgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny) Ibgp() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ibgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPathAny struct {
	*ygot.NodePath
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// BGP multipath. The default is use a single path.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// BGP multipath. The default is use a single path.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPathAny struct {
	*ygot.NodePath
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// iBGP multipath. The default is to use a single path
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// iBGP multipath. The default is to use a single path
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_IgmpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp YANG schema element.
type NetworkInstance_Protocol_IgmpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_IgmpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp YANG schema element.
type NetworkInstance_Protocol_IgmpPathAny struct {
	*ygot.NodePath
}

// Global (container): Global IGMP configuration and operational state.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global"
func (n *NetworkInstance_Protocol_IgmpPath) Global() *NetworkInstance_Protocol_Igmp_GlobalPath {
	return &NetworkInstance_Protocol_Igmp_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): Global IGMP configuration and operational state.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global"
func (n *NetworkInstance_Protocol_IgmpPathAny) Global() *NetworkInstance_Protocol_Igmp_GlobalPathAny {
	return &NetworkInstance_Protocol_Igmp_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface IGMP configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_IgmpPath) InterfaceAny() *NetworkInstance_Protocol_Igmp_InterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface IGMP configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_IgmpPathAny) InterfaceAny() *NetworkInstance_Protocol_Igmp_InterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): This container defines interface IGMP configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_IgmpPath) Interface(InterfaceId string) *NetworkInstance_Protocol_Igmp_InterfacePath {
	return &NetworkInstance_Protocol_Igmp_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): This container defines interface IGMP configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_IgmpPathAny) Interface(InterfaceId string) *NetworkInstance_Protocol_Igmp_InterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global YANG schema element.
type NetworkInstance_Protocol_Igmp_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global YANG schema element.
type NetworkInstance_Protocol_Igmp_GlobalPathAny struct {
	*ygot.NodePath
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm"
func (n *NetworkInstance_Protocol_Igmp_GlobalPath) Ssm() *NetworkInstance_Protocol_Igmp_Global_SsmPath {
	return &NetworkInstance_Protocol_Igmp_Global_SsmPath{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm"
func (n *NetworkInstance_Protocol_Igmp_GlobalPathAny) Ssm() *NetworkInstance_Protocol_Igmp_Global_SsmPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_SsmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Global_SsmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_SsmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_SsmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_SsmPathAny struct {
	*ygot.NodePath
}

// MappingAny (list): A Source Specific Multicast (SSM) mapping. This allows
// IGMP v2 hosts to be able to join in SSM environments
// by translating IGMP v2 reports into IGMP v3 reports.
// The request in an IGMP v2 join is sent toward the source
// address found by matching the multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mappings/mapping"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping"
// Source (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_Global_SsmPath) MappingAny() *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mappings", "mapping"},
			map[string]interface{}{"source": "*"},
			n,
		),
	}
}

// MappingAny (list): A Source Specific Multicast (SSM) mapping. This allows
// IGMP v2 hosts to be able to join in SSM environments
// by translating IGMP v2 reports into IGMP v3 reports.
// The request in an IGMP v2 join is sent toward the source
// address found by matching the multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mappings/mapping"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping"
// Source (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_Global_SsmPathAny) MappingAny() *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mappings", "mapping"},
			map[string]interface{}{"source": "*"},
			n,
		),
	}
}

// Mapping (list): A Source Specific Multicast (SSM) mapping. This allows
// IGMP v2 hosts to be able to join in SSM environments
// by translating IGMP v2 reports into IGMP v3 reports.
// The request in an IGMP v2 join is sent toward the source
// address found by matching the multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mappings/mapping"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping"
// Source: string
func (n *NetworkInstance_Protocol_Igmp_Global_SsmPath) Mapping(Source string) *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath{
		NodePath: ygot.NewNodePath(
			[]string{"mappings", "mapping"},
			map[string]interface{}{"source": Source},
			n,
		),
	}
}

// Mapping (list): A Source Specific Multicast (SSM) mapping. This allows
// IGMP v2 hosts to be able to join in SSM environments
// by translating IGMP v2 reports into IGMP v3 reports.
// The request in an IGMP v2 join is sent toward the source
// address found by matching the multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mappings/mapping"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping"
// Source: string
func (n *NetworkInstance_Protocol_Igmp_Global_SsmPathAny) Mapping(Source string) *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mappings", "mapping"},
			map[string]interface{}{"source": Source},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/config/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/config/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/config/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/config/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPathAny struct {
	*ygot.NodePath
}

// Source (leaf): Multicast source address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/config/source"
func (n *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath) Source() *NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePath {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): Multicast source address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/config/source"
func (n *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny) Source() *NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/config/ssm-ranges"
func (n *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath) SsmRanges() *NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPath {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/config/ssm-ranges"
func (n *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny) SsmRanges() *NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Igmp_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Igmp_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/enabled YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/enabled YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/filter-prefixes YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/filter-prefixes YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/query-interval YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/query-interval YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_VersionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/version YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_VersionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_VersionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/version YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_VersionPathAny struct {
	*ygot.NodePath
}

// Counters (container): Counters avaiable on a per interface bases for IGMP.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) Counters() *NetworkInstance_Protocol_Igmp_Interface_CountersPath {
	return &NetworkInstance_Protocol_Igmp_Interface_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): Counters avaiable on a per interface bases for IGMP.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) Counters() *NetworkInstance_Protocol_Igmp_Interface_CountersPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/enabled"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) Enabled() *NetworkInstance_Protocol_Igmp_Interface_EnabledPath {
	return &NetworkInstance_Protocol_Igmp_Interface_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/enabled"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) Enabled() *NetworkInstance_Protocol_Igmp_Interface_EnabledPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// FilterPrefixes (leaf): List used to filter joins.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/filter-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/filter-prefixes"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) FilterPrefixes() *NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPath {
	return &NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "filter-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// FilterPrefixes (leaf): List used to filter joins.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/filter-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/filter-prefixes"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) FilterPrefixes() *NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "filter-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which IGMP is enabled.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/interface-id"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) InterfaceId() *NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPath {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which IGMP is enabled.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/interface-id"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) InterfaceId() *NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) InterfaceRef() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) InterfaceRef() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueryInterval (leaf): Interval at which the router sends the IGMP membership
// queries.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/query-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/query-interval"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) QueryInterval() *NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPath {
	return &NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "query-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueryInterval (leaf): Interval at which the router sends the IGMP membership
// queries.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/query-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/query-interval"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) QueryInterval() *NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "query-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaticGroupsAny (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-membership-groups/static-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups"
// StaticGroup (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) StaticGroupsAny() *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-membership-groups", "static-groups"},
			map[string]interface{}{"static-group": "*"},
			n,
		),
	}
}

// StaticGroupsAny (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-membership-groups/static-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups"
// StaticGroup (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) StaticGroupsAny() *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-membership-groups", "static-groups"},
			map[string]interface{}{"static-group": "*"},
			n,
		),
	}
}

// StaticGroups (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-membership-groups/static-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups"
// StaticGroup: string
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) StaticGroups(StaticGroup string) *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"static-membership-groups", "static-groups"},
			map[string]interface{}{"static-group": StaticGroup},
			n,
		),
	}
}

// StaticGroups (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-membership-groups/static-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups"
// StaticGroup: string
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) StaticGroups(StaticGroup string) *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-membership-groups", "static-groups"},
			map[string]interface{}{"static-group": StaticGroup},
			n,
		),
	}
}

// Version (leaf): IGMP Version.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/version"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/version"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) Version() *NetworkInstance_Protocol_Igmp_Interface_VersionPath {
	return &NetworkInstance_Protocol_Igmp_Interface_VersionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "version"},
			map[string]interface{}{},
			n,
		),
	}
}

// Version (leaf): IGMP Version.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/version"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/version"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) Version() *NetworkInstance_Protocol_Igmp_Interface_VersionPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_VersionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "version"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_CountersPathAny struct {
	*ygot.NodePath
}

// Queries (container): IGMP membership queries.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "queries"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries"
func (n *NetworkInstance_Protocol_Igmp_Interface_CountersPath) Queries() *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath{
		NodePath: ygot.NewNodePath(
			[]string{"queries"},
			map[string]interface{}{},
			n,
		),
	}
}

// Queries (container): IGMP membership queries.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "queries"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries"
func (n *NetworkInstance_Protocol_Igmp_Interface_CountersPathAny) Queries() *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queries"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reports (container): Number of IGMP membership reports received.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reports"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports"
func (n *NetworkInstance_Protocol_Igmp_Interface_CountersPath) Reports() *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath{
		NodePath: ygot.NewNodePath(
			[]string{"reports"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reports (container): Number of IGMP membership reports received.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reports"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports"
func (n *NetworkInstance_Protocol_Igmp_Interface_CountersPathAny) Reports() *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reports"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny struct {
	*ygot.NodePath
}

// Received (container): Number of IGMP membership queries received.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "received"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath) Received() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (container): Number of IGMP membership queries received.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "received"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny) Received() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (container): Number of IGMP membership queries sent.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath) Sent() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (container): Number of IGMP membership queries sent.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny) Sent() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/config/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/config/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/config/static-group YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/config/static-group YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPathAny struct {
	*ygot.NodePath
}

// Source (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/config/source"
func (n *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath) Source() *NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePath {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/config/source"
func (n *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny) Source() *NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaticGroup (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/static-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/config/static-group"
func (n *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath) StaticGroup() *NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPath {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "static-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaticGroup (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/static-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/config/static-group"
func (n *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny) StaticGroup() *NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "static-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_IsisPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis YANG schema element.
type NetworkInstance_Protocol_IsisPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_IsisPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis YANG schema element.
type NetworkInstance_Protocol_IsisPathAny struct {
	*ygot.NodePath
}

// Global (container): This container defines global ISIS configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global"
func (n *NetworkInstance_Protocol_IsisPath) Global() *NetworkInstance_Protocol_Isis_GlobalPath {
	return &NetworkInstance_Protocol_Isis_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): This container defines global ISIS configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global"
func (n *NetworkInstance_Protocol_IsisPathAny) Global() *NetworkInstance_Protocol_Isis_GlobalPathAny {
	return &NetworkInstance_Protocol_Isis_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): This list contains ISIS interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_IsisPath) InterfaceAny() *NetworkInstance_Protocol_Isis_InterfacePathAny {
	return &NetworkInstance_Protocol_Isis_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): This list contains ISIS interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_IsisPathAny) InterfaceAny() *NetworkInstance_Protocol_Isis_InterfacePathAny {
	return &NetworkInstance_Protocol_Isis_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): This list contains ISIS interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_IsisPath) Interface(InterfaceId string) *NetworkInstance_Protocol_Isis_InterfacePath {
	return &NetworkInstance_Protocol_Isis_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): This list contains ISIS interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_IsisPathAny) Interface(InterfaceId string) *NetworkInstance_Protocol_Isis_InterfacePathAny {
	return &NetworkInstance_Protocol_Isis_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// LevelAny (list): Configuration and operational state parameters related to a
// particular level within the IS-IS protocol instance
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level"
// LevelNumber (wildcarded): uint8
func (n *NetworkInstance_Protocol_IsisPath) LevelAny() *NetworkInstance_Protocol_Isis_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": "*"},
			n,
		),
	}
}

// LevelAny (list): Configuration and operational state parameters related to a
// particular level within the IS-IS protocol instance
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level"
// LevelNumber (wildcarded): uint8
func (n *NetworkInstance_Protocol_IsisPathAny) LevelAny() *NetworkInstance_Protocol_Isis_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": "*"},
			n,
		),
	}
}

// Level (list): Configuration and operational state parameters related to a
// particular level within the IS-IS protocol instance
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level"
// LevelNumber: uint8
func (n *NetworkInstance_Protocol_IsisPath) Level(LevelNumber uint8) *NetworkInstance_Protocol_Isis_LevelPath {
	return &NetworkInstance_Protocol_Isis_LevelPath{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": LevelNumber},
			n,
		),
	}
}

// Level (list): Configuration and operational state parameters related to a
// particular level within the IS-IS protocol instance
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level"
// LevelNumber: uint8
func (n *NetworkInstance_Protocol_IsisPathAny) Level(LevelNumber uint8) *NetworkInstance_Protocol_Isis_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": LevelNumber},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global YANG schema element.
type NetworkInstance_Protocol_Isis_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global YANG schema element.
type NetworkInstance_Protocol_Isis_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/authentication-check YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/authentication-check YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_FastFloodingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/fast-flooding YANG schema element.
type NetworkInstance_Protocol_Isis_Global_FastFloodingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_FastFloodingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/fast-flooding YANG schema element.
type NetworkInstance_Protocol_Isis_Global_FastFloodingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_HelloPaddingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/hello-padding YANG schema element.
type NetworkInstance_Protocol_Isis_Global_HelloPaddingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_HelloPaddingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/hello-padding YANG schema element.
type NetworkInstance_Protocol_Isis_Global_HelloPaddingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_IidTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/iid-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Global_IidTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_IidTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/iid-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Global_IidTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InstancePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InstancePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InstancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InstancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LevelCapabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/level-capability YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LevelCapabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LevelCapabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/level-capability YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LevelCapabilityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/max-ecmp-paths YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/max-ecmp-paths YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/maximum-area-addresses YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/maximum-area-addresses YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_NetPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/net YANG schema element.
type NetworkInstance_Protocol_Isis_Global_NetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_NetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/net YANG schema element.
type NetworkInstance_Protocol_Isis_Global_NetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_PoiTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/poi-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Global_PoiTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_PoiTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/poi-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Global_PoiTlvPathAny struct {
	*ygot.NodePath
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AfAny() *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AfAny() *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPath {
	return &NetworkInstance_Protocol_Isis_Global_AfPath{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// AfiAny (list): Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-shortcuts/afi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AfiAny() *NetworkInstance_Protocol_Isis_Global_AfiPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-shortcuts", "afi"},
			map[string]interface{}{"afi-name": "*"},
			n,
		),
	}
}

// AfiAny (list): Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-shortcuts/afi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AfiAny() *NetworkInstance_Protocol_Isis_Global_AfiPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-shortcuts", "afi"},
			map[string]interface{}{"afi-name": "*"},
			n,
		),
	}
}

// Afi (list): Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-shortcuts/afi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi"
// AfiName: oc.E_IsisTypes_AFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Afi(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfiPath {
	return &NetworkInstance_Protocol_Isis_Global_AfiPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-shortcuts", "afi"},
			map[string]interface{}{"afi-name": AfiName},
			n,
		),
	}
}

// Afi (list): Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-shortcuts/afi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi"
// AfiName: oc.E_IsisTypes_AFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Afi(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfiPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-shortcuts", "afi"},
			map[string]interface{}{"afi-name": AfiName},
			n,
		),
	}
}

// AuthenticationCheck (leaf): When set to true, reject all ISIS protocol PDUs that either have a mismatch
// in authentication-type or authentication-key.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-check"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/authentication-check"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AuthenticationCheck() *NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPath {
	return &NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-check"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationCheck (leaf): When set to true, reject all ISIS protocol PDUs that either have a mismatch
// in authentication-type or authentication-key.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-check"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/authentication-check"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AuthenticationCheck() *NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-check"},
			map[string]interface{}{},
			n,
		),
	}
}

// FastFlooding (leaf): When set to true, IS will always flood the LSP that triggered an SPF
// before the router actually runs the SPF computation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/fast-flooding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/fast-flooding"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) FastFlooding() *NetworkInstance_Protocol_Isis_Global_FastFloodingPath {
	return &NetworkInstance_Protocol_Isis_Global_FastFloodingPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "fast-flooding"},
			map[string]interface{}{},
			n,
		),
	}
}

// FastFlooding (leaf): When set to true, IS will always flood the LSP that triggered an SPF
// before the router actually runs the SPF computation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/fast-flooding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/fast-flooding"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) FastFlooding() *NetworkInstance_Protocol_Isis_Global_FastFloodingPathAny {
	return &NetworkInstance_Protocol_Isis_Global_FastFloodingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "fast-flooding"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): This container defines ISIS Graceful Restart.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) GracefulRestart() *NetworkInstance_Protocol_Isis_Global_GracefulRestartPath {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): This container defines ISIS Graceful Restart.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) GracefulRestart() *NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloPadding (leaf): Controls the padding type for IS-IS Hello PDUs on a global level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-padding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/hello-padding"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) HelloPadding() *NetworkInstance_Protocol_Isis_Global_HelloPaddingPath {
	return &NetworkInstance_Protocol_Isis_Global_HelloPaddingPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-padding"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloPadding (leaf): Controls the padding type for IS-IS Hello PDUs on a global level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-padding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/hello-padding"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) HelloPadding() *NetworkInstance_Protocol_Isis_Global_HelloPaddingPathAny {
	return &NetworkInstance_Protocol_Isis_Global_HelloPaddingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-padding"},
			map[string]interface{}{},
			n,
		),
	}
}

// IidTlv (leaf): ISIS Instance Identifier TLV. When set to trues, the IID-TLV identifies
// the unique instance as well as the topology/topologies to which the
// PDU applies.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/iid-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/iid-tlv"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) IidTlv() *NetworkInstance_Protocol_Isis_Global_IidTlvPath {
	return &NetworkInstance_Protocol_Isis_Global_IidTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "iid-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// IidTlv (leaf): ISIS Instance Identifier TLV. When set to trues, the IID-TLV identifies
// the unique instance as well as the topology/topologies to which the
// PDU applies.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/iid-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/iid-tlv"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) IidTlv() *NetworkInstance_Protocol_Isis_Global_IidTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Global_IidTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "iid-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instance (leaf): ISIS Instance.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/instance"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Instance() *NetworkInstance_Protocol_Isis_Global_InstancePath {
	return &NetworkInstance_Protocol_Isis_Global_InstancePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "instance"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instance (leaf): ISIS Instance.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/instance"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Instance() *NetworkInstance_Protocol_Isis_Global_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Global_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "instance"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterLevelPropagationPolicies (container): Policies to propagate prefixes between IS-IS levels.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-level-propagation-policies"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) InterLevelPropagationPolicies() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath{
		NodePath: ygot.NewNodePath(
			[]string{"inter-level-propagation-policies"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterLevelPropagationPolicies (container): Policies to propagate prefixes between IS-IS levels.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-level-propagation-policies"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) InterLevelPropagationPolicies() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-level-propagation-policies"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelCapability (leaf): ISIS level capability(level-1, level-2, level-1-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/level-capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/level-capability"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) LevelCapability() *NetworkInstance_Protocol_Isis_Global_LevelCapabilityPath {
	return &NetworkInstance_Protocol_Isis_Global_LevelCapabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "level-capability"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelCapability (leaf): ISIS level capability(level-1, level-2, level-1-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/level-capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/level-capability"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) LevelCapability() *NetworkInstance_Protocol_Isis_Global_LevelCapabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LevelCapabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "level-capability"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspBit (container): This container defines ISIS LSP Operational Bits.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) LspBit() *NetworkInstance_Protocol_Isis_Global_LspBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspBit (container): This container defines ISIS LSP Operational Bits.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) LspBit() *NetworkInstance_Protocol_Isis_Global_LspBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxEcmpPaths (leaf): ISIS max-paths count.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-ecmp-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/max-ecmp-paths"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) MaxEcmpPaths() *NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPath {
	return &NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-ecmp-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxEcmpPaths (leaf): ISIS max-paths count.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-ecmp-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/max-ecmp-paths"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) MaxEcmpPaths() *NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPathAny {
	return &NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-ecmp-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumAreaAddresses (leaf): Maximum areas supported.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-area-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/maximum-area-addresses"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) MaximumAreaAddresses() *NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPath {
	return &NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-area-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumAreaAddresses (leaf): Maximum areas supported.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-area-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/maximum-area-addresses"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) MaximumAreaAddresses() *NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPathAny {
	return &NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-area-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state relating to MPLS-related
// features in IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Mpls() *NetworkInstance_Protocol_Isis_Global_MplsPath {
	return &NetworkInstance_Protocol_Isis_Global_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state relating to MPLS-related
// features in IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Mpls() *NetworkInstance_Protocol_Isis_Global_MplsPathAny {
	return &NetworkInstance_Protocol_Isis_Global_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Net (leaf-list): ISIS network entity title (NET). The first 8 bits are usually
// 49 (private AFI), next 16 bits represent area, next 48 bits represent
// system id and final 8 bits are set to 0.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/net"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/net"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Net() *NetworkInstance_Protocol_Isis_Global_NetPath {
	return &NetworkInstance_Protocol_Isis_Global_NetPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "net"},
			map[string]interface{}{},
			n,
		),
	}
}

// Net (leaf-list): ISIS network entity title (NET). The first 8 bits are usually
// 49 (private AFI), next 16 bits represent area, next 48 bits represent
// system id and final 8 bits are set to 0.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/net"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/net"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Net() *NetworkInstance_Protocol_Isis_Global_NetPathAny {
	return &NetworkInstance_Protocol_Isis_Global_NetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "net"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nsr (container): This container defines ISIS Non-Stop Routing.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nsr"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/nsr"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Nsr() *NetworkInstance_Protocol_Isis_Global_NsrPath {
	return &NetworkInstance_Protocol_Isis_Global_NsrPath{
		NodePath: ygot.NewNodePath(
			[]string{"nsr"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nsr (container): This container defines ISIS Non-Stop Routing.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nsr"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/nsr"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Nsr() *NetworkInstance_Protocol_Isis_Global_NsrPathAny {
	return &NetworkInstance_Protocol_Isis_Global_NsrPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"nsr"},
			map[string]interface{}{},
			n,
		),
	}
}

// PoiTlv (leaf): ISIS purge TLV. When set to true, a TLV is added to purges to record
// the system ID  of the IS generating the purge.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/poi-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/poi-tlv"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) PoiTlv() *NetworkInstance_Protocol_Isis_Global_PoiTlvPath {
	return &NetworkInstance_Protocol_Isis_Global_PoiTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "poi-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// PoiTlv (leaf): ISIS purge TLV. When set to true, a TLV is added to purges to record
// the system ID  of the IS generating the purge.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/poi-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/poi-tlv"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) PoiTlv() *NetworkInstance_Protocol_Isis_Global_PoiTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Global_PoiTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "poi-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReferenceBandwidth (container): This container defines ISIS Reference Bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reference-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) ReferenceBandwidth() *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"reference-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReferenceBandwidth (container): This container defines ISIS Reference Bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reference-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) ReferenceBandwidth() *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reference-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operational state relating to segment routing.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) SegmentRouting() *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operational state relating to segment routing.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) SegmentRouting() *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines ISIS timers.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Timers() *NetworkInstance_Protocol_Isis_Global_TimersPath {
	return &NetworkInstance_Protocol_Isis_Global_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines ISIS timers.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Timers() *NetworkInstance_Protocol_Isis_Global_TimersPathAny {
	return &NetworkInstance_Protocol_Isis_Global_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): This container defines ISIS transport.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/transport"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Transport() *NetworkInstance_Protocol_Isis_Global_TransportPath {
	return &NetworkInstance_Protocol_Isis_Global_TransportPath{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): This container defines ISIS transport.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/transport"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Transport() *NetworkInstance_Protocol_Isis_Global_TransportPathAny {
	return &NetworkInstance_Protocol_Isis_Global_TransportPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_AfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_AfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_SafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_SafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_SafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_SafiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) AfiName() *NetworkInstance_Protocol_Isis_Global_Af_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Af_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) AfiName() *NetworkInstance_Protocol_Isis_Global_Af_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) Enabled() *NetworkInstance_Protocol_Isis_Global_Af_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_Af_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_Af_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value(default=10).
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/metric"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) Metric() *NetworkInstance_Protocol_Isis_Global_Af_MetricPath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value(default=10).
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/metric"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) Metric() *NetworkInstance_Protocol_Isis_Global_Af_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopology (container): This container defines multi-topology address-family configuration
// and state information. ISIS TLV 235, 237.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "multi-topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) MultiTopology() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath{
		NodePath: ygot.NewNodePath(
			[]string{"multi-topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopology (container): This container defines multi-topology address-family configuration
// and state information. ISIS TLV 235, 237.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "multi-topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) MultiTopology() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"multi-topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/safi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) SafiName() *NetworkInstance_Protocol_Isis_Global_Af_SafiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Af_SafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/safi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) SafiName() *NetworkInstance_Protocol_Isis_Global_Af_SafiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_SafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/config/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/config/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath) AfiName() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny) AfiName() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/config/safi-name"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath) SafiName() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/config/safi-name"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny) SafiName() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_AfiPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AfiPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_AfiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AfiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Afi_NhTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/config/nh-type YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Afi_NhTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Afi_NhTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/config/nh-type YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Afi_NhTypePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfiPath) AfiName() *NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfiPathAny) AfiName() *NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NhType (leaf-list): Tunnel NH Type(RSVP,SR). When present it implies
// that nh-type shortcut is enabled for a specified AFI.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/nh-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/config/nh-type"
func (n *NetworkInstance_Protocol_Isis_Global_AfiPath) NhType() *NetworkInstance_Protocol_Isis_Global_Afi_NhTypePath {
	return &NetworkInstance_Protocol_Isis_Global_Afi_NhTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "nh-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NhType (leaf-list): Tunnel NH Type(RSVP,SR). When present it implies
// that nh-type shortcut is enabled for a specified AFI.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/nh-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/config/nh-type"
func (n *NetworkInstance_Protocol_Isis_Global_AfiPathAny) NhType() *NetworkInstance_Protocol_Isis_Global_Afi_NhTypePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Afi_NhTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "nh-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable or disable the IS-IS graceful restart helper function. When
// this leaf is set, the local system does not utilise the IS-IS
// graceful restart procedures during its own restart, but supports
// retaining forwarding information during a remote speaker's restart.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Isis_Global_GracefulRestartPath) HelperOnly() *NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPath {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable or disable the IS-IS graceful restart helper function. When
// this leaf is set, the local system does not utilise the IS-IS
// graceful restart procedures during its own restart, but supports
// retaining forwarding information during a remote speaker's restart.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny) HelperOnly() *NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny struct {
	*ygot.NodePath
}

// Level1ToLevel2 (container): Policies relating to prefixes to be propagated from
// Level 1 to Level 2.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "level1-to-level2"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath) Level1ToLevel2() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path{
		NodePath: ygot.NewNodePath(
			[]string{"level1-to-level2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Level1ToLevel2 (container): Policies relating to prefixes to be propagated from
// Level 1 to Level 2.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "level1-to-level2"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny) Level1ToLevel2() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"level1-to-level2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Level2ToLevel1 (container): Policies relating to prefixes to be propagated from
// Level2 to Level 1.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "level2-to-level1"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath) Level2ToLevel1() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path{
		NodePath: ygot.NewNodePath(
			[]string{"level2-to-level1"},
			map[string]interface{}{},
			n,
		),
	}
}

// Level2ToLevel1 (container): Policies relating to prefixes to be propagated from
// Level2 to Level 1.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "level2-to-level1"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny) Level2ToLevel1() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"level2-to-level1"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2 YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2 YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/config/default-import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path) DefaultImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/config/default-import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/config/import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path) ImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/config/import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny) ImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1 YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1 YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/config/default-import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path) DefaultImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/config/default-import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/config/import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path) ImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/config/import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny) ImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_LspBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBitPathAny struct {
	*ygot.NodePath
}

// AttachedBit (container): This container defines Attached Bit.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "attached-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBitPath) AttachedBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"attached-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttachedBit (container): This container defines Attached Bit.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "attached-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBitPathAny) AttachedBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"attached-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// OverloadBit (container): This container defines Overload Bit configuration.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "overload-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBitPath) OverloadBit() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"overload-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// OverloadBit (container): This container defines Overload Bit configuration.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "overload-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBitPathAny) OverloadBit() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"overload-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/config/ignore-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/config/ignore-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/config/suppress-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/config/suppress-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPathAny struct {
	*ygot.NodePath
}

// IgnoreBit (leaf): When set to true, if the attached bit is set on an incoming Level 1
// IS-IS, the local system ignores it. In this case the local system
// does not set a default route to the L1L2 router advertising the PDU
// with the attached bit set.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ignore-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/config/ignore-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath) IgnoreBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ignore-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgnoreBit (leaf): When set to true, if the attached bit is set on an incoming Level 1
// IS-IS, the local system ignores it. In this case the local system
// does not set a default route to the L1L2 router advertising the PDU
// with the attached bit set.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ignore-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/config/ignore-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny) IgnoreBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ignore-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SuppressBit (leaf): When set to true, if the local IS acts as a L1L2 router, then the
// attached bit is not advertised in locally generated PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/suppress-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/config/suppress-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath) SuppressBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "suppress-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SuppressBit (leaf): When set to true, if the local IS acts as a L1L2 router, then the
// attached bit is not advertised in locally generated PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/suppress-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/config/suppress-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny) SuppressBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "suppress-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/advertise-high-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/advertise-high-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/set-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/set-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/set-bit-on-boot YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/set-bit-on-boot YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPathAny struct {
	*ygot.NodePath
}

// AdvertiseHighMetric (leaf): When set to true, the local IS advertises links with the highest
// available metric regardless of their configured metric. The metric
// value is based on the metric style - if wide metrics are utilised
// the metric is advertised as 16777214, otherwise they are advertised
// with a value of 63.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/advertise-high-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/advertise-high-metric"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) AdvertiseHighMetric() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "advertise-high-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdvertiseHighMetric (leaf): When set to true, the local IS advertises links with the highest
// available metric regardless of their configured metric. The metric
// value is based on the metric style - if wide metrics are utilised
// the metric is advertised as 16777214, otherwise they are advertised
// with a value of 63.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/advertise-high-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/advertise-high-metric"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) AdvertiseHighMetric() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "advertise-high-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResetTriggerAny (list): This list describes ISIS Overload reset trigger reasons.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reset-triggers/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger"
// ResetTrigger (wildcarded): oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) ResetTriggerAny() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reset-triggers", "reset-trigger"},
			map[string]interface{}{"reset-trigger": "*"},
			n,
		),
	}
}

// ResetTriggerAny (list): This list describes ISIS Overload reset trigger reasons.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reset-triggers/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger"
// ResetTrigger (wildcarded): oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) ResetTriggerAny() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reset-triggers", "reset-trigger"},
			map[string]interface{}{"reset-trigger": "*"},
			n,
		),
	}
}

// ResetTrigger (list): This list describes ISIS Overload reset trigger reasons.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reset-triggers/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger"
// ResetTrigger: oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) ResetTrigger(ResetTrigger oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE) *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath{
		NodePath: ygot.NewNodePath(
			[]string{"reset-triggers", "reset-trigger"},
			map[string]interface{}{"reset-trigger": ResetTrigger},
			n,
		),
	}
}

// ResetTrigger (list): This list describes ISIS Overload reset trigger reasons.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reset-triggers/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger"
// ResetTrigger: oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) ResetTrigger(ResetTrigger oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE) *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reset-triggers", "reset-trigger"},
			map[string]interface{}{"reset-trigger": ResetTrigger},
			n,
		),
	}
}

// SetBit (leaf): When set to true, IS-IS overload bit is set.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/set-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) SetBit() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetBit (leaf): When set to true, IS-IS overload bit is set.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/set-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) SetBit() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetBitOnBoot (leaf): When set to true, the IS-IS overload bit is set on system boot.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set-bit-on-boot"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/set-bit-on-boot"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) SetBitOnBoot() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set-bit-on-boot"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetBitOnBoot (leaf): When set to true, the IS-IS overload bit is set on system boot.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set-bit-on-boot"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/set-bit-on-boot"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) SetBitOnBoot() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set-bit-on-boot"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/config/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/config/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/config/reset-trigger YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/config/reset-trigger YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPathAny struct {
	*ygot.NodePath
}

// Delay (leaf): If a reset trigger is specified, the system should delay resetting
// the overload bit for the specified number of seconds after the
// trigger occurs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/config/delay"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath) Delay() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): If a reset trigger is specified, the system should delay resetting
// the overload bit for the specified number of seconds after the
// trigger occurs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/config/delay"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny) Delay() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResetTrigger (leaf): In the case that the system sets the overload bit on start, the
// system should reset the bit (i.e., clear the overload bit) upon
// the specified trigger.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/config/reset-trigger"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath) ResetTrigger() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "reset-trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResetTrigger (leaf): In the case that the system sets the overload bit on start, the
// system should reset the bit (i.e., clear the overload bit) upon
// the specified trigger.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/config/reset-trigger"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny) ResetTrigger() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "reset-trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MplsPathAny struct {
	*ygot.NodePath
}

// IgpLdpSync (container): Configuration and operational state relating to synchronisation
// between the LDP and IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Isis_Global_MplsPath) IgpLdpSync() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpLdpSync (container): Configuration and operational state relating to synchronisation
// between the LDP and IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Isis_Global_MplsPathAny) IgpLdpSync() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/config/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/config/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, rely on IGP/LDP synchronization. IGP cost for
// link is maintained at max until LDP adjacencies are established
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath) Enabled() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, rely on IGP/LDP synchronization. IGP cost for
// link is maintained at max until LDP adjacencies are established
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): Specifies a delay, expressed in units of seconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/config/post-session-up-delay"
func (n *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath) PostSessionUpDelay() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): Specifies a delay, expressed in units of seconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/config/post-session-up-delay"
func (n *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny) PostSessionUpDelay() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_NsrPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/nsr YANG schema element.
type NetworkInstance_Protocol_Isis_Global_NsrPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_NsrPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/nsr YANG schema element.
type NetworkInstance_Protocol_Isis_Global_NsrPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/nsr/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/nsr/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/nsr/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_NsrPath) Enabled() *NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/nsr/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_NsrPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth/config/reference-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth/config/reference-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPathAny struct {
	*ygot.NodePath
}

// ReferenceBandwidth (leaf): ISIS Reference Bandwidth value
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/reference-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth/config/reference-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath) ReferenceBandwidth() *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "reference-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReferenceBandwidth (leaf): ISIS Reference Bandwidth value
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/reference-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth/config/reference-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny) ReferenceBandwidth() *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "reference-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/srgb YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/srgb YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/srlb YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/srlb YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, the segment routing extensions are
// utilised within the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath) Enabled() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, the segment routing extensions are
// utilised within the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Srgb (leaf): A reference to the Segment Routing Global Block (SRGB) that is
// to be used by this IGP instance.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/srgb"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/srgb"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath) Srgb() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPath {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "srgb"},
			map[string]interface{}{},
			n,
		),
	}
}

// Srgb (leaf): A reference to the Segment Routing Global Block (SRGB) that is
// to be used by this IGP instance.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/srgb"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/srgb"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny) Srgb() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "srgb"},
			map[string]interface{}{},
			n,
		),
	}
}

// Srlb (leaf): A reference to the Segment Routing Local Block (SRLB) that is to
// be advertised by the IGP instance.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/srlb"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/srlb"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath) Srlb() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPath {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "srlb"},
			map[string]interface{}{},
			n,
		),
	}
}

// Srlb (leaf): A reference to the Segment Routing Local Block (SRLB) that is to
// be advertised by the IGP instance.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/srlb"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/srlb"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny) Srlb() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "srlb"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Global_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Global_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/config/lsp-lifetime-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/config/lsp-lifetime-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/config/lsp-refresh-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/config/lsp-refresh-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPathAny struct {
	*ygot.NodePath
}

// LspGeneration (container): This container defines ISIS LSP Generation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPath) LspGeneration() *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspGeneration (container): This container defines ISIS LSP Generation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPathAny) LspGeneration() *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspLifetimeInterval (leaf): Time interval in seconds that specifies how long an LSP remains in
// LSDB without being refreshed.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-lifetime-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/config/lsp-lifetime-interval"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPath) LspLifetimeInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-lifetime-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspLifetimeInterval (leaf): Time interval in seconds that specifies how long an LSP remains in
// LSDB without being refreshed.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-lifetime-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/config/lsp-lifetime-interval"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPathAny) LspLifetimeInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-lifetime-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspRefreshInterval (leaf): Time interval in seconds that specifies how often route topology
// that a device originates is transmitted in LSPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-refresh-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/config/lsp-refresh-interval"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPath) LspRefreshInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-refresh-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspRefreshInterval (leaf): Time interval in seconds that specifies how often route topology
// that a device originates is transmitted in LSPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-refresh-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/config/lsp-refresh-interval"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPathAny) LspRefreshInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-refresh-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): This container defines ISIS SPF timer settings.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPath) Spf() *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_SpfPath{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): This container defines ISIS SPF timer settings.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPathAny) Spf() *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-first-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-first-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-max-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-max-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-second-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-second-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPathAny struct {
	*ygot.NodePath
}

// LspFirstWaitInterval (leaf): Time interval in milliseconds that specifies the first LSP generation
// delay.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-first-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-first-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath) LspFirstWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-first-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspFirstWaitInterval (leaf): Time interval in milliseconds that specifies the first LSP generation
// delay.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-first-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-first-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny) LspFirstWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-first-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspMaxWaitInterval (leaf): Time interval in milliseconds that specifies max interval between
// two consecutive occurrences of an LSP being generated.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-max-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-max-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath) LspMaxWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-max-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspMaxWaitInterval (leaf): Time interval in milliseconds that specifies max interval between
// two consecutive occurrences of an LSP being generated.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-max-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-max-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny) LspMaxWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-max-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspSecondWaitInterval (leaf): Time interval in milliseconds that specifies the millisecond LSP
// generation delay.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-second-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-second-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath) LspSecondWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-second-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspSecondWaitInterval (leaf): Time interval in milliseconds that specifies the millisecond LSP
// generation delay.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-second-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-second-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny) LspSecondWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-second-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_Timers_SpfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_SpfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-first-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-first-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-hold-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-hold-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-second-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-second-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPathAny struct {
	*ygot.NodePath
}

// SpfFirstInterval (leaf): Time interval in milliseconds between the
// detection of topology change and when the SPF algorithm runs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/spf-first-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-first-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath) SpfFirstInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "spf-first-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfFirstInterval (leaf): Time interval in milliseconds between the
// detection of topology change and when the SPF algorithm runs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/spf-first-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-first-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny) SpfFirstInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "spf-first-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfHoldInterval (leaf): SPF Hold Down time interval in milliseconds.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/spf-hold-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-hold-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath) SpfHoldInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "spf-hold-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfHoldInterval (leaf): SPF Hold Down time interval in milliseconds.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/spf-hold-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-hold-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny) SpfHoldInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "spf-hold-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfSecondInterval (leaf): Time interval in milliseconds between the first and second
// SPF calculation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/spf-second-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-second-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath) SpfSecondInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "spf-second-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfSecondInterval (leaf): Time interval in milliseconds between the first and second
// SPF calculation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/spf-second-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-second-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny) SpfSecondInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "spf-second-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_TransportPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/transport YANG schema element.
type NetworkInstance_Protocol_Isis_Global_TransportPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_TransportPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/transport YANG schema element.
type NetworkInstance_Protocol_Isis_Global_TransportPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/transport/config/lsp-mtu-size YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/transport/config/lsp-mtu-size YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePathAny struct {
	*ygot.NodePath
}

// LspMtuSize (leaf): The maximum size in bytes of an IS-IS Link state PDU.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-mtu-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/transport/config/lsp-mtu-size"
func (n *NetworkInstance_Protocol_Isis_Global_TransportPath) LspMtuSize() *NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePath {
	return &NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-mtu-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspMtuSize (leaf): The maximum size in bytes of an IS-IS Link state PDU.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-mtu-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/transport/config/lsp-mtu-size"
func (n *NetworkInstance_Protocol_Isis_Global_TransportPathAny) LspMtuSize() *NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-mtu-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Isis_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Isis_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/circuit-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/circuit-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_HelloPaddingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/hello-padding YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_HelloPaddingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_HelloPaddingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/hello-padding YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_HelloPaddingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_PassivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/passive YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_PassivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_PassivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/passive YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_PassivePathAny struct {
	*ygot.NodePath
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePath) AfAny() *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) AfAny() *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePath) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePath) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPath {
	return &NetworkInstance_Protocol_Isis_Interface_AfPath{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Authentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Authentication() *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath {
	return &NetworkInstance_Protocol_Isis_Interface_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Authentication() *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bfd (container): This container defines BFD.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Bfd() *NetworkInstance_Protocol_Isis_Interface_BfdPath {
	return &NetworkInstance_Protocol_Isis_Interface_BfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bfd (container): This container defines BFD.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Bfd() *NetworkInstance_Protocol_Isis_Interface_BfdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_BfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// CircuitCounters (container): This container defines state information for ISIS circuit counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "circuit-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) CircuitCounters() *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"circuit-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// CircuitCounters (container): This container defines state information for ISIS circuit counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "circuit-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) CircuitCounters() *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"circuit-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// CircuitType (leaf): ISIS circuit type (p2p, broadcast).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/circuit-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/circuit-type"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) CircuitType() *NetworkInstance_Protocol_Isis_Interface_CircuitTypePath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "circuit-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// CircuitType (leaf): ISIS circuit type (p2p, broadcast).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/circuit-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/circuit-type"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) CircuitType() *NetworkInstance_Protocol_Isis_Interface_CircuitTypePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "circuit-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) EnableBfd() *NetworkInstance_Protocol_Isis_Interface_EnableBfdPath {
	return &NetworkInstance_Protocol_Isis_Interface_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) EnableBfd() *NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/enabled"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Enabled() *NetworkInstance_Protocol_Isis_Interface_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/enabled"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloPadding (leaf): Controls the padding type for IS-IS Hello PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-padding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/hello-padding"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) HelloPadding() *NetworkInstance_Protocol_Isis_Interface_HelloPaddingPath {
	return &NetworkInstance_Protocol_Isis_Interface_HelloPaddingPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-padding"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloPadding (leaf): Controls the padding type for IS-IS Hello PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-padding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/hello-padding"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) HelloPadding() *NetworkInstance_Protocol_Isis_Interface_HelloPaddingPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_HelloPaddingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-padding"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Interface for which ISIS configuration is to be applied.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/interface-id"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) InterfaceId() *NetworkInstance_Protocol_Isis_Interface_InterfaceIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Interface for which ISIS configuration is to be applied.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/interface-id"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) InterfaceId() *NetworkInstance_Protocol_Isis_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) InterfaceRef() *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) InterfaceRef() *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelAny (list): Configuration and operational state parameters related to a
// particular level on an IS-IS enabled interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level"
// LevelNumber (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_InterfacePath) LevelAny() *NetworkInstance_Protocol_Isis_Interface_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": "*"},
			n,
		),
	}
}

// LevelAny (list): Configuration and operational state parameters related to a
// particular level on an IS-IS enabled interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level"
// LevelNumber (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) LevelAny() *NetworkInstance_Protocol_Isis_Interface_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": "*"},
			n,
		),
	}
}

// Level (list): Configuration and operational state parameters related to a
// particular level on an IS-IS enabled interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level"
// LevelNumber: uint8
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Level(LevelNumber uint8) *NetworkInstance_Protocol_Isis_Interface_LevelPath {
	return &NetworkInstance_Protocol_Isis_Interface_LevelPath{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": LevelNumber},
			n,
		),
	}
}

// Level (list): Configuration and operational state parameters related to a
// particular level on an IS-IS enabled interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level"
// LevelNumber: uint8
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Level(LevelNumber uint8) *NetworkInstance_Protocol_Isis_Interface_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": LevelNumber},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state relating to MPLS-related
// features in IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Mpls() *NetworkInstance_Protocol_Isis_Interface_MplsPath {
	return &NetworkInstance_Protocol_Isis_Interface_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state relating to MPLS-related
// features in IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Mpls() *NetworkInstance_Protocol_Isis_Interface_MplsPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): When set to true, the referenced interface is a passive interface
// such that it is not eligible to establish adjacencies with other
// systems, but is advertised into the IS-IS topology.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/passive"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Passive() *NetworkInstance_Protocol_Isis_Interface_PassivePath {
	return &NetworkInstance_Protocol_Isis_Interface_PassivePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): When set to true, the referenced interface is a passive interface
// such that it is not eligible to establish adjacencies with other
// systems, but is advertised into the IS-IS topology.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/passive"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Passive() *NetworkInstance_Protocol_Isis_Interface_PassivePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_PassivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container describes ISIS interface timers configuration
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Timers() *NetworkInstance_Protocol_Isis_Interface_TimersPath {
	return &NetworkInstance_Protocol_Isis_Interface_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container describes ISIS interface timers configuration
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Timers() *NetworkInstance_Protocol_Isis_Interface_TimersPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_AfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_AfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_AfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_AfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPath) AfiName() *NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPathAny) AfiName() *NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Af_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Af_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Af_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Af_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/safi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPath) SafiName() *NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePath {
	return &NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/safi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPathAny) SafiName() *NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPathAny struct {
	*ygot.NodePath
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) AuthMode() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) AuthMode() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-password"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) AuthPassword() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-password"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) AuthPassword() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-type"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) AuthType() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-type"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) AuthType() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enabled or disable ISIS Hello authentication. Hello authentication
// is used on a per-interface basis to authenticate adjacencies on the
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enabled or disable ISIS Hello authentication. Hello authentication
// is used on a per-interface basis to authenticate adjacencies on the
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a keychain that should be used for hello authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/keychain"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) Keychain() *NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a keychain that should be used for hello authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/keychain"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) Keychain() *NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_BfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_BfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_BfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_BfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd/config/bfd-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd/config/bfd-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPathAny struct {
	*ygot.NodePath
}

// BfdTlv (leaf): When set to true, BFD TLV is used. This enables support for the IS-IS
// BFD TLV options, which specify that a BFD session must be established
// before an IS-IS adjacency can transition to the established state.
// This option should be enabled on all IS-IS neighbors on a shared
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/bfd-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd/config/bfd-tlv"
func (n *NetworkInstance_Protocol_Isis_Interface_BfdPath) BfdTlv() *NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPath {
	return &NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "bfd-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// BfdTlv (leaf): When set to true, BFD TLV is used. This enables support for the IS-IS
// BFD TLV options, which specify that a BFD session must be established
// before an IS-IS adjacency can transition to the established state.
// This option should be enabled on all IS-IS neighbors on a shared
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/bfd-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd/config/bfd-tlv"
func (n *NetworkInstance_Protocol_Isis_Interface_BfdPathAny) BfdTlv() *NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "bfd-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_LevelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_LevelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_LevelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_LevelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/level-number YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/level-number YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PassivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/passive YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PassivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PassivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/passive YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PassivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PriorityPathAny struct {
	*ygot.NodePath
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) AfAny() *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) AfAny() *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPath{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloAuthentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) HelloAuthentication() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"hello-authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloAuthentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) HelloAuthentication() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelNumber (leaf): ISIS level number(level-1, level-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/level-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/level-number"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) LevelNumber() *NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "level-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelNumber (leaf): ISIS level number(level-1, level-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/level-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/level-number"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) LevelNumber() *NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "level-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// PacketCounters (container): This container defines ISIS interface packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "packet-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) PacketCounters() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"packet-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// PacketCounters (container): This container defines ISIS interface packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "packet-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) PacketCounters() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"packet-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): ISIS passive interface admin enable/disable function.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/passive"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Passive() *NetworkInstance_Protocol_Isis_Interface_Level_PassivePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PassivePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): ISIS passive interface admin enable/disable function.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/passive"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Passive() *NetworkInstance_Protocol_Isis_Interface_Level_PassivePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PassivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): ISIS neighbor priority(LAN hello PDU only).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/priority"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Priority() *NetworkInstance_Protocol_Isis_Interface_Level_PriorityPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): ISIS neighbor priority(LAN hello PDU only).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/priority"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Priority() *NetworkInstance_Protocol_Isis_Interface_Level_PriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines ISIS timers.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Timers() *NetworkInstance_Protocol_Isis_Interface_Level_TimersPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines ISIS timers.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Timers() *NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_AfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_AfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) AfiName() *NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) AfiName() *NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value(default=10).
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/metric"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) Metric() *NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value(default=10).
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/metric"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) Metric() *NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/safi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) SafiName() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/safi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) SafiName() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operatioanl state parameters relating to segment
// routing for an interface within the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) SegmentRouting() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operatioanl state parameters relating to segment
// routing for an interface within the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) SegmentRouting() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny struct {
	*ygot.NodePath
}

// AdjacencySidAny (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor (wildcarded): string
// SidId (wildcarded): [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": "*", "sid-id": "*"},
			n,
		),
	}
}

// AdjacencySidAny (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor (wildcarded): string
// SidId (wildcarded): [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": "*", "sid-id": "*"},
			n,
		),
	}
}

// AdjacencySidAnySidId (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor: string
// SidId (wildcarded): [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) AdjacencySidAnySidId(Neighbor string) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": Neighbor, "sid-id": "*"},
			n,
		),
	}
}

// AdjacencySidAnySidId (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor: string
// SidId (wildcarded): [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) AdjacencySidAnySidId(Neighbor string) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": Neighbor, "sid-id": "*"},
			n,
		),
	}
}

// AdjacencySidAnyNeighbor (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor (wildcarded): string
// SidId: [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) AdjacencySidAnyNeighbor(SidId oc.NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidId_Union) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": "*", "sid-id": SidId},
			n,
		),
	}
}

// AdjacencySidAnyNeighbor (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor (wildcarded): string
// SidId: [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) AdjacencySidAnyNeighbor(SidId oc.NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidId_Union) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": "*", "sid-id": SidId},
			n,
		),
	}
}

// AdjacencySid (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor: string
// SidId: [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) AdjacencySid(Neighbor string, SidId oc.NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidId_Union) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": Neighbor, "sid-id": SidId},
			n,
		),
	}
}

// AdjacencySid (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor: string
// SidId: [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) AdjacencySid(Neighbor string, SidId oc.NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidId_Union) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": Neighbor, "sid-id": SidId},
			n,
		),
	}
}

// PrefixSidAny (list): An IGP prefix that should have a segment routing IGP-Prefix SID
// allocated to it. The value of the SID is specified by the SID ID,
// as an absolute value. If the absolute value falls within the SRGB,
// the Global flag should be advertised by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) PrefixSidAny() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// PrefixSidAny (list): An IGP prefix that should have a segment routing IGP-Prefix SID
// allocated to it. The value of the SID is specified by the SID ID,
// as an absolute value. If the absolute value falls within the SRGB,
// the Global flag should be advertised by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) PrefixSidAny() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// PrefixSid (list): An IGP prefix that should have a segment routing IGP-Prefix SID
// allocated to it. The value of the SID is specified by the SID ID,
// as an absolute value. If the absolute value falls within the SRGB,
// the Global flag should be advertised by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) PrefixSid(Prefix string) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// PrefixSid (list): An IGP prefix that should have a segment routing IGP-Prefix SID
// allocated to it. The value of the SID is specified by the SID ID,
// as an absolute value. If the absolute value falls within the SRGB,
// the Global flag should be advertised by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) PrefixSid(Prefix string) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/group YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/group YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/protection-eligible YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/protection-eligible YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/sid-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/sid-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPathAny struct {
	*ygot.NodePath
}

// Group (leaf): When set to true, the Adj-SID is indicated to be part of a group, and
// the G flag is set to 1 in the corresponding advertisement in the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/group"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) Group() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): When set to true, the Adj-SID is indicated to be part of a group, and
// the G flag is set to 1 in the corresponding advertisement in the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/group"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) Group() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Neighbor (leaf): The remote system on the interface with which the Adj-SID is
// associated.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/neighbor"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) Neighbor() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "neighbor"},
			map[string]interface{}{},
			n,
		),
	}
}

// Neighbor (leaf): The remote system on the interface with which the Adj-SID is
// associated.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/neighbor"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) Neighbor() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "neighbor"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtectionEligible (leaf): Whether the Adj-SID should be considered to be eligible for protection
// using IP or MPLS FRR during a network failure. When this value is set to
// true, the B-flag of the Adj-SID is set to 1, and the local system should
// provide FRR paths for the associated label forwarding entry. When it is
// set to false, the local system must not provide FRR for the specified
// LFIB entry.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/protection-eligible"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/protection-eligible"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) ProtectionEligible() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "protection-eligible"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtectionEligible (leaf): Whether the Adj-SID should be considered to be eligible for protection
// using IP or MPLS FRR during a network failure. When this value is set to
// true, the B-flag of the Adj-SID is set to 1, and the local system should
// provide FRR paths for the associated label forwarding entry. When it is
// set to false, the local system must not provide FRR for the specified
// LFIB entry.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/protection-eligible"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/protection-eligible"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) ProtectionEligible() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "protection-eligible"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidId (leaf): The value of the Adj-SID to be advertised. Where a static SID
// identifier is specified, this should be advertised directly by the
// system. Where the DYNAMIC value is specified, this should be treated
// as a dynamically allocated value. When the MPLS data plane is in use
// the dynamic value should not fall within a reserved-label-block.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/sid-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/sid-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) SidId() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "sid-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidId (leaf): The value of the Adj-SID to be advertised. Where a static SID
// identifier is specified, this should be advertised directly by the
// system. Where the DYNAMIC value is specified, this should be treated
// as a dynamically allocated value. When the MPLS data plane is in use
// the dynamic value should not fall within a reserved-label-block.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/sid-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/sid-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) SidId() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "sid-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/label-options YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/label-options YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/sid-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/sid-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPathAny struct {
	*ygot.NodePath
}

// LabelOptions (leaf): The options associated with the IGP prefix SID for MPLS. The value
// of this leaf specifies the option that the SID should be advertised
// into the IGP with.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/label-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/label-options"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath) LabelOptions() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "label-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// LabelOptions (leaf): The options associated with the IGP prefix SID for MPLS. The value
// of this leaf specifies the option that the SID should be advertised
// into the IGP with.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/label-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/label-options"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny) LabelOptions() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "label-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The IP prefix for which the IGP prefix SID should be advertised. The
// value specified is a local prefix on the interface which is advertised
// into the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/prefix"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath) Prefix() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The IP prefix for which the IGP prefix SID should be advertised. The
// value specified is a local prefix on the interface which is advertised
// into the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/prefix"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny) Prefix() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidId (leaf): The Segment Identifier to be used when advertising the IGP Prefix SID.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/sid-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/sid-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath) SidId() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "sid-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidId (leaf): The Segment Identifier to be used when advertising the IGP Prefix SID.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/sid-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/sid-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny) SidId() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "sid-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPathAny struct {
	*ygot.NodePath
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) AuthMode() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) AuthMode() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-password"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) AuthPassword() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-password"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) AuthPassword() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-type"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) AuthType() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-type"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) AuthType() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enabled or disable ISIS Hello authentication. Hello authentication
// is used on a per-interface basis to authenticate adjacencies on the
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enabled or disable ISIS Hello authentication. Hello authentication
// is used on a per-interface basis to authenticate adjacencies on the
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a keychain that should be used for hello authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/keychain"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) Keychain() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a keychain that should be used for hello authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/keychain"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) Keychain() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny struct {
	*ygot.NodePath
}

// Csnp (container): Operational state parameters relating to CSNPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "csnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Csnp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath{
		NodePath: ygot.NewNodePath(
			[]string{"csnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Csnp (container): Operational state parameters relating to CSNPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "csnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Csnp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"csnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Esh (container): This container defines ESH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "esh"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Esh() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath{
		NodePath: ygot.NewNodePath(
			[]string{"esh"},
			map[string]interface{}{},
			n,
		),
	}
}

// Esh (container): This container defines ESH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "esh"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Esh() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"esh"},
			map[string]interface{}{},
			n,
		),
	}
}

// Iih (container): This container defines IIH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "iih"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Iih() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath{
		NodePath: ygot.NewNodePath(
			[]string{"iih"},
			map[string]interface{}{},
			n,
		),
	}
}

// Iih (container): This container defines IIH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "iih"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Iih() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"iih"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ish (container): This container defines ISH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ish"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Ish() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath{
		NodePath: ygot.NewNodePath(
			[]string{"ish"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ish (container): This container defines ISH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ish"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Ish() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ish"},
			map[string]interface{}{},
			n,
		),
	}
}

// Lsp (container): This container defines LSP packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Lsp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Lsp (container): This container defines LSP packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Lsp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Psnp (container): This container defines PSNP packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "psnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Psnp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath{
		NodePath: ygot.NewNodePath(
			[]string{"psnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Psnp (container): This container defines PSNP packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "psnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Psnp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"psnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Unknown (container): Operational state parameters relating to IS-IS PDUs that are not
// otherwise classified - referred to as Unknown PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Unknown() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown"},
			map[string]interface{}{},
			n,
		),
	}
}

// Unknown (container): Operational state parameters relating to IS-IS PDUs that are not
// otherwise classified - referred to as Unknown PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Unknown() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/config/hello-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/config/hello-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/config/hello-multiplier YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/config/hello-multiplier YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPathAny struct {
	*ygot.NodePath
}

// HelloInterval (leaf): ISIS hello-interval value.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/config/hello-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_TimersPath) HelloInterval() *NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): ISIS hello-interval value.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/config/hello-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny) HelloInterval() *NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMultiplier (leaf): ISIS hello-multiplier value.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-multiplier"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/config/hello-multiplier"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_TimersPath) HelloMultiplier() *NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-multiplier"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMultiplier (leaf): ISIS hello-multiplier value.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-multiplier"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/config/hello-multiplier"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny) HelloMultiplier() *NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-multiplier"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_MplsPathAny struct {
	*ygot.NodePath
}

// IgpLdpSync (container): Configuration and operational state relating to synchronisation
// between the LDP and IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Isis_Interface_MplsPath) IgpLdpSync() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpLdpSync (container): Configuration and operational state relating to synchronisation
// between the LDP and IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Isis_Interface_MplsPathAny) IgpLdpSync() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/config/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/config/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, rely on IGP/LDP synchronization. IGP cost for
// link is maintained at max until LDP adjacencies are established
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, rely on IGP/LDP synchronization. IGP cost for
// link is maintained at max until LDP adjacencies are established
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): Specifies a delay, expressed in units of seconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/config/post-session-up-delay"
func (n *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath) PostSessionUpDelay() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): Specifies a delay, expressed in units of seconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/config/post-session-up-delay"
func (n *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny) PostSessionUpDelay() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/config/csnp-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/config/csnp-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/config/lsp-pacing-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/config/lsp-pacing-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPathAny struct {
	*ygot.NodePath
}

// CsnpInterval (leaf): The interval, specified in seconds, at which periodic CSNP packets
// should be transmitted by the local IS.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/csnp-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/config/csnp-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_TimersPath) CsnpInterval() *NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPath {
	return &NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "csnp-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// CsnpInterval (leaf): The interval, specified in seconds, at which periodic CSNP packets
// should be transmitted by the local IS.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/csnp-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/config/csnp-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_TimersPathAny) CsnpInterval() *NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "csnp-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspPacingInterval (leaf): The interval interval in milliseconds between the
// detection of topology change and when the SPF algorithm runs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-pacing-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/config/lsp-pacing-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_TimersPath) LspPacingInterval() *NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPath {
	return &NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-pacing-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspPacingInterval (leaf): The interval interval in milliseconds between the
// detection of topology change and when the SPF algorithm runs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-pacing-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/config/lsp-pacing-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_TimersPathAny) LspPacingInterval() *NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-pacing-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_LevelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level YANG schema element.
type NetworkInstance_Protocol_Isis_LevelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_LevelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level YANG schema element.
type NetworkInstance_Protocol_Isis_LevelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/config/authentication-check YANG schema element.
type NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/config/authentication-check YANG schema element.
type NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_LevelNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/config/level-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_LevelNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_LevelNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/config/level-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_LevelNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_MetricStylePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/config/metric-style YANG schema element.
type NetworkInstance_Protocol_Isis_Level_MetricStylePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_MetricStylePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/config/metric-style YANG schema element.
type NetworkInstance_Protocol_Isis_Level_MetricStylePathAny struct {
	*ygot.NodePath
}

// Authentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication"
func (n *NetworkInstance_Protocol_Isis_LevelPath) Authentication() *NetworkInstance_Protocol_Isis_Level_AuthenticationPath {
	return &NetworkInstance_Protocol_Isis_Level_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) Authentication() *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny {
	return &NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationCheck (leaf): When set to true, reject all ISIS protocol PDUs that either have a mismatch
// in authentication-type or authentication-key.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-check"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/config/authentication-check"
func (n *NetworkInstance_Protocol_Isis_LevelPath) AuthenticationCheck() *NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPath {
	return &NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-check"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationCheck (leaf): When set to true, reject all ISIS protocol PDUs that either have a mismatch
// in authentication-type or authentication-key.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-check"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/config/authentication-check"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) AuthenticationCheck() *NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPathAny {
	return &NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-check"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/config/enabled"
func (n *NetworkInstance_Protocol_Isis_LevelPath) Enabled() *NetworkInstance_Protocol_Isis_Level_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Level_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/config/enabled"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) Enabled() *NetworkInstance_Protocol_Isis_Level_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Level_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelNumber (leaf): ISIS level number (level-1, level-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/level-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/config/level-number"
func (n *NetworkInstance_Protocol_Isis_LevelPath) LevelNumber() *NetworkInstance_Protocol_Isis_Level_LevelNumberPath {
	return &NetworkInstance_Protocol_Isis_Level_LevelNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "level-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelNumber (leaf): ISIS level number (level-1, level-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/level-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/config/level-number"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) LevelNumber() *NetworkInstance_Protocol_Isis_Level_LevelNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Level_LevelNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "level-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricStyle (leaf): ISIS metric style types(narrow, wide).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric-style"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/config/metric-style"
func (n *NetworkInstance_Protocol_Isis_LevelPath) MetricStyle() *NetworkInstance_Protocol_Isis_Level_MetricStylePath {
	return &NetworkInstance_Protocol_Isis_Level_MetricStylePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric-style"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricStyle (leaf): ISIS metric style types(narrow, wide).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric-style"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/config/metric-style"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) MetricStyle() *NetworkInstance_Protocol_Isis_Level_MetricStylePathAny {
	return &NetworkInstance_Protocol_Isis_Level_MetricStylePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric-style"},
			map[string]interface{}{},
			n,
		),
	}
}

// RoutePreference (container): This container defines Administrative Distance (or preference)
// assigned to ISIS routes (level1 internal, level2 internal, level1
// external, level2 external).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference"
func (n *NetworkInstance_Protocol_Isis_LevelPath) RoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreferencePath {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// RoutePreference (container): This container defines Administrative Distance (or preference)
// assigned to ISIS routes (level1 internal, level2 internal, level1
// external, level2 external).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) RoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemLevelCounters (container): This container defines ISIS system level counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "system-level-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters"
func (n *NetworkInstance_Protocol_Isis_LevelPath) SystemLevelCounters() *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"system-level-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemLevelCounters (container): This container defines ISIS system level counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "system-level-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) SystemLevelCounters() *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"system-level-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (container): This container defines ISIS TE.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering"
func (n *NetworkInstance_Protocol_Isis_LevelPath) TrafficEngineering() *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath{
		NodePath: ygot.NewNodePath(
			[]string{"traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (container): This container defines ISIS TE.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) TrafficEngineering() *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Level_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-csnp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-csnp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-psnp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-psnp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPathAny struct {
	*ygot.NodePath
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) AuthMode() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) AuthMode() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-password"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) AuthPassword() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-password"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) AuthPassword() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-type"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) AuthType() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-type"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) AuthType() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableCsnp (leaf): When this leaf is set to true, authentication is disabled for CSNP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-csnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-csnp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) DisableCsnp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-csnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableCsnp (leaf): When this leaf is set to true, authentication is disabled for CSNP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-csnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-csnp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) DisableCsnp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-csnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableLsp (leaf): When this leaf is set to true, authentication is disabled for LSP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) DisableLsp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableLsp (leaf): When this leaf is set to true, authentication is disabled for LSP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) DisableLsp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisablePsnp (leaf): When this leaf is set to true, authentication is disabled for PSNP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-psnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-psnp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) DisablePsnp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-psnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisablePsnp (leaf): When this leaf is set to true, authentication is disabled for PSNP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-psnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-psnp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) DisablePsnp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-psnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, authentication of IS-IS PSNP, CSNP and
// LSP packets is enabled using the specified authentication details in
// the sibling leaves.
//
// The sibling 'disable-<type>' leaves can be used to override the value
// of this leaf and disable authentication for a specific packet type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) Enabled() *NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, authentication of IS-IS PSNP, CSNP and
// LSP packets is enabled using the specified authentication details in
// the sibling leaves.
//
// The sibling 'disable-<type>' leaves can be used to override the value
// of this leaf and disable authentication for a specific packet type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) Enabled() *NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to the keychain that should be used for authenticating IS-IS
// packets - the keychain may contain either a simple password, or
// HMAC-MD5 key that is used for authenticating CSNP, PSNP and LSP packets
// within the specified IS-IS level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/keychain"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) Keychain() *NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to the keychain that should be used for authenticating IS-IS
// packets - the keychain may contain either a simple password, or
// HMAC-MD5 key that is used for authenticating CSNP, PSNP and LSP packets
// within the specified IS-IS level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/keychain"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) Keychain() *NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_RoutePreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/config/external-route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/config/external-route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/config/internal-route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/config/internal-route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePathAny struct {
	*ygot.NodePath
}

// ExternalRoutePreference (leaf): Administrative Distance (preference) for external ISIS routes.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/external-route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/config/external-route-preference"
func (n *NetworkInstance_Protocol_Isis_Level_RoutePreferencePath) ExternalRoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePath {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "external-route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExternalRoutePreference (leaf): Administrative Distance (preference) for external ISIS routes.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/external-route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/config/external-route-preference"
func (n *NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny) ExternalRoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePathAny {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "external-route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalRoutePreference (leaf): Administrative Distance (preference) for internal ISIS routes.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/internal-route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/config/internal-route-preference"
func (n *NetworkInstance_Protocol_Isis_Level_RoutePreferencePath) InternalRoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePath {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "internal-route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalRoutePreference (leaf): Administrative Distance (preference) for internal ISIS routes.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/internal-route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/config/internal-route-preference"
func (n *NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny) InternalRoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePathAny {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "internal-route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/ipv4-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/ipv4-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/ipv6-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/ipv6-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath) Enabled() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny) Enabled() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4RouterId (leaf): IPv4 MPLS Traffic Engineering Router-ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ipv4-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/ipv4-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath) Ipv4RouterId() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ipv4-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4RouterId (leaf): IPv4 MPLS Traffic Engineering Router-ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ipv4-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/ipv4-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny) Ipv4RouterId() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ipv4-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6RouterId (leaf): IPv6 MPLS Traffic Engineering Router-ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ipv6-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/ipv6-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath) Ipv6RouterId() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ipv6-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6RouterId (leaf): IPv6 MPLS Traffic Engineering Router-ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ipv6-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/ipv6-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny) Ipv6RouterId() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ipv6-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2 YANG schema element.
type NetworkInstance_Protocol_Ospfv2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2 YANG schema element.
type NetworkInstance_Protocol_Ospfv2PathAny struct {
	*ygot.NodePath
}

// AreaAny (list): The OSPFv2 areas within which the local system exists
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "areas/area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area"
// Identifier (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2Path) AreaAny() *NetworkInstance_Protocol_Ospfv2_AreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_AreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"areas", "area"},
			map[string]interface{}{"identifier": "*"},
			n,
		),
	}
}

// AreaAny (list): The OSPFv2 areas within which the local system exists
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "areas/area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area"
// Identifier (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2PathAny) AreaAny() *NetworkInstance_Protocol_Ospfv2_AreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_AreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"areas", "area"},
			map[string]interface{}{"identifier": "*"},
			n,
		),
	}
}

// Area (list): The OSPFv2 areas within which the local system exists
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "areas/area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area"
// Identifier: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2Path) Area(Identifier oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_AreaPath {
	return &NetworkInstance_Protocol_Ospfv2_AreaPath{
		NodePath: ygot.NewNodePath(
			[]string{"areas", "area"},
			map[string]interface{}{"identifier": Identifier},
			n,
		),
	}
}

// Area (list): The OSPFv2 areas within which the local system exists
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "areas/area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area"
// Identifier: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2PathAny) Area(Identifier oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_AreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_AreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"areas", "area"},
			map[string]interface{}{"identifier": Identifier},
			n,
		),
	}
}

// Global (container): Configuration and operational state parameters for settings
// that are global to the OSPFv2 instance
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global"
func (n *NetworkInstance_Protocol_Ospfv2Path) Global() *NetworkInstance_Protocol_Ospfv2_GlobalPath {
	return &NetworkInstance_Protocol_Ospfv2_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): Configuration and operational state parameters for settings
// that are global to the OSPFv2 instance
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global"
func (n *NetworkInstance_Protocol_Ospfv2PathAny) Global() *NetworkInstance_Protocol_Ospfv2_GlobalPathAny {
	return &NetworkInstance_Protocol_Ospfv2_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_AreaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_AreaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_AreaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_AreaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_IdentifierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/config/identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_IdentifierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_IdentifierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/config/identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_IdentifierPathAny struct {
	*ygot.NodePath
}

// Identifier (leaf): An identifier for the OSPFv2 area - described as either a
// 32-bit unsigned integer, or a dotted-quad
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/config/identifier"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) Identifier() *NetworkInstance_Protocol_Ospfv2_Area_IdentifierPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_IdentifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// Identifier (leaf): An identifier for the OSPFv2 area - described as either a
// 32-bit unsigned integer, or a dotted-quad
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/config/identifier"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) Identifier() *NetworkInstance_Protocol_Ospfv2_Area_IdentifierPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_IdentifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): List of interfaces which are enabled within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface"
// Id (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) InterfaceAny() *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): List of interfaces which are enabled within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface"
// Id (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) InterfaceAny() *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Interface (list): List of interfaces which are enabled within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface"
// Id: string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) Interface(Id string) *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Interface (list): List of interfaces which are enabled within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface"
// Id: string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) Interface(Id string) *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state parameters for OSPFv2
// extensions relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) Mpls() *NetworkInstance_Protocol_Ospfv2_Area_MplsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state parameters for OSPFv2
// extensions relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) Mpls() *NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// VirtualLinkAny (list): Configuration and state parameters relating to a
// virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "virtual-links/virtual-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link"
// RemoteRouterId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) VirtualLinkAny() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-links", "virtual-link"},
			map[string]interface{}{"remote-router-id": "*"},
			n,
		),
	}
}

// VirtualLinkAny (list): Configuration and state parameters relating to a
// virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "virtual-links/virtual-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link"
// RemoteRouterId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) VirtualLinkAny() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-links", "virtual-link"},
			map[string]interface{}{"remote-router-id": "*"},
			n,
		),
	}
}

// VirtualLink (list): Configuration and state parameters relating to a
// virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "virtual-links/virtual-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link"
// RemoteRouterId: string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) VirtualLink(RemoteRouterId string) *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-links", "virtual-link"},
			map[string]interface{}{"remote-router-id": RemoteRouterId},
			n,
		),
	}
}

// VirtualLink (list): Configuration and state parameters relating to a
// virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "virtual-links/virtual-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link"
// RemoteRouterId: string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) VirtualLink(RemoteRouterId string) *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-links", "virtual-link"},
			map[string]interface{}{"remote-router-id": RemoteRouterId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/authentication-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/authentication-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/hide-network YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/hide-network YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/multi-area-adjacency-primary YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/multi-area-adjacency-primary YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/network-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/network-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/passive YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/passive YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPathAny struct {
	*ygot.NodePath
}

// AuthenticationType (leaf): The type of authentication that should be used on this
// interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/authentication-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) AuthenticationType() *NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationType (leaf): The type of authentication that should be used on this
// interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/authentication-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) AuthenticationType() *NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) EnableBfd() *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) EnableBfd() *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideNetwork (leaf): When this leaf is set to true, the network connected to
// the interface should be hidden from OSPFv2 advertisements
// per the procedure described in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hide-network"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/hide-network"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) HideNetwork() *NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hide-network"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideNetwork (leaf): When this leaf is set to true, the network connected to
// the interface should be hidden from OSPFv2 advertisements
// per the procedure described in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hide-network"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/hide-network"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) HideNetwork() *NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hide-network"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): An operator-specified string utilised to uniquely
// reference this interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Id() *NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): An operator-specified string utilised to uniquely
// reference this interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Id() *NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) InterfaceRef() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) InterfaceRef() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsaFilter (container): OSPFv2 parameters relating to filtering of LSAs to
// neighbors the specified interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-filter"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) LsaFilter() *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-filter"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsaFilter (container): OSPFv2 parameters relating to filtering of LSAs to
// neighbors the specified interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-filter"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) LsaFilter() *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-filter"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric for the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric for the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state parameters for
// OSPFv2 extensions related to MPLS on the interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Mpls() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state parameters for
// OSPFv2 extensions related to MPLS on the interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Mpls() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiAreaAdjacencyPrimary (leaf): When the specified interface is included in more than one
// area's configuration, this leaf marks whether the area should
// be considered the primary (when the value is true). In the
// case that this value is false, the area is considered a
// secondary area.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multi-area-adjacency-primary"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/multi-area-adjacency-primary"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) MultiAreaAdjacencyPrimary() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multi-area-adjacency-primary"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiAreaAdjacencyPrimary (leaf): When the specified interface is included in more than one
// area's configuration, this leaf marks whether the area should
// be considered the primary (when the value is true). In the
// case that this value is false, the area is considered a
// secondary area.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multi-area-adjacency-primary"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/multi-area-adjacency-primary"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) MultiAreaAdjacencyPrimary() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multi-area-adjacency-primary"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAny (list): A neighbor with which an OSPFv2 adjacency has been
// established within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor"
// RouterId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) NeighborAny() *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"router-id": "*"},
			n,
		),
	}
}

// NeighborAny (list): A neighbor with which an OSPFv2 adjacency has been
// established within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor"
// RouterId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) NeighborAny() *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"router-id": "*"},
			n,
		),
	}
}

// Neighbor (list): A neighbor with which an OSPFv2 adjacency has been
// established within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor"
// RouterId: string
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Neighbor(RouterId string) *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"router-id": RouterId},
			n,
		),
	}
}

// Neighbor (list): A neighbor with which an OSPFv2 adjacency has been
// established within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor"
// RouterId: string
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Neighbor(RouterId string) *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"router-id": RouterId},
			n,
		),
	}
}

// NetworkType (leaf): The type of network that OSPFv2 should use for the specified
// interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/network-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/network-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) NetworkType() *NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "network-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkType (leaf): The type of network that OSPFv2 should use for the specified
// interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/network-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/network-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) NetworkType() *NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "network-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): When this leaf is set to true, the interface should be
// advertised within the OSPF area but OSPF adjacencies should
// not be established over the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/passive"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Passive() *NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): When this leaf is set to true, the interface should be
// advertised within the OSPF area but OSPF adjacencies should
// not be established over the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/passive"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Passive() *NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The local system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The local system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Timers relating to OSPFv2 on the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Timers() *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Timers relating to OSPFv2 on the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Timers() *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter/config/all YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter/config/all YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPathAny struct {
	*ygot.NodePath
}

// All (leaf): When this leaf is set to true, all LSAs should be
// filtered to the neighbours with whom adjacencies are
// formed on the interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/all"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter/config/all"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath) All() *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "all"},
			map[string]interface{}{},
			n,
		),
	}
}

// All (leaf): When this leaf is set to true, all LSAs should be
// filtered to the neighbours with whom adjacencies are
// formed on the interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/all"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter/config/all"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny) All() *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "all"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/config/traffic-engineering-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/config/traffic-engineering-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPathAny struct {
	*ygot.NodePath
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringMetric (leaf): A link metric that should only be considered for traffic
// engineering purposes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/traffic-engineering-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/config/traffic-engineering-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath) TrafficEngineeringMetric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "traffic-engineering-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringMetric (leaf): A link metric that should only be considered for traffic
// engineering purposes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/traffic-engineering-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/config/traffic-engineering-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny) TrafficEngineeringMetric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "traffic-engineering-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/config/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/config/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/config/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/config/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/config/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/config/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/config/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/config/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/config/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/config/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/config/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/config/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): The metric that should be considered to the remote neighbor
// over this interface. This configuration is only applicable
// for multiple-access networks
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/config/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric that should be considered to the remote neighbor
// over this interface. This configuration is only applicable
// for multiple-access networks
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/config/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): The router ID of the remote system.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/config/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) RouterId() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): The router ID of the remote system.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/config/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) RouterId() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/dead-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/dead-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/hello-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/hello-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/retransmission-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/retransmission-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPathAny struct {
	*ygot.NodePath
}

// DeadInterval (leaf): The number of seconds that the local system should let
// elapse before declaring a silent router down
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dead-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/dead-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath) DeadInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dead-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadInterval (leaf): The number of seconds that the local system should let
// elapse before declaring a silent router down
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dead-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/dead-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny) DeadInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dead-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): The number of seconds the local system waits between the
// transmission of subsequent Hello packets
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/hello-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath) HelloInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): The number of seconds the local system waits between the
// transmission of subsequent Hello packets
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/hello-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny) HelloInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmissionInterval (leaf): The number of seconds that the local system waits before
// retransmitting an unacknowledged LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/retransmission-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/retransmission-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath) RetransmissionInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "retransmission-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmissionInterval (leaf): The number of seconds that the local system waits before
// retransmitting an unacknowledged LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/retransmission-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/retransmission-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny) RetransmissionInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "retransmission-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/config/traffic-engineering-enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/config/traffic-engineering-enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny struct {
	*ygot.NodePath
}

// TrafficEngineeringEnabled (leaf): Specifies whether traffic engineering extensions should be
// advertised within the area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/traffic-engineering-enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/config/traffic-engineering-enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_MplsPath) TrafficEngineeringEnabled() *NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "traffic-engineering-enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringEnabled (leaf): Specifies whether traffic engineering extensions should be
// advertised within the area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/traffic-engineering-enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/config/traffic-engineering-enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny) TrafficEngineeringEnabled() *NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "traffic-engineering-enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/config/remote-router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/config/remote-router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny struct {
	*ygot.NodePath
}

// RemoteRouterId (leaf): The router ID of the device which terminates the remote end
// of the virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/remote-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/config/remote-router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) RemoteRouterId() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "remote-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteRouterId (leaf): The router ID of the device which terminates the remote end
// of the virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/remote-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/config/remote-router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) RemoteRouterId() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "remote-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global YANG schema element.
type NetworkInstance_Protocol_Ospfv2_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global YANG schema element.
type NetworkInstance_Protocol_Ospfv2_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/hide-transit-only-networks YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/hide-transit-only-networks YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/igp-shortcuts YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/igp-shortcuts YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/log-adjacency-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/log-adjacency-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/summary-route-cost-mode YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/summary-route-cost-mode YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny struct {
	*ygot.NodePath
}

// GracefulRestart (container): Configuration and operational state parameters for OSPFv2
// graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) GracefulRestart() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Configuration and operational state parameters for OSPFv2
// graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) GracefulRestart() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideTransitOnlyNetworks (leaf): When this leaf is set to true, do not advertise prefixes
// into OSPFv2 that correspond to transit interfaces, as per
// the behaviour discussed in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hide-transit-only-networks"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/hide-transit-only-networks"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) HideTransitOnlyNetworks() *NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hide-transit-only-networks"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideTransitOnlyNetworks (leaf): When this leaf is set to true, do not advertise prefixes
// into OSPFv2 that correspond to transit interfaces, as per
// the behaviour discussed in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hide-transit-only-networks"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/hide-transit-only-networks"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) HideTransitOnlyNetworks() *NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hide-transit-only-networks"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpShortcuts (leaf): When this leaf is set to true, OSPFv2 will route traffic to
// a remote system via any LSP to the system that is marked as
// shortcut eligible.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/igp-shortcuts"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/igp-shortcuts"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) IgpShortcuts() *NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "igp-shortcuts"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpShortcuts (leaf): When this leaf is set to true, OSPFv2 will route traffic to
// a remote system via any LSP to the system that is marked as
// shortcut eligible.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/igp-shortcuts"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/igp-shortcuts"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) IgpShortcuts() *NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "igp-shortcuts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterAreaPropagationPolicyAny (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [oc.UnionUint32, oc.UnionString]
// DstArea (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicyAny() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAny (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [oc.UnionUint32, oc.UnionString]
// DstArea (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicyAny() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnyDstArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [oc.UnionUint32, oc.UnionString]
// DstArea (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicyAnyDstArea(SrcArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnyDstArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [oc.UnionUint32, oc.UnionString]
// DstArea (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicyAnyDstArea(SrcArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnySrcArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [oc.UnionUint32, oc.UnionString]
// DstArea: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicyAnySrcArea(DstArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": DstArea},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnySrcArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [oc.UnionUint32, oc.UnionString]
// DstArea: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicyAnySrcArea(DstArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": DstArea},
			n,
		),
	}
}

// InterAreaPropagationPolicy (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [oc.UnionUint32, oc.UnionString]
// DstArea: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicy(SrcArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union, DstArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": DstArea},
			n,
		),
	}
}

// InterAreaPropagationPolicy (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [oc.UnionUint32, oc.UnionString]
// DstArea: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicy(SrcArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union, DstArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": DstArea},
			n,
		),
	}
}

// LogAdjacencyChanges (leaf): When this leaf is set to true, a log message will be
// generated when the state of an OSPFv2 neighbour changes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/log-adjacency-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/log-adjacency-changes"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) LogAdjacencyChanges() *NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "log-adjacency-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LogAdjacencyChanges (leaf): When this leaf is set to true, a log message will be
// generated when the state of an OSPFv2 neighbour changes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/log-adjacency-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/log-adjacency-changes"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) LogAdjacencyChanges() *NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "log-adjacency-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): OSPFv2 parameters relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) Mpls() *NetworkInstance_Protocol_Ospfv2_Global_MplsPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): OSPFv2 parameters relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) Mpls() *NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): A 32-bit number represented as a dotted quad assigned to
// each router running the OSPFv2 protocol. This number should
// be unique within the autonomous system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) RouterId() *NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): A 32-bit number represented as a dotted quad assigned to
// each router running the OSPFv2 protocol. This number should
// be unique within the autonomous system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) RouterId() *NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SummaryRouteCostMode (leaf): Specify how costs for the summary routes should be specified
// as per the behaviour in the original OSPF specification
// RFC1583, or alternatively whether the revised behaviour
// described in RFC2328 should be utilised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/summary-route-cost-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/summary-route-cost-mode"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) SummaryRouteCostMode() *NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath {
	return &NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "summary-route-cost-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// SummaryRouteCostMode (leaf): Specify how costs for the summary routes should be specified
// as per the behaviour in the original OSPF specification
// RFC1583, or alternatively whether the revised behaviour
// described in RFC2328 should be utilised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/summary-route-cost-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/summary-route-cost-mode"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) SummaryRouteCostMode() *NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "summary-route-cost-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Configuration and operational state parameters for OSPFv2
// timers
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) Timers() *NetworkInstance_Protocol_Ospfv2_Global_TimersPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Configuration and operational state parameters for OSPFv2
// timers
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) Timers() *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When the value of this leaf is set to true, graceful restart
// is enabled on the local system. In this case, the system will
// use Grace-LSAs to signal that it is restarting to its
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When the value of this leaf is set to true, graceful restart
// is enabled on the local system. In this case, the system will
// use Grace-LSAs to signal that it is restarting to its
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Operate graceful-restart only in helper mode. When this leaf
// is set to true, the local system does not use Grace-LSAs to
// indicate that it is restarting, but will accept Grace-LSAs
// from remote systems, and suppress withdrawl of adjacencies
// of the system for the grace period specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath) HelperOnly() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Operate graceful-restart only in helper mode. When this leaf
// is set to true, the local system does not use Grace-LSAs to
// indicate that it is restarting, but will accept Grace-LSAs
// from remote systems, and suppress withdrawl of adjacencies
// of the system for the grace period specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny) HelperOnly() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/dst-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/dst-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/src-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/src-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny struct {
	*ygot.NodePath
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) DefaultImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstArea (leaf): The destination area to which prefixes are to be imported
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dst-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/dst-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) DstArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dst-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstArea (leaf): The destination area to which prefixes are to be imported
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dst-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/dst-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) DstArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dst-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) ImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) ImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcArea (leaf): The area from which prefixes are to be exported.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/src-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/src-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) SrcArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "src-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcArea (leaf): The area from which prefixes are to be exported.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/src-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/src-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) SrcArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "src-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/config/traffic-engineering-extensions YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/config/traffic-engineering-extensions YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny struct {
	*ygot.NodePath
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPath) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringExtensions (leaf): When this leaf is set to true, use traffic engineering
// extensions for OSPF to advertise TE parameters via type 10
// Opaque LSAs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/traffic-engineering-extensions"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/config/traffic-engineering-extensions"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPath) TrafficEngineeringExtensions() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "traffic-engineering-extensions"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringExtensions (leaf): When this leaf is set to true, use traffic engineering
// extensions for OSPF to advertise TE parameters via type 10
// Opaque LSAs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/traffic-engineering-extensions"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/config/traffic-engineering-extensions"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny) TrafficEngineeringExtensions() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "traffic-engineering-extensions"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/config/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/config/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/config/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/config/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/config/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/config/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/config/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/config/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny struct {
	*ygot.NodePath
}

// LsaGeneration (container): Configuration and operational state parameters relating
// to timers governing the generation of LSAs by the local
// system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPath) LsaGeneration() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsaGeneration (container): Configuration and operational state parameters relating
// to timers governing the generation of LSAs by the local
// system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny) LsaGeneration() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxMetric (container): Configuration and operational state parameters relating
// to setting the OSPFv2 maximum metric.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPath) MaxMetric() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxMetric (container): Configuration and operational state parameters relating
// to setting the OSPFv2 maximum metric.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny) MaxMetric() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): Configuration and operational state parameters relating
// to timers governing the operation of SPF runs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPath) Spf() *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): Configuration and operational state parameters relating
// to timers governing the operation of SPF runs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny) Spf() *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/config/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/config/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/config/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/config/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny struct {
	*ygot.NodePath
}

// InitialDelay (leaf): The value of this leaf specifies the time between the first
// time an LSA is generated and advertised and the subsequent
// generation of that LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/config/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// InitialDelay (leaf): The value of this leaf specifies the time between the first
// time an LSA is generated and advertised and the subsequent
// generation of that LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/config/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum time between the
// generation of an LSA and the subsequent re-generation of that
// LSA. This value is used in implementations that support
// increasing delay between generation of an LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/config/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum time between the
// generation of an LSA and the subsequent re-generation of that
// LSA. This value is used in implementations that support
// increasing delay between generation of an LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/config/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/include YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/include YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/set YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/set YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/timeout YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/timeout YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/trigger YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/trigger YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny struct {
	*ygot.NodePath
}

// Include (leaf-list): By default, the maximum metric is advertised for all
// non-stub interfaces of a device. When identities are
// specified within this leaf-list, additional entities
// are also advertised with the maximum metric according
// to the values within the list.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/include"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/include"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Include() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "include"},
			map[string]interface{}{},
			n,
		),
	}
}

// Include (leaf-list): By default, the maximum metric is advertised for all
// non-stub interfaces of a device. When identities are
// specified within this leaf-list, additional entities
// are also advertised with the maximum metric according
// to the values within the list.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/include"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/include"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Include() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "include"},
			map[string]interface{}{},
			n,
		),
	}
}

// Set (leaf): When this leaf is set to true, all non-stub interfaces of
// the local system are advertised with the maximum metric,
// such that the router does not act as a transit system,
// (similarly to the IS-IS overload functionality).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/set"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Set() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set"},
			map[string]interface{}{},
			n,
		),
	}
}

// Set (leaf): When this leaf is set to true, all non-stub interfaces of
// the local system are advertised with the maximum metric,
// such that the router does not act as a transit system,
// (similarly to the IS-IS overload functionality).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/set"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Set() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timeout (leaf): The delay, in seconds, after which the advertisement of
// entities with the maximum metric should be cleared, and
// the system reverts to the default, or configured, metrics.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/timeout"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/timeout"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Timeout() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timeout (leaf): The delay, in seconds, after which the advertisement of
// entities with the maximum metric should be cleared, and
// the system reverts to the default, or configured, metrics.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/timeout"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/timeout"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Timeout() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// Trigger (leaf-list): By default, the maximum metric is only advertised
// when the max-metric/set leaf is specified as true.
// In the case that identities are specified within this
// list, they provide additional triggers (e.g., system
// boot) that may cause the max-metric to be set. In this
// case, the system should still honour the timeout specified
// by the max-metric/timeout leaf, and clear the max-metric
// advertisements after the expiration of this timer.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/trigger"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Trigger() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// Trigger (leaf-list): By default, the maximum metric is only advertised
// when the max-metric/set leaf is specified as true.
// In the case that identities are specified within this
// list, they provide additional triggers (e.g., system
// boot) that may cause the max-metric to be set. In this
// case, the system should still honour the timeout specified
// by the max-metric/timeout leaf, and clear the max-metric
// advertisements after the expiration of this timer.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/trigger"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Trigger() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/config/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/config/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/config/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/config/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny struct {
	*ygot.NodePath
}

// InitialDelay (leaf): The value of this leaf specifies the time between a change
// in topology being detected and the first run of the SPF
// algorithm.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/config/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// InitialDelay (leaf): The value of this leaf specifies the time between a change
// in topology being detected and the first run of the SPF
// algorithm.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/config/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum delay between
// a topology change being detected and the SPF algorithm
// running. This value is used for implementations that support
// increasing the wait time between SPF runs.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/config/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum delay between
// a topology change being detected and the SPF algorithm
// running. This value is used for implementations that support
// increasing the wait time between SPF runs.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/config/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_PimPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim YANG schema element.
type NetworkInstance_Protocol_PimPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_PimPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim YANG schema element.
type NetworkInstance_Protocol_PimPathAny struct {
	*ygot.NodePath
}

// Global (container): This container defines global PIM configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global"
func (n *NetworkInstance_Protocol_PimPath) Global() *NetworkInstance_Protocol_Pim_GlobalPath {
	return &NetworkInstance_Protocol_Pim_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): This container defines global PIM configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global"
func (n *NetworkInstance_Protocol_PimPathAny) Global() *NetworkInstance_Protocol_Pim_GlobalPathAny {
	return &NetworkInstance_Protocol_Pim_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_PimPath) InterfaceAny() *NetworkInstance_Protocol_Pim_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_PimPathAny) InterfaceAny() *NetworkInstance_Protocol_Pim_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_PimPath) Interface(InterfaceId string) *NetworkInstance_Protocol_Pim_InterfacePath {
	return &NetworkInstance_Protocol_Pim_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_PimPathAny) Interface(InterfaceId string) *NetworkInstance_Protocol_Pim_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global YANG schema element.
type NetworkInstance_Protocol_Pim_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global YANG schema element.
type NetworkInstance_Protocol_Pim_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/config/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/config/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny struct {
	*ygot.NodePath
}

// MaximumGroups (leaf): Limit the number of accepted (S, G) and (*, G)
// PIM join states on the network-instance.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/config/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_GlobalPath) MaximumGroups() *NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath {
	return &NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of accepted (S, G) and (*, G)
// PIM join states on the network-instance.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/config/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) MaximumGroups() *NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny {
	return &NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// RendezvousPointAny (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_GlobalPath) RendezvousPointAny() *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// RendezvousPointAny (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) RendezvousPointAny() *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// RendezvousPoint (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address: string
func (n *NetworkInstance_Protocol_Pim_GlobalPath) RendezvousPoint(Address string) *NetworkInstance_Protocol_Pim_Global_RendezvousPointPath {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPath{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// RendezvousPoint (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address: string
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) RendezvousPoint(Address string) *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm"
func (n *NetworkInstance_Protocol_Pim_GlobalPath) Ssm() *NetworkInstance_Protocol_Pim_Global_SsmPath {
	return &NetworkInstance_Protocol_Pim_Global_SsmPath{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm"
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) Ssm() *NetworkInstance_Protocol_Pim_Global_SsmPathAny {
	return &NetworkInstance_Protocol_Pim_Global_SsmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPointPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPointPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/config/address YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/config/address YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/config/multicast-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/config/multicast-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny struct {
	*ygot.NodePath
}

// Address (leaf): IPv4 address of rendezvous point.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/config/address"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPath) Address() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): IPv4 address of rendezvous point.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/config/address"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny) Address() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastGroups (leaf): List of multicast groups (multicast IP address ranges) for which
// this entry will be used as a rendezvous point. When not
// present the default is equivalent to all valid IP multicast
// addresses.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multicast-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/config/multicast-groups"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPath) MulticastGroups() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multicast-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastGroups (leaf): List of multicast groups (multicast IP address ranges) for which
// this entry will be used as a rendezvous point. When not
// present the default is equivalent to all valid IP multicast
// addresses.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multicast-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/config/multicast-groups"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny) MulticastGroups() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multicast-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Global_SsmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm YANG schema element.
type NetworkInstance_Protocol_Pim_Global_SsmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_SsmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm YANG schema element.
type NetworkInstance_Protocol_Pim_Global_SsmPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm/config/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm/config/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny struct {
	*ygot.NodePath
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm/config/ssm-ranges"
func (n *NetworkInstance_Protocol_Pim_Global_SsmPath) SsmRanges() *NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath {
	return &NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm/config/ssm-ranges"
func (n *NetworkInstance_Protocol_Pim_Global_SsmPathAny) SsmRanges() *NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Pim_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Pim_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BorderRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/border-router YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BorderRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/border-router YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BsrBorderPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/bsr-border YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BsrBorderPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/bsr-border YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DeadTimerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/dead-timer YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DeadTimerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/dead-timer YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DrPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/dr-priority YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DrPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/dr-priority YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/hello-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/hello-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/join-prune-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/join-prune-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_ModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/mode YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_ModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_ModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/mode YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_ModePathAny struct {
	*ygot.NodePath
}

// BorderRouter (leaf): When set to true the interface is set as MBR (multicast border
// router) and allows multicast traffic from sources that are
// outside of the PIM domain.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/border-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/border-router"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) BorderRouter() *NetworkInstance_Protocol_Pim_Interface_BorderRouterPath {
	return &NetworkInstance_Protocol_Pim_Interface_BorderRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "border-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// BorderRouter (leaf): When set to true the interface is set as MBR (multicast border
// router) and allows multicast traffic from sources that are
// outside of the PIM domain.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/border-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/border-router"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) BorderRouter() *NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "border-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// BsrBorder (leaf): When set to true the device will not send bootstrap router
// messages over this interface. By default these are transmitted
// over all PIM sparse mode (PIM-SM) enabled interfaces.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/bsr-border"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/bsr-border"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) BsrBorder() *NetworkInstance_Protocol_Pim_Interface_BsrBorderPath {
	return &NetworkInstance_Protocol_Pim_Interface_BsrBorderPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "bsr-border"},
			map[string]interface{}{},
			n,
		),
	}
}

// BsrBorder (leaf): When set to true the device will not send bootstrap router
// messages over this interface. By default these are transmitted
// over all PIM sparse mode (PIM-SM) enabled interfaces.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/bsr-border"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/bsr-border"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) BsrBorder() *NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "bsr-border"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTimer (leaf): Number of missed hello messages after which a neighbor is
// expired.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dead-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/dead-timer"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) DeadTimer() *NetworkInstance_Protocol_Pim_Interface_DeadTimerPath {
	return &NetworkInstance_Protocol_Pim_Interface_DeadTimerPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dead-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTimer (leaf): Number of missed hello messages after which a neighbor is
// expired.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dead-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/dead-timer"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) DeadTimer() *NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dead-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// DrPriority (leaf): The designated router priority of this interface. Larger always
// preferred.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dr-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/dr-priority"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) DrPriority() *NetworkInstance_Protocol_Pim_Interface_DrPriorityPath {
	return &NetworkInstance_Protocol_Pim_Interface_DrPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dr-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// DrPriority (leaf): The designated router priority of this interface. Larger always
// preferred.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dr-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/dr-priority"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) DrPriority() *NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dr-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) EnableBfd() *NetworkInstance_Protocol_Pim_Interface_EnableBfdPath {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) EnableBfd() *NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/enabled"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnabledPath {
	return &NetworkInstance_Protocol_Pim_Interface_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/enabled"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnabledPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Interval at which the router sends the PIM hello messages.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/hello-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) HelloInterval() *NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath {
	return &NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Interval at which the router sends the PIM hello messages.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/hello-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) HelloInterval() *NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which PIM is enabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/interface-id"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) InterfaceId() *NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which PIM is enabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/interface-id"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) InterfaceId() *NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) InterfaceRef() *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) InterfaceRef() *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneInterval (leaf): Interval at which the router sends the PIM join/prune messages
// toward the upstream RPF neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/join-prune-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/join-prune-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) JoinPruneInterval() *NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath {
	return &NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "join-prune-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneInterval (leaf): Interval at which the router sends the PIM join/prune messages
// toward the upstream RPF neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/join-prune-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/join-prune-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) JoinPruneInterval() *NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "join-prune-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of (S, G) and (*, G) PIM
// entries accepted on the interface.
// This feature depends on hardware implementation.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) MaximumGroups() *NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath {
	return &NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of (S, G) and (*, G) PIM
// entries accepted on the interface.
// This feature depends on hardware implementation.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) MaximumGroups() *NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mode (leaf): PIM mode to use when delivering multicast traffic via this
// interface.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/mode"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) Mode() *NetworkInstance_Protocol_Pim_Interface_ModePath {
	return &NetworkInstance_Protocol_Pim_Interface_ModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mode (leaf): PIM mode to use when delivering multicast traffic via this
// interface.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/mode"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) Mode() *NetworkInstance_Protocol_Pim_Interface_ModePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_ModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Pim_Interface_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_StaticPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static YANG schema element.
type NetworkInstance_Protocol_StaticPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_StaticPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static YANG schema element.
type NetworkInstance_Protocol_StaticPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_DescriptionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/config/description YANG schema element.
type NetworkInstance_Protocol_Static_DescriptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_DescriptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/config/description YANG schema element.
type NetworkInstance_Protocol_Static_DescriptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/config/prefix YANG schema element.
type NetworkInstance_Protocol_Static_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/config/prefix YANG schema element.
type NetworkInstance_Protocol_Static_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_SetTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/config/set-tag YANG schema element.
type NetworkInstance_Protocol_Static_SetTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_SetTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/config/set-tag YANG schema element.
type NetworkInstance_Protocol_Static_SetTagPathAny struct {
	*ygot.NodePath
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/config/description"
func (n *NetworkInstance_Protocol_StaticPath) Description() *NetworkInstance_Protocol_Static_DescriptionPath {
	return &NetworkInstance_Protocol_Static_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/config/description"
func (n *NetworkInstance_Protocol_StaticPathAny) Description() *NetworkInstance_Protocol_Static_DescriptionPathAny {
	return &NetworkInstance_Protocol_Static_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHopAny (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index (wildcarded): string
func (n *NetworkInstance_Protocol_StaticPath) NextHopAny() *NetworkInstance_Protocol_Static_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHopAny (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index (wildcarded): string
func (n *NetworkInstance_Protocol_StaticPathAny) NextHopAny() *NetworkInstance_Protocol_Static_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHop (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index: string
func (n *NetworkInstance_Protocol_StaticPath) NextHop(Index string) *NetworkInstance_Protocol_Static_NextHopPath {
	return &NetworkInstance_Protocol_Static_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// NextHop (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index: string
func (n *NetworkInstance_Protocol_StaticPathAny) NextHop(Index string) *NetworkInstance_Protocol_Static_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Prefix (leaf): Destination prefix for the static route, either IPv4 or
// IPv6.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/config/prefix"
func (n *NetworkInstance_Protocol_StaticPath) Prefix() *NetworkInstance_Protocol_Static_PrefixPath {
	return &NetworkInstance_Protocol_Static_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): Destination prefix for the static route, either IPv4 or
// IPv6.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/config/prefix"
func (n *NetworkInstance_Protocol_StaticPathAny) Prefix() *NetworkInstance_Protocol_Static_PrefixPathAny {
	return &NetworkInstance_Protocol_Static_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/config/set-tag"
func (n *NetworkInstance_Protocol_StaticPath) SetTag() *NetworkInstance_Protocol_Static_SetTagPath {
	return &NetworkInstance_Protocol_Static_SetTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/config/set-tag"
func (n *NetworkInstance_Protocol_StaticPathAny) SetTag() *NetworkInstance_Protocol_Static_SetTagPathAny {
	return &NetworkInstance_Protocol_Static_SetTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Static_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/index YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/index YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_IndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/metric YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/metric YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_PreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/preference YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_PreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_PreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/preference YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_PreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_RecursePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/recurse YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_RecursePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_RecursePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/recurse YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_RecursePathAny struct {
	*ygot.NodePath
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd"
func (n *NetworkInstance_Protocol_Static_NextHopPath) EnableBfd() *NetworkInstance_Protocol_Static_NextHop_EnableBfdPath {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) EnableBfd() *NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): An user-specified identifier utilised to uniquely reference
// the next-hop entry in the next-hop list. The value of this
// index has no semantic meaning other than for referencing
// the entry.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/index"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Index() *NetworkInstance_Protocol_Static_NextHop_IndexPath {
	return &NetworkInstance_Protocol_Static_NextHop_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): An user-specified identifier utilised to uniquely reference
// the next-hop entry in the next-hop list. The value of this
// index has no semantic meaning other than for referencing
// the entry.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/index"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Index() *NetworkInstance_Protocol_Static_NextHop_IndexPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref"
func (n *NetworkInstance_Protocol_Static_NextHopPath) InterfaceRef() *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) InterfaceRef() *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): A metric (or cost) which is utilized to specify the order of
// selection of the next-hop entry.  The lower the metric, the more
// preferable the prefix entry is.  When this value is not
// specified, the metric is inherited from the default metric of
// the implementation for static route entries.  When multiple
// next-hops are specified for a static route, the metric is
// utilized to determine which of the next-hops to be installed in
// the RIB.  When multiple next-hops have the same metric (be it
// specified, or simply the default) then these next-hops should
// all be installed in the RIB.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/metric"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Metric() *NetworkInstance_Protocol_Static_NextHop_MetricPath {
	return &NetworkInstance_Protocol_Static_NextHop_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): A metric (or cost) which is utilized to specify the order of
// selection of the next-hop entry.  The lower the metric, the more
// preferable the prefix entry is.  When this value is not
// specified, the metric is inherited from the default metric of
// the implementation for static route entries.  When multiple
// next-hops are specified for a static route, the metric is
// utilized to determine which of the next-hops to be installed in
// the RIB.  When multiple next-hops have the same metric (be it
// specified, or simply the default) then these next-hops should
// all be installed in the RIB.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/metric"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Metric() *NetworkInstance_Protocol_Static_NextHop_MetricPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): The next-hop that is to be used for the static route
// - this may be specified as an IP address, an interface
// or a pre-defined next-hop type - for instance, DROP or
// LOCAL_LINK. When this leaf is not set, and the interface-ref
// value is specified for the next-hop, then the system should
// treat the prefix as though it is directly connected to the
// interface.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/next-hop"
func (n *NetworkInstance_Protocol_Static_NextHopPath) NextHop() *NetworkInstance_Protocol_Static_NextHop_NextHopPath {
	return &NetworkInstance_Protocol_Static_NextHop_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): The next-hop that is to be used for the static route
// - this may be specified as an IP address, an interface
// or a pre-defined next-hop type - for instance, DROP or
// LOCAL_LINK. When this leaf is not set, and the interface-ref
// value is specified for the next-hop, then the system should
// treat the prefix as though it is directly connected to the
// interface.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/next-hop"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) NextHop() *NetworkInstance_Protocol_Static_NextHop_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Administrative Distance (preference) of the entry.  The
// preference defines the order of selection when multiple
// sources (protocols, static, etc.) contribute to the same
// prefix entry.  The lower the preference, the more preferable the
// prefix is.  When this value is not specified, the preference is
// inherited from the default preference of the implementation for
// static routes.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/preference"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Preference() *NetworkInstance_Protocol_Static_NextHop_PreferencePath {
	return &NetworkInstance_Protocol_Static_NextHop_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Administrative Distance (preference) of the entry.  The
// preference defines the order of selection when multiple
// sources (protocols, static, etc.) contribute to the same
// prefix entry.  The lower the preference, the more preferable the
// prefix is.  When this value is not specified, the preference is
// inherited from the default preference of the implementation for
// static routes.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/preference"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Preference() *NetworkInstance_Protocol_Static_NextHop_PreferencePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Recurse (leaf): Determines whether the next-hop should be allowed to
// be looked up recursively - i.e., via a RIB entry which has
// been installed by a routing protocol, or another static route
// - rather than needing to be connected directly to an
// interface of the local system within the current network
// instance. When the interface reference specified within the
// next-hop entry is set (i.e., is not null) then forwarding is
// restricted to being via the interface specified - and
// recursion is hence disabled.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/recurse"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/recurse"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Recurse() *NetworkInstance_Protocol_Static_NextHop_RecursePath {
	return &NetworkInstance_Protocol_Static_NextHop_RecursePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "recurse"},
			map[string]interface{}{},
			n,
		),
	}
}

// Recurse (leaf): Determines whether the next-hop should be allowed to
// be looked up recursively - i.e., via a RIB entry which has
// been installed by a routing protocol, or another static route
// - rather than needing to be connected directly to an
// interface of the local system within the current network
// instance. When the interface reference specified within the
// next-hop entry is set (i.e., is not null) then forwarding is
// restricted to being via the interface specified - and
// recursion is hence disabled.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/recurse"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/recurse"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Recurse() *NetworkInstance_Protocol_Static_NextHop_RecursePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_RecursePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "recurse"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Static_NextHop_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_RouteLimitPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit YANG schema element.
type NetworkInstance_RouteLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit YANG schema element.
type NetworkInstance_RouteLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AfiPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/config/afi YANG schema element.
type NetworkInstance_RouteLimit_AfiPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AfiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/config/afi YANG schema element.
type NetworkInstance_RouteLimit_AfiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AlarmThresholdPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/config/alarm-threshold YANG schema element.
type NetworkInstance_RouteLimit_AlarmThresholdPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AlarmThresholdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/config/alarm-threshold YANG schema element.
type NetworkInstance_RouteLimit_AlarmThresholdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_MaximumPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/config/maximum YANG schema element.
type NetworkInstance_RouteLimit_MaximumPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_MaximumPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/config/maximum YANG schema element.
type NetworkInstance_RouteLimit_MaximumPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_WarningOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/config/warning-only YANG schema element.
type NetworkInstance_RouteLimit_WarningOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_WarningOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/config/warning-only YANG schema element.
type NetworkInstance_RouteLimit_WarningOnlyPathAny struct {
	*ygot.NodePath
}

// Afi (leaf): The address family for which the route limit applies.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/config/afi"
func (n *NetworkInstance_RouteLimitPath) Afi() *NetworkInstance_RouteLimit_AfiPath {
	return &NetworkInstance_RouteLimit_AfiPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi"},
			map[string]interface{}{},
			n,
		),
	}
}

// Afi (leaf): The address family for which the route limit applies.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/config/afi"
func (n *NetworkInstance_RouteLimitPathAny) Afi() *NetworkInstance_RouteLimit_AfiPathAny {
	return &NetworkInstance_RouteLimit_AfiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmThreshold (leaf): When specified, an alarm should be generated when the threshold
// number of installed routes is reached.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/alarm-threshold"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/config/alarm-threshold"
func (n *NetworkInstance_RouteLimitPath) AlarmThreshold() *NetworkInstance_RouteLimit_AlarmThresholdPath {
	return &NetworkInstance_RouteLimit_AlarmThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "alarm-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmThreshold (leaf): When specified, an alarm should be generated when the threshold
// number of installed routes is reached.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/alarm-threshold"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/config/alarm-threshold"
func (n *NetworkInstance_RouteLimitPathAny) AlarmThreshold() *NetworkInstance_RouteLimit_AlarmThresholdPathAny {
	return &NetworkInstance_RouteLimit_AlarmThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "alarm-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// Maximum (leaf): The maximum number of routes for the address family. The
// system should not install more than maximum number of
// prefixes into the RIB unless the warning-only leaf is specified.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/config/maximum"
func (n *NetworkInstance_RouteLimitPath) Maximum() *NetworkInstance_RouteLimit_MaximumPath {
	return &NetworkInstance_RouteLimit_MaximumPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum"},
			map[string]interface{}{},
			n,
		),
	}
}

// Maximum (leaf): The maximum number of routes for the address family. The
// system should not install more than maximum number of
// prefixes into the RIB unless the warning-only leaf is specified.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/config/maximum"
func (n *NetworkInstance_RouteLimitPathAny) Maximum() *NetworkInstance_RouteLimit_MaximumPathAny {
	return &NetworkInstance_RouteLimit_MaximumPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningOnly (leaf): When specified, the route limit specified is considered only as
// a warning - and routes should continue to be installed into the
// RIB over the limit specified in the maximum leaf.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-only"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/config/warning-only"
func (n *NetworkInstance_RouteLimitPath) WarningOnly() *NetworkInstance_RouteLimit_WarningOnlyPath {
	return &NetworkInstance_RouteLimit_WarningOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningOnly (leaf): When specified, the route limit specified is considered only as
// a warning - and routes should continue to be installed into the
// RIB over the limit specified in the maximum leaf.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-only"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/config/warning-only"
func (n *NetworkInstance_RouteLimitPathAny) WarningOnly() *NetworkInstance_RouteLimit_WarningOnlyPathAny {
	return &NetworkInstance_RouteLimit_WarningOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRoutingPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing YANG schema element.
type NetworkInstance_SegmentRoutingPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRoutingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing YANG schema element.
type NetworkInstance_SegmentRoutingPathAny struct {
	*ygot.NodePath
}

// SrgbAny (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPath) SrgbAny() *NetworkInstance_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// SrgbAny (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPathAny) SrgbAny() *NetworkInstance_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// Srgb (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPath) Srgb(LocalId string) *NetworkInstance_SegmentRouting_SrgbPath {
	return &NetworkInstance_SegmentRouting_SrgbPath{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// Srgb (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPathAny) Srgb(LocalId string) *NetworkInstance_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// SrlbAny (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPath) SrlbAny() *NetworkInstance_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// SrlbAny (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPathAny) SrlbAny() *NetworkInstance_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// Srlb (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPath) Srlb(LocalId string) *NetworkInstance_SegmentRouting_SrlbPath {
	return &NetworkInstance_SegmentRouting_SrlbPath{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// Srlb (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPathAny) Srlb(LocalId string) *NetworkInstance_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_SrgbPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb YANG schema element.
type NetworkInstance_SegmentRouting_SrgbPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_SrgbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb YANG schema element.
type NetworkInstance_SegmentRouting_SrgbPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/config/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/config/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/config/ipv6-prefixes YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/config/ipv6-prefixes YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_LocalIdPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/config/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_LocalIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/config/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/config/mpls-label-blocks YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/config/mpls-label-blocks YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny struct {
	*ygot.NodePath
}

// DataplaneType (leaf): The dataplane being used to instantiate the SRGB. When MPLS is specified
// the set of MPLS label blocks that are defined in the mpls-label-blocks
// list are used to make up the SRGB. When IPv6 is specified, the set of IPv6
// prefixes specified in the ipv6-prefixes list are used.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/config/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrgbPath) DataplaneType() *NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath {
	return &NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataplaneType (leaf): The dataplane being used to instantiate the SRGB. When MPLS is specified
// the set of MPLS label blocks that are defined in the mpls-label-blocks
// list are used to make up the SRGB. When IPv6 is specified, the set of IPv6
// prefixes specified in the ipv6-prefixes list are used.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/config/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) DataplaneType() *NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny {
	return &NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefixes (leaf-list): A list of IPv6 prefixes which are to be used for segment routing using
// the IPv6 dataplane.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ipv6-prefixes"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/config/ipv6-prefixes"
func (n *NetworkInstance_SegmentRouting_SrgbPath) Ipv6Prefixes() *NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath {
	return &NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ipv6-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefixes (leaf-list): A list of IPv6 prefixes which are to be used for segment routing using
// the IPv6 dataplane.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ipv6-prefixes"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/config/ipv6-prefixes"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) Ipv6Prefixes() *NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ipv6-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): Unique identifier for the segment routing global block on
// the local system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/config/local-id"
func (n *NetworkInstance_SegmentRouting_SrgbPath) LocalId() *NetworkInstance_SegmentRouting_Srgb_LocalIdPath {
	return &NetworkInstance_SegmentRouting_Srgb_LocalIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): Unique identifier for the segment routing global block on
// the local system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/config/local-id"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) LocalId() *NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlocks (leaf-list): A list of refences to the label blocks that are used to make
// up the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mpls-label-blocks"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/config/mpls-label-blocks"
func (n *NetworkInstance_SegmentRouting_SrgbPath) MplsLabelBlocks() *NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath {
	return &NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mpls-label-blocks"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlocks (leaf-list): A list of refences to the label blocks that are used to make
// up the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mpls-label-blocks"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/config/mpls-label-blocks"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) MplsLabelBlocks() *NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mpls-label-blocks"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_SrlbPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb YANG schema element.
type NetworkInstance_SegmentRouting_SrlbPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_SrlbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb YANG schema element.
type NetworkInstance_SegmentRouting_SrlbPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/config/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/config/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/config/ipv6-prefix YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/config/ipv6-prefix YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_LocalIdPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/config/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_LocalIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/config/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/config/mpls-label-block YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/config/mpls-label-block YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny struct {
	*ygot.NodePath
}

// DataplaneType (leaf): The dataplane that is to be used for the Segment Routing Local Block.
// When MPLS is specified, the local block corresponds to a block of MPLS
// labels; when IPv6 is specified it corresponds to an IPv6 prefix.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/config/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrlbPath) DataplaneType() *NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath {
	return &NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataplaneType (leaf): The dataplane that is to be used for the Segment Routing Local Block.
// When MPLS is specified, the local block corresponds to a block of MPLS
// labels; when IPv6 is specified it corresponds to an IPv6 prefix.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/config/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) DataplaneType() *NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny {
	return &NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefix (leaf): The IPv6 prefix that is used for the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ipv6-prefix"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/config/ipv6-prefix"
func (n *NetworkInstance_SegmentRouting_SrlbPath) Ipv6Prefix() *NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath {
	return &NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ipv6-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefix (leaf): The IPv6 prefix that is used for the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ipv6-prefix"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/config/ipv6-prefix"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) Ipv6Prefix() *NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny {
	return &NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ipv6-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): A unique local identifier used for the Segment Routing Local Block.
// The identifier is used when referencing the SRLB within other
// contexts.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/config/local-id"
func (n *NetworkInstance_SegmentRouting_SrlbPath) LocalId() *NetworkInstance_SegmentRouting_Srlb_LocalIdPath {
	return &NetworkInstance_SegmentRouting_Srlb_LocalIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): A unique local identifier used for the Segment Routing Local Block.
// The identifier is used when referencing the SRLB within other
// contexts.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/config/local-id"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) LocalId() *NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny {
	return &NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlock (leaf): A reference to the MPLS label block that is used to contain the
// SIDs of the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mpls-label-block"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/config/mpls-label-block"
func (n *NetworkInstance_SegmentRouting_SrlbPath) MplsLabelBlock() *NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath {
	return &NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mpls-label-block"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlock (leaf): A reference to the MPLS label block that is used to contain the
// SIDs of the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mpls-label-block"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/config/mpls-label-block"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) MplsLabelBlock() *NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny {
	return &NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mpls-label-block"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_TablePath represents the /openconfig-network-instance/network-instances/network-instance/tables/table YANG schema element.
type NetworkInstance_TablePath struct {
	*ygot.NodePath
}

// NetworkInstance_TablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/tables/table YANG schema element.
type NetworkInstance_TablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Table_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/tables/table/config/address-family YANG schema element.
type NetworkInstance_Table_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Table_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/tables/table/config/address-family YANG schema element.
type NetworkInstance_Table_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Table_ProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/tables/table/config/protocol YANG schema element.
type NetworkInstance_Table_ProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_Table_ProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/tables/table/config/protocol YANG schema element.
type NetworkInstance_Table_ProtocolPathAny struct {
	*ygot.NodePath
}

// AddressFamily (leaf): The address family (IPv4, IPv6) of the table's entries
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/address-family"
// Path from root: "/network-instances/network-instance/tables/table/config/address-family"
func (n *NetworkInstance_TablePath) AddressFamily() *NetworkInstance_Table_AddressFamilyPath {
	return &NetworkInstance_Table_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddressFamily (leaf): The address family (IPv4, IPv6) of the table's entries
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/address-family"
// Path from root: "/network-instances/network-instance/tables/table/config/address-family"
func (n *NetworkInstance_TablePathAny) AddressFamily() *NetworkInstance_Table_AddressFamilyPathAny {
	return &NetworkInstance_Table_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): Reference to the protocol that the table is associated with.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/protocol"
// Path from root: "/network-instances/network-instance/tables/table/config/protocol"
func (n *NetworkInstance_TablePath) Protocol() *NetworkInstance_Table_ProtocolPath {
	return &NetworkInstance_Table_ProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): Reference to the protocol that the table is associated with.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/protocol"
// Path from root: "/network-instances/network-instance/tables/table/config/protocol"
func (n *NetworkInstance_TablePathAny) Protocol() *NetworkInstance_Table_ProtocolPathAny {
	return &NetworkInstance_Table_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_TableConnectionPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection YANG schema element.
type NetworkInstance_TableConnectionPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnectionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection YANG schema element.
type NetworkInstance_TableConnectionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/address-family YANG schema element.
type NetworkInstance_TableConnection_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/address-family YANG schema element.
type NetworkInstance_TableConnection_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/default-import-policy YANG schema element.
type NetworkInstance_TableConnection_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/default-import-policy YANG schema element.
type NetworkInstance_TableConnection_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DisableMetricPropagationPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/disable-metric-propagation YANG schema element.
type NetworkInstance_TableConnection_DisableMetricPropagationPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DisableMetricPropagationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/disable-metric-propagation YANG schema element.
type NetworkInstance_TableConnection_DisableMetricPropagationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DstProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/dst-protocol YANG schema element.
type NetworkInstance_TableConnection_DstProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DstProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/dst-protocol YANG schema element.
type NetworkInstance_TableConnection_DstProtocolPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/import-policy YANG schema element.
type NetworkInstance_TableConnection_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/import-policy YANG schema element.
type NetworkInstance_TableConnection_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_SrcProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/src-protocol YANG schema element.
type NetworkInstance_TableConnection_SrcProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_SrcProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/src-protocol YANG schema element.
type NetworkInstance_TableConnection_SrcProtocolPathAny struct {
	*ygot.NodePath
}

// AddressFamily (leaf): The address family associated with the connection. This
// must be defined for the source protocol. The target
// address family is implicitly defined by the address family
// specified for the source protocol.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/address-family"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/address-family"
func (n *NetworkInstance_TableConnectionPath) AddressFamily() *NetworkInstance_TableConnection_AddressFamilyPath {
	return &NetworkInstance_TableConnection_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddressFamily (leaf): The address family associated with the connection. This
// must be defined for the source protocol. The target
// address family is implicitly defined by the address family
// specified for the source protocol.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/address-family"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/address-family"
func (n *NetworkInstance_TableConnectionPathAny) AddressFamily() *NetworkInstance_TableConnection_AddressFamilyPathAny {
	return &NetworkInstance_TableConnection_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/default-import-policy"
func (n *NetworkInstance_TableConnectionPath) DefaultImportPolicy() *NetworkInstance_TableConnection_DefaultImportPolicyPath {
	return &NetworkInstance_TableConnection_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/default-import-policy"
func (n *NetworkInstance_TableConnectionPathAny) DefaultImportPolicy() *NetworkInstance_TableConnection_DefaultImportPolicyPathAny {
	return &NetworkInstance_TableConnection_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableMetricPropagation (leaf): By default a system may reflect the metric specified in
// the destination protocol according to that which is set in
// the source protocol. For example:
// - IS-IS metric may be reflected in BGP MED (and vice versa)
// - OSPF metric may be reflected in the BGP MED (and vice versa)
// When this leaf is set to true, this reflection behaviour MUST be
// disabled, and rather the metric must be set to the default value,
// or explicitly set by policy.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-metric-propagation"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/disable-metric-propagation"
func (n *NetworkInstance_TableConnectionPath) DisableMetricPropagation() *NetworkInstance_TableConnection_DisableMetricPropagationPath {
	return &NetworkInstance_TableConnection_DisableMetricPropagationPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-metric-propagation"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableMetricPropagation (leaf): By default a system may reflect the metric specified in
// the destination protocol according to that which is set in
// the source protocol. For example:
// - IS-IS metric may be reflected in BGP MED (and vice versa)
// - OSPF metric may be reflected in the BGP MED (and vice versa)
// When this leaf is set to true, this reflection behaviour MUST be
// disabled, and rather the metric must be set to the default value,
// or explicitly set by policy.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-metric-propagation"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/disable-metric-propagation"
func (n *NetworkInstance_TableConnectionPathAny) DisableMetricPropagation() *NetworkInstance_TableConnection_DisableMetricPropagationPathAny {
	return &NetworkInstance_TableConnection_DisableMetricPropagationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-metric-propagation"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstProtocol (leaf): The destination protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dst-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/dst-protocol"
func (n *NetworkInstance_TableConnectionPath) DstProtocol() *NetworkInstance_TableConnection_DstProtocolPath {
	return &NetworkInstance_TableConnection_DstProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dst-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstProtocol (leaf): The destination protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dst-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/dst-protocol"
func (n *NetworkInstance_TableConnectionPathAny) DstProtocol() *NetworkInstance_TableConnection_DstProtocolPathAny {
	return &NetworkInstance_TableConnection_DstProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dst-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/import-policy"
func (n *NetworkInstance_TableConnectionPath) ImportPolicy() *NetworkInstance_TableConnection_ImportPolicyPath {
	return &NetworkInstance_TableConnection_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/import-policy"
func (n *NetworkInstance_TableConnectionPathAny) ImportPolicy() *NetworkInstance_TableConnection_ImportPolicyPathAny {
	return &NetworkInstance_TableConnection_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcProtocol (leaf): The source protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/src-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/src-protocol"
func (n *NetworkInstance_TableConnectionPath) SrcProtocol() *NetworkInstance_TableConnection_SrcProtocolPath {
	return &NetworkInstance_TableConnection_SrcProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "src-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcProtocol (leaf): The source protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/src-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/src-protocol"
func (n *NetworkInstance_TableConnectionPathAny) SrcProtocol() *NetworkInstance_TableConnection_SrcProtocolPathAny {
	return &NetworkInstance_TableConnection_SrcProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "src-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_VlanPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan YANG schema element.
type NetworkInstance_VlanPath struct {
	*ygot.NodePath
}

// NetworkInstance_VlanPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan YANG schema element.
type NetworkInstance_VlanPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_NamePath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/config/name YANG schema element.
type NetworkInstance_Vlan_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/config/name YANG schema element.
type NetworkInstance_Vlan_NamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_StatusPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/config/status YANG schema element.
type NetworkInstance_Vlan_StatusPath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_StatusPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/config/status YANG schema element.
type NetworkInstance_Vlan_StatusPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_VlanIdPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/config/vlan-id YANG schema element.
type NetworkInstance_Vlan_VlanIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_VlanIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/config/vlan-id YANG schema element.
type NetworkInstance_Vlan_VlanIdPathAny struct {
	*ygot.NodePath
}

// Name (leaf): Interface VLAN name.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/vlans/vlan/config/name"
func (n *NetworkInstance_VlanPath) Name() *NetworkInstance_Vlan_NamePath {
	return &NetworkInstance_Vlan_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Interface VLAN name.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/vlans/vlan/config/name"
func (n *NetworkInstance_VlanPathAny) Name() *NetworkInstance_Vlan_NamePathAny {
	return &NetworkInstance_Vlan_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Status (leaf): Admin state of the VLAN
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/status"
// Path from root: "/network-instances/network-instance/vlans/vlan/config/status"
func (n *NetworkInstance_VlanPath) Status() *NetworkInstance_Vlan_StatusPath {
	return &NetworkInstance_Vlan_StatusPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "status"},
			map[string]interface{}{},
			n,
		),
	}
}

// Status (leaf): Admin state of the VLAN
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/status"
// Path from root: "/network-instances/network-instance/vlans/vlan/config/status"
func (n *NetworkInstance_VlanPathAny) Status() *NetworkInstance_Vlan_StatusPathAny {
	return &NetworkInstance_Vlan_StatusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "status"},
			map[string]interface{}{},
			n,
		),
	}
}

// VlanId (leaf): Interface VLAN id.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/vlan-id"
// Path from root: "/network-instances/network-instance/vlans/vlan/config/vlan-id"
func (n *NetworkInstance_VlanPath) VlanId() *NetworkInstance_Vlan_VlanIdPath {
	return &NetworkInstance_Vlan_VlanIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "vlan-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// VlanId (leaf): Interface VLAN id.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/vlan-id"
// Path from root: "/network-instances/network-instance/vlans/vlan/config/vlan-id"
func (n *NetworkInstance_VlanPathAny) VlanId() *NetworkInstance_Vlan_VlanIdPathAny {
	return &NetworkInstance_Vlan_VlanIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "vlan-id"},
			map[string]interface{}{},
			n,
		),
	}
}
